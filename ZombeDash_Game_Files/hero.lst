   1               		.file	"hero.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.start_hero,"ax",@progbits
  11               	.global	start_hero
  13               	start_hero:
  14               	.LFB7:
  15               		.file 1 "hero.c"
   1:hero.c        **** /*
   2:hero.c        ****  * hero.c
   3:hero.c        ****  *
   4:hero.c        ****  *  Created on: 8 May 2015
   5:hero.c        ****  *      Author: Jai Spicer
   6:hero.c        ****  */
   7:hero.c        **** #include <util/delay.h>
   8:hero.c        **** 
   9:hero.c        **** #include "sprite.h"
  10:hero.c        **** #include "graphics.h"
  11:hero.c        **** #include "friendly_ports.h"
  12:hero.c        **** 
  13:hero.c        **** #include "hero.h"
  14:hero.c        **** #include "zombies.h"
  15:hero.c        **** #include "lives.h"
  16:hero.c        **** 
  17:hero.c        **** int px = 1;
  18:hero.c        **** int py = 0;
  19:hero.c        **** 
  20:hero.c        **** Sprite hero;
  21:hero.c        **** Sprite * hero_prt = &hero;
  22:hero.c        **** 
  23:hero.c        **** byte bitmap_hero[] = {
  24:hero.c        **** 			BYTE( 11100000 ),
  25:hero.c        **** 			BYTE( 01000000 ),
  26:hero.c        **** 			BYTE( 11100000 )
  27:hero.c        **** 	};
  28:hero.c        **** 
  29:hero.c        **** void start_hero() {
  16               		.loc 1 29 0
  17               		.cfi_startproc
  18 0000 EF92      		push r14
  19               	.LCFI0:
  20               		.cfi_def_cfa_offset 3
  21               		.cfi_offset 14, -2
  22 0002 FF92      		push r15
  23               	.LCFI1:
  24               		.cfi_def_cfa_offset 4
  25               		.cfi_offset 15, -3
  26 0004 0F93      		push r16
  27               	.LCFI2:
  28               		.cfi_def_cfa_offset 5
  29               		.cfi_offset 16, -4
  30               	/* prologue: function */
  31               	/* frame size = 0 */
  32               	/* stack size = 3 */
  33               	.L__stack_usage = 3
  34               	.LVL0:
  30:hero.c        **** 
  31:hero.c        **** 
  32:hero.c        **** 	const int hero_width = 3; // Maybe 4
  33:hero.c        **** 	const int hero_height = 3;
  34:hero.c        **** 
  35:hero.c        **** //	Sprite hero;
  36:hero.c        **** 
  37:hero.c        **** 	init_sprite( &hero, 38,28,hero_width,hero_height, bitmap_hero );
  35               		.loc 1 37 0
  36 0006 80E0      		ldi r24,lo8(bitmap_hero)
  37 0008 E82E      		mov r14,r24
  38 000a 80E0      		ldi r24,hi8(bitmap_hero)
  39 000c F82E      		mov r15,r24
  40 000e 03E0      		ldi r16,lo8(3)
  41 0010 23E0      		ldi r18,lo8(3)
  42 0012 4CE1      		ldi r20,lo8(28)
  43 0014 66E2      		ldi r22,lo8(38)
  44 0016 80E0      		ldi r24,lo8(hero)
  45 0018 90E0      		ldi r25,hi8(hero)
  46 001a 0E94 0000 		call init_sprite
  47               	.LVL1:
  38:hero.c        **** 	hero.is_visible = 1;
  48               		.loc 1 38 0
  49 001e 81E0      		ldi r24,lo8(1)
  50 0020 8093 0000 		sts hero+10,r24
  39:hero.c        **** 	hero_prt->is_visible = 1;
  51               		.loc 1 39 0
  52 0024 E091 0000 		lds r30,hero_prt
  53 0028 F091 0000 		lds r31,hero_prt+1
  54 002c 8287      		std Z+10,r24
  40:hero.c        **** 
  41:hero.c        **** 	hero.dx = 1;
  55               		.loc 1 41 0
  56 002e 80E0      		ldi r24,0
  57 0030 90E0      		ldi r25,0
  58 0032 A0E8      		ldi r26,lo8(-128)
  59 0034 BFE3      		ldi r27,lo8(63)
  60 0036 8093 0000 		sts hero+13,r24
  61 003a 9093 0000 		sts hero+13+1,r25
  62 003e A093 0000 		sts hero+13+2,r26
  63 0042 B093 0000 		sts hero+13+3,r27
  42:hero.c        **** 	hero.dy = 0;
  64               		.loc 1 42 0
  65 0046 1092 0000 		sts hero+17,__zero_reg__
  66 004a 1092 0000 		sts hero+17+1,__zero_reg__
  67 004e 1092 0000 		sts hero+17+2,__zero_reg__
  68 0052 1092 0000 		sts hero+17+3,__zero_reg__
  43:hero.c        **** 
  44:hero.c        **** 	draw_sprite( &hero );
  69               		.loc 1 44 0
  70 0056 80E0      		ldi r24,lo8(hero)
  71 0058 90E0      		ldi r25,hi8(hero)
  72               	/* epilogue start */
  45:hero.c        **** 
  46:hero.c        **** 
  47:hero.c        **** }
  73               		.loc 1 47 0
  74 005a 0F91      		pop r16
  75 005c FF90      		pop r15
  76 005e EF90      		pop r14
  44:hero.c        **** 	draw_sprite( &hero );
  77               		.loc 1 44 0
  78 0060 0C94 0000 		jmp draw_sprite
  79               	.LVL2:
  80               		.cfi_endproc
  81               	.LFE7:
  83               	.global	__eqsf2
  84               	.global	__addsf3
  85               	.global	__floatsisf
  86               	.global	__gesf2
  87               	.global	__subsf3
  88               	.global	__ltsf2
  89               		.section	.text.move_hero,"ax",@progbits
  90               	.global	move_hero
  92               	move_hero:
  93               	.LFB8:
  48:hero.c        **** 
  49:hero.c        **** void move_hero( Sprite * hero ) {
  94               		.loc 1 49 0
  95               		.cfi_startproc
  96               	.LVL3:
  97 0000 8F92      		push r8
  98               	.LCFI3:
  99               		.cfi_def_cfa_offset 3
 100               		.cfi_offset 8, -2
 101 0002 9F92      		push r9
 102               	.LCFI4:
 103               		.cfi_def_cfa_offset 4
 104               		.cfi_offset 9, -3
 105 0004 AF92      		push r10
 106               	.LCFI5:
 107               		.cfi_def_cfa_offset 5
 108               		.cfi_offset 10, -4
 109 0006 BF92      		push r11
 110               	.LCFI6:
 111               		.cfi_def_cfa_offset 6
 112               		.cfi_offset 11, -5
 113 0008 CF92      		push r12
 114               	.LCFI7:
 115               		.cfi_def_cfa_offset 7
 116               		.cfi_offset 12, -6
 117 000a DF92      		push r13
 118               	.LCFI8:
 119               		.cfi_def_cfa_offset 8
 120               		.cfi_offset 13, -7
 121 000c EF92      		push r14
 122               	.LCFI9:
 123               		.cfi_def_cfa_offset 9
 124               		.cfi_offset 14, -8
 125 000e FF92      		push r15
 126               	.LCFI10:
 127               		.cfi_def_cfa_offset 10
 128               		.cfi_offset 15, -9
 129 0010 0F93      		push r16
 130               	.LCFI11:
 131               		.cfi_def_cfa_offset 11
 132               		.cfi_offset 16, -10
 133 0012 1F93      		push r17
 134               	.LCFI12:
 135               		.cfi_def_cfa_offset 12
 136               		.cfi_offset 17, -11
 137 0014 CF93      		push r28
 138               	.LCFI13:
 139               		.cfi_def_cfa_offset 13
 140               		.cfi_offset 28, -12
 141 0016 DF93      		push r29
 142               	.LCFI14:
 143               		.cfi_def_cfa_offset 14
 144               		.cfi_offset 29, -13
 145               	/* prologue: function */
 146               	/* frame size = 0 */
 147               	/* stack size = 12 */
 148               	.L__stack_usage = 12
 149 0018 EC01      		movw r28,r24
  50:hero.c        **** 
  51:hero.c        **** 	if ( ( hero->dx == 1) && ( pressed ( SW1 ) ) ) { // Right Button, turn right, down
 150               		.loc 1 51 0
 151 001a 20E0      		ldi r18,0
 152 001c 30E0      		ldi r19,0
 153 001e 40E8      		ldi r20,lo8(-128)
 154 0020 5FE3      		ldi r21,lo8(63)
 155 0022 6D85      		ldd r22,Y+13
 156 0024 7E85      		ldd r23,Y+14
 157 0026 8F85      		ldd r24,Y+15
 158 0028 9889      		ldd r25,Y+16
 159 002a 0E94 0000 		call __eqsf2
 160               	.LVL4:
 161 002e 8111      		cpse r24,__zero_reg__
 162 0030 00C0      		rjmp .L3
 163               		.loc 1 51 0 is_stmt 0 discriminator 1
 164 0032 199B      		sbis 0x3,1
 165 0034 00C0      		rjmp .L3
 166               	.LVL5:
 167               	.LBB18:
 168               	.LBB19:
 169               		.file 2 "/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h"
   1:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****    All rights reserved.
   5:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 
   6:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 
   9:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 
  12:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****      distribution.
  16:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 
  17:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 
  21:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 
  33:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** /* $Id: delay.h.in 2251 2011-09-14 08:20:33Z joerg_wunsch $ */
  34:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 
  35:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 
  38:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** #ifndef __HAS_DELAY_CYCLES
  39:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** #define __HAS_DELAY_CYCLES 1
  40:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** #endif
  41:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 
  42:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** #include <inttypes.h>
  43:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** #include <util/delay_basic.h>
  44:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** #include <math.h>
  45:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 
  46:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** /** \file */
  47:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  48:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****     \code
  49:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  50:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  51:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****     #include <util/delay.h>
  52:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****     \endcode
  53:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 
  54:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  55:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  56:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  57:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****     used.
  58:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 
  59:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  60:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  61:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  62:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  63:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  64:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  65:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  66:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  67:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 
  68:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  69:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  70:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  71:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  72:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  73:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  74:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  75:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****     routines linked into the application.
  76:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 
  77:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  78:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  79:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  80:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 
  81:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** */
  82:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 
  83:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  84:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** static inline void _delay_us(double __us) __attribute__((always_inline));
  85:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** static inline void _delay_ms(double __ms) __attribute__((always_inline));
  86:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** #endif
  87:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 
  88:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** #ifndef F_CPU
  89:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  90:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  91:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** # define F_CPU 1000000UL
  92:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** #endif
  93:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 
  94:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** #ifndef __OPTIMIZE__
  95:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
  96:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** #endif
  97:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 
  98:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
  99:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 100:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****   __STDC_HOSTED__
 101:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** #  include <math.h>
 102:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** #endif
 103:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 
 104:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** /**
 105:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****    \ingroup util_delay
 106:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 
 107:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 108:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 
 109:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 110:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 111:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 
 112:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 113:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 
 114:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 115:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 116:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 117:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 118:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 119:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 
 120:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles(unsigned long)
 121:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 122:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 123:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****    no delay i.e., 0ms.
 124:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 
 125:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****    Conversion of __us into clock cycles may not always result in integer.
 126:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****    By default, the clock cycles rounded up to next integer. This ensures that
 127:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****    the user gets atleast __us microseconds of delay.
 128:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 
 129:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****    Alternatively, user can define __DELAY_ROUND_DOWN__ and __DELAY_ROUND_CLOSEST__
 130:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****    to round down and round to closest integer.
 131:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 
 132:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****    Note: The new implementation of _delay_ms(double __ms) with 
 133:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****     __builtin_avr_delay_cycles(unsigned long) support is not backward compatible. 
 134:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****    User can define __DELAY_BACKWARD_COMPATIBLE__ to get a backward compatible delay.
 135:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****    Also, the backward compatible
 136:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****    algorithm will be chosen if the code is compiled in a <em>freestanding
 137:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****    environment</em> (GCC option \c -ffreestanding), as the math functions
 138:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****    required for rounding are not available to the compiler then.
 139:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 
 140:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****  */
 141:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** void
 142:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** _delay_ms(double __ms)
 143:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** {
 144:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 	uint16_t __ticks;
 145:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 	double __tmp ; 
 146:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 147:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 148:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****   __STDC_HOSTED__
 149:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 150:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 151:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 152:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 
 153:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 154:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 155:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 
 156:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 157:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 158:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 
 159:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 	#else
 160:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 		//round up by default
 161:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 162:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 	#endif
 163:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 
 164:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 170               		.loc 2 164 0 is_stmt 1
 171 0036 2FEF      		ldi r18,lo8(159999)
 172 0038 80E7      		ldi r24,hi8(159999)
 173 003a 92E0      		ldi r25,hlo8(159999)
 174 003c 2150      		1: subi r18,1
 175 003e 8040      		sbci r24,0
 176 0040 9040      		sbci r25,0
 177 0042 01F4      		brne 1b
 178 0044 00C0      		rjmp .
 179 0046 0000      		nop
 180               	.LBE19:
 181               	.LBE18:
  52:hero.c        **** 		_delay_ms(100);
  53:hero.c        **** 		hero->dx = 0;
 182               		.loc 1 53 0
 183 0048 1D86      		std Y+13,__zero_reg__
 184 004a 1E86      		std Y+14,__zero_reg__
 185 004c 1F86      		std Y+15,__zero_reg__
 186 004e 188A      		std Y+16,__zero_reg__
  54:hero.c        **** 		hero->dy = 1;
 187               		.loc 1 54 0
 188 0050 80E0      		ldi r24,0
 189 0052 90E0      		ldi r25,0
 190 0054 A0E8      		ldi r26,lo8(-128)
 191 0056 BFE3      		ldi r27,lo8(63)
 192 0058 898B      		std Y+17,r24
 193 005a 9A8B      		std Y+18,r25
 194 005c AB8B      		std Y+19,r26
 195 005e BC8B      		std Y+20,r27
  55:hero.c        **** 		px = 0;
 196               		.loc 1 55 0
 197 0060 1092 0000 		sts px+1,__zero_reg__
 198 0064 1092 0000 		sts px,__zero_reg__
  56:hero.c        **** 		py = 1;
 199               		.loc 1 56 0
 200 0068 81E0      		ldi r24,lo8(1)
 201 006a 90E0      		ldi r25,0
 202 006c 9093 0000 		sts py+1,r25
 203 0070 8093 0000 		sts py,r24
 204               	.LVL6:
 205               	.L3:
  57:hero.c        **** 	}
  58:hero.c        **** 	if ( (hero->dx == -1) && ( pressed ( SW1 ) )) { // Right Button, turn right, up
 206               		.loc 1 58 0
 207 0074 20E0      		ldi r18,0
 208 0076 30E0      		ldi r19,0
 209 0078 40E8      		ldi r20,lo8(-128)
 210 007a 5FEB      		ldi r21,lo8(-65)
 211 007c 6D85      		ldd r22,Y+13
 212 007e 7E85      		ldd r23,Y+14
 213 0080 8F85      		ldd r24,Y+15
 214 0082 9889      		ldd r25,Y+16
 215 0084 0E94 0000 		call __eqsf2
 216               	.LVL7:
 217 0088 8111      		cpse r24,__zero_reg__
 218 008a 00C0      		rjmp .L5
 219               		.loc 1 58 0 is_stmt 0 discriminator 1
 220 008c 199B      		sbis 0x3,1
 221 008e 00C0      		rjmp .L5
 222               	.LVL8:
 223               	.LBB20:
 224               	.LBB21:
 225               		.loc 2 164 0 is_stmt 1
 226 0090 2FEF      		ldi r18,lo8(159999)
 227 0092 80E7      		ldi r24,hi8(159999)
 228 0094 92E0      		ldi r25,hlo8(159999)
 229 0096 2150      		1: subi r18,1
 230 0098 8040      		sbci r24,0
 231 009a 9040      		sbci r25,0
 232 009c 01F4      		brne 1b
 233 009e 00C0      		rjmp .
 234 00a0 0000      		nop
 235               	.LBE21:
 236               	.LBE20:
  59:hero.c        **** 		_delay_ms(100);
  60:hero.c        **** 		hero->dx = 0;
 237               		.loc 1 60 0
 238 00a2 1D86      		std Y+13,__zero_reg__
 239 00a4 1E86      		std Y+14,__zero_reg__
 240 00a6 1F86      		std Y+15,__zero_reg__
 241 00a8 188A      		std Y+16,__zero_reg__
  61:hero.c        **** 		hero->dy = -1;
 242               		.loc 1 61 0
 243 00aa 80E0      		ldi r24,0
 244 00ac 90E0      		ldi r25,0
 245 00ae A0E8      		ldi r26,lo8(-128)
 246 00b0 BFEB      		ldi r27,lo8(-65)
 247 00b2 898B      		std Y+17,r24
 248 00b4 9A8B      		std Y+18,r25
 249 00b6 AB8B      		std Y+19,r26
 250 00b8 BC8B      		std Y+20,r27
  62:hero.c        **** 		px = 0;
 251               		.loc 1 62 0
 252 00ba 1092 0000 		sts px+1,__zero_reg__
 253 00be 1092 0000 		sts px,__zero_reg__
  63:hero.c        **** 		py = -1;
 254               		.loc 1 63 0
 255 00c2 8FEF      		ldi r24,lo8(-1)
 256 00c4 9FEF      		ldi r25,lo8(-1)
 257 00c6 9093 0000 		sts py+1,r25
 258 00ca 8093 0000 		sts py,r24
 259               	.LVL9:
 260               	.L5:
  64:hero.c        **** 	}
  65:hero.c        **** 	if ( ( hero->dy == 1 ) && ( pressed ( SW1 ) )) { // Right Button, turn right, left
 261               		.loc 1 65 0
 262 00ce 20E0      		ldi r18,0
 263 00d0 30E0      		ldi r19,0
 264 00d2 40E8      		ldi r20,lo8(-128)
 265 00d4 5FE3      		ldi r21,lo8(63)
 266 00d6 6989      		ldd r22,Y+17
 267 00d8 7A89      		ldd r23,Y+18
 268 00da 8B89      		ldd r24,Y+19
 269 00dc 9C89      		ldd r25,Y+20
 270 00de 0E94 0000 		call __eqsf2
 271               	.LVL10:
 272 00e2 8111      		cpse r24,__zero_reg__
 273 00e4 00C0      		rjmp .L7
 274               		.loc 1 65 0 is_stmt 0 discriminator 1
 275 00e6 199B      		sbis 0x3,1
 276 00e8 00C0      		rjmp .L7
 277               	.LVL11:
 278               	.LBB22:
 279               	.LBB23:
 280               		.loc 2 164 0 is_stmt 1
 281 00ea 2FEF      		ldi r18,lo8(159999)
 282 00ec 80E7      		ldi r24,hi8(159999)
 283 00ee 92E0      		ldi r25,hlo8(159999)
 284 00f0 2150      		1: subi r18,1
 285 00f2 8040      		sbci r24,0
 286 00f4 9040      		sbci r25,0
 287 00f6 01F4      		brne 1b
 288 00f8 00C0      		rjmp .
 289 00fa 0000      		nop
 290               	.LBE23:
 291               	.LBE22:
  66:hero.c        **** 		_delay_ms(100);
  67:hero.c        **** 		hero->dx = -1;
 292               		.loc 1 67 0
 293 00fc 80E0      		ldi r24,0
 294 00fe 90E0      		ldi r25,0
 295 0100 A0E8      		ldi r26,lo8(-128)
 296 0102 BFEB      		ldi r27,lo8(-65)
 297 0104 8D87      		std Y+13,r24
 298 0106 9E87      		std Y+14,r25
 299 0108 AF87      		std Y+15,r26
 300 010a B88B      		std Y+16,r27
  68:hero.c        **** 		hero->dy = 0;
 301               		.loc 1 68 0
 302 010c 198A      		std Y+17,__zero_reg__
 303 010e 1A8A      		std Y+18,__zero_reg__
 304 0110 1B8A      		std Y+19,__zero_reg__
 305 0112 1C8A      		std Y+20,__zero_reg__
  69:hero.c        **** 		px = -1;
 306               		.loc 1 69 0
 307 0114 8FEF      		ldi r24,lo8(-1)
 308 0116 9FEF      		ldi r25,lo8(-1)
 309 0118 9093 0000 		sts px+1,r25
 310 011c 8093 0000 		sts px,r24
  70:hero.c        **** 		py = 0;
 311               		.loc 1 70 0
 312 0120 1092 0000 		sts py+1,__zero_reg__
 313 0124 1092 0000 		sts py,__zero_reg__
 314               	.LVL12:
 315               	.L7:
  71:hero.c        **** 	}
  72:hero.c        **** 	if ( ( hero->dy == -1 ) && ( pressed ( SW1 ) )) { // Right Button, turn right , right
 316               		.loc 1 72 0
 317 0128 20E0      		ldi r18,0
 318 012a 30E0      		ldi r19,0
 319 012c 40E8      		ldi r20,lo8(-128)
 320 012e 5FEB      		ldi r21,lo8(-65)
 321 0130 6989      		ldd r22,Y+17
 322 0132 7A89      		ldd r23,Y+18
 323 0134 8B89      		ldd r24,Y+19
 324 0136 9C89      		ldd r25,Y+20
 325 0138 0E94 0000 		call __eqsf2
 326               	.LVL13:
 327 013c 8111      		cpse r24,__zero_reg__
 328 013e 00C0      		rjmp .L9
 329               		.loc 1 72 0 is_stmt 0 discriminator 1
 330 0140 199B      		sbis 0x3,1
 331 0142 00C0      		rjmp .L9
 332               	.LVL14:
 333               	.LBB24:
 334               	.LBB25:
 335               		.loc 2 164 0 is_stmt 1
 336 0144 2FEF      		ldi r18,lo8(159999)
 337 0146 80E7      		ldi r24,hi8(159999)
 338 0148 92E0      		ldi r25,hlo8(159999)
 339 014a 2150      		1: subi r18,1
 340 014c 8040      		sbci r24,0
 341 014e 9040      		sbci r25,0
 342 0150 01F4      		brne 1b
 343 0152 00C0      		rjmp .
 344 0154 0000      		nop
 345               	.LBE25:
 346               	.LBE24:
  73:hero.c        **** 		_delay_ms(100);
  74:hero.c        **** 		hero->dx = 1;
 347               		.loc 1 74 0
 348 0156 80E0      		ldi r24,0
 349 0158 90E0      		ldi r25,0
 350 015a A0E8      		ldi r26,lo8(-128)
 351 015c BFE3      		ldi r27,lo8(63)
 352 015e 8D87      		std Y+13,r24
 353 0160 9E87      		std Y+14,r25
 354 0162 AF87      		std Y+15,r26
 355 0164 B88B      		std Y+16,r27
  75:hero.c        **** 		hero->dy = 0;
 356               		.loc 1 75 0
 357 0166 198A      		std Y+17,__zero_reg__
 358 0168 1A8A      		std Y+18,__zero_reg__
 359 016a 1B8A      		std Y+19,__zero_reg__
 360 016c 1C8A      		std Y+20,__zero_reg__
  76:hero.c        **** 		px = 1;
 361               		.loc 1 76 0
 362 016e 81E0      		ldi r24,lo8(1)
 363 0170 90E0      		ldi r25,0
 364 0172 9093 0000 		sts px+1,r25
 365 0176 8093 0000 		sts px,r24
  77:hero.c        **** 		py = 0;
 366               		.loc 1 77 0
 367 017a 1092 0000 		sts py+1,__zero_reg__
 368 017e 1092 0000 		sts py,__zero_reg__
 369               	.LVL15:
 370               	.L9:
  78:hero.c        **** 	}
  79:hero.c        **** 	if ( ( hero->dx == 1 ) && ( pressed ( SW0 ) )) { // Left Button, turn left, up
 371               		.loc 1 79 0
 372 0182 20E0      		ldi r18,0
 373 0184 30E0      		ldi r19,0
 374 0186 40E8      		ldi r20,lo8(-128)
 375 0188 5FE3      		ldi r21,lo8(63)
 376 018a 6D85      		ldd r22,Y+13
 377 018c 7E85      		ldd r23,Y+14
 378 018e 8F85      		ldd r24,Y+15
 379 0190 9889      		ldd r25,Y+16
 380 0192 0E94 0000 		call __eqsf2
 381               	.LVL16:
 382 0196 8111      		cpse r24,__zero_reg__
 383 0198 00C0      		rjmp .L11
 384               		.loc 1 79 0 is_stmt 0 discriminator 1
 385 019a 189B      		sbis 0x3,0
 386 019c 00C0      		rjmp .L11
 387               	.LVL17:
 388               	.LBB26:
 389               	.LBB27:
 390               		.loc 2 164 0 is_stmt 1
 391 019e 2FEF      		ldi r18,lo8(159999)
 392 01a0 80E7      		ldi r24,hi8(159999)
 393 01a2 92E0      		ldi r25,hlo8(159999)
 394 01a4 2150      		1: subi r18,1
 395 01a6 8040      		sbci r24,0
 396 01a8 9040      		sbci r25,0
 397 01aa 01F4      		brne 1b
 398 01ac 00C0      		rjmp .
 399 01ae 0000      		nop
 400               	.LBE27:
 401               	.LBE26:
  80:hero.c        **** 		_delay_ms(100);
  81:hero.c        **** 		hero->dx = 0;
 402               		.loc 1 81 0
 403 01b0 1D86      		std Y+13,__zero_reg__
 404 01b2 1E86      		std Y+14,__zero_reg__
 405 01b4 1F86      		std Y+15,__zero_reg__
 406 01b6 188A      		std Y+16,__zero_reg__
  82:hero.c        **** 		hero->dy = -1;
 407               		.loc 1 82 0
 408 01b8 80E0      		ldi r24,0
 409 01ba 90E0      		ldi r25,0
 410 01bc A0E8      		ldi r26,lo8(-128)
 411 01be BFEB      		ldi r27,lo8(-65)
 412 01c0 898B      		std Y+17,r24
 413 01c2 9A8B      		std Y+18,r25
 414 01c4 AB8B      		std Y+19,r26
 415 01c6 BC8B      		std Y+20,r27
  83:hero.c        **** 		px = 0;
 416               		.loc 1 83 0
 417 01c8 1092 0000 		sts px+1,__zero_reg__
 418 01cc 1092 0000 		sts px,__zero_reg__
  84:hero.c        **** 		py = -1;
 419               		.loc 1 84 0
 420 01d0 8FEF      		ldi r24,lo8(-1)
 421 01d2 9FEF      		ldi r25,lo8(-1)
 422 01d4 9093 0000 		sts py+1,r25
 423 01d8 8093 0000 		sts py,r24
 424               	.LVL18:
 425               	.L11:
  85:hero.c        **** 	}
  86:hero.c        **** 	if ( ( hero->dx == -1 ) && ( pressed ( SW0 ) )) { // Left Button, turn left, down
 426               		.loc 1 86 0
 427 01dc 20E0      		ldi r18,0
 428 01de 30E0      		ldi r19,0
 429 01e0 40E8      		ldi r20,lo8(-128)
 430 01e2 5FEB      		ldi r21,lo8(-65)
 431 01e4 6D85      		ldd r22,Y+13
 432 01e6 7E85      		ldd r23,Y+14
 433 01e8 8F85      		ldd r24,Y+15
 434 01ea 9889      		ldd r25,Y+16
 435 01ec 0E94 0000 		call __eqsf2
 436               	.LVL19:
 437 01f0 8111      		cpse r24,__zero_reg__
 438 01f2 00C0      		rjmp .L13
 439               		.loc 1 86 0 is_stmt 0 discriminator 1
 440 01f4 189B      		sbis 0x3,0
 441 01f6 00C0      		rjmp .L13
 442               	.LVL20:
 443               	.LBB28:
 444               	.LBB29:
 445               		.loc 2 164 0 is_stmt 1
 446 01f8 2FEF      		ldi r18,lo8(159999)
 447 01fa 80E7      		ldi r24,hi8(159999)
 448 01fc 92E0      		ldi r25,hlo8(159999)
 449 01fe 2150      		1: subi r18,1
 450 0200 8040      		sbci r24,0
 451 0202 9040      		sbci r25,0
 452 0204 01F4      		brne 1b
 453 0206 00C0      		rjmp .
 454 0208 0000      		nop
 455               	.LBE29:
 456               	.LBE28:
  87:hero.c        **** 		_delay_ms(100);
  88:hero.c        **** 		hero->dx = 0;
 457               		.loc 1 88 0
 458 020a 1D86      		std Y+13,__zero_reg__
 459 020c 1E86      		std Y+14,__zero_reg__
 460 020e 1F86      		std Y+15,__zero_reg__
 461 0210 188A      		std Y+16,__zero_reg__
  89:hero.c        **** 		hero->dy = 1;
 462               		.loc 1 89 0
 463 0212 80E0      		ldi r24,0
 464 0214 90E0      		ldi r25,0
 465 0216 A0E8      		ldi r26,lo8(-128)
 466 0218 BFE3      		ldi r27,lo8(63)
 467 021a 898B      		std Y+17,r24
 468 021c 9A8B      		std Y+18,r25
 469 021e AB8B      		std Y+19,r26
 470 0220 BC8B      		std Y+20,r27
  90:hero.c        **** 		px = 0;
 471               		.loc 1 90 0
 472 0222 1092 0000 		sts px+1,__zero_reg__
 473 0226 1092 0000 		sts px,__zero_reg__
  91:hero.c        **** 		py = 1;
 474               		.loc 1 91 0
 475 022a 81E0      		ldi r24,lo8(1)
 476 022c 90E0      		ldi r25,0
 477 022e 9093 0000 		sts py+1,r25
 478 0232 8093 0000 		sts py,r24
 479               	.LVL21:
 480               	.L13:
  92:hero.c        **** 	}
  93:hero.c        **** 	if ( ( hero->dy == 1 ) && ( pressed ( SW0 ) )) { // Left Button, turn left, right
 481               		.loc 1 93 0
 482 0236 20E0      		ldi r18,0
 483 0238 30E0      		ldi r19,0
 484 023a 40E8      		ldi r20,lo8(-128)
 485 023c 5FE3      		ldi r21,lo8(63)
 486 023e 6989      		ldd r22,Y+17
 487 0240 7A89      		ldd r23,Y+18
 488 0242 8B89      		ldd r24,Y+19
 489 0244 9C89      		ldd r25,Y+20
 490 0246 0E94 0000 		call __eqsf2
 491               	.LVL22:
 492 024a 8111      		cpse r24,__zero_reg__
 493 024c 00C0      		rjmp .L15
 494               		.loc 1 93 0 is_stmt 0 discriminator 1
 495 024e 189B      		sbis 0x3,0
 496 0250 00C0      		rjmp .L15
 497               	.LVL23:
 498               	.LBB30:
 499               	.LBB31:
 500               		.loc 2 164 0 is_stmt 1
 501 0252 2FEF      		ldi r18,lo8(159999)
 502 0254 80E7      		ldi r24,hi8(159999)
 503 0256 92E0      		ldi r25,hlo8(159999)
 504 0258 2150      		1: subi r18,1
 505 025a 8040      		sbci r24,0
 506 025c 9040      		sbci r25,0
 507 025e 01F4      		brne 1b
 508 0260 00C0      		rjmp .
 509 0262 0000      		nop
 510               	.LBE31:
 511               	.LBE30:
  94:hero.c        **** 		_delay_ms(100);
  95:hero.c        **** 		hero->dx = 1;
 512               		.loc 1 95 0
 513 0264 80E0      		ldi r24,0
 514 0266 90E0      		ldi r25,0
 515 0268 A0E8      		ldi r26,lo8(-128)
 516 026a BFE3      		ldi r27,lo8(63)
 517 026c 8D87      		std Y+13,r24
 518 026e 9E87      		std Y+14,r25
 519 0270 AF87      		std Y+15,r26
 520 0272 B88B      		std Y+16,r27
  96:hero.c        **** 		hero->dy = 0;
 521               		.loc 1 96 0
 522 0274 198A      		std Y+17,__zero_reg__
 523 0276 1A8A      		std Y+18,__zero_reg__
 524 0278 1B8A      		std Y+19,__zero_reg__
 525 027a 1C8A      		std Y+20,__zero_reg__
  97:hero.c        **** 		px = 1;
 526               		.loc 1 97 0
 527 027c 81E0      		ldi r24,lo8(1)
 528 027e 90E0      		ldi r25,0
 529 0280 9093 0000 		sts px+1,r25
 530 0284 8093 0000 		sts px,r24
  98:hero.c        **** 		py = 0;
 531               		.loc 1 98 0
 532 0288 1092 0000 		sts py+1,__zero_reg__
 533 028c 1092 0000 		sts py,__zero_reg__
 534               	.LVL24:
 535               	.L15:
  99:hero.c        **** 	}
 100:hero.c        **** 	if ( ( hero->dy == -1 ) && ( pressed ( SW0 ) )) { // Left Button, turn left, left
 536               		.loc 1 100 0
 537 0290 20E0      		ldi r18,0
 538 0292 30E0      		ldi r19,0
 539 0294 40E8      		ldi r20,lo8(-128)
 540 0296 5FEB      		ldi r21,lo8(-65)
 541 0298 6989      		ldd r22,Y+17
 542 029a 7A89      		ldd r23,Y+18
 543 029c 8B89      		ldd r24,Y+19
 544 029e 9C89      		ldd r25,Y+20
 545 02a0 0E94 0000 		call __eqsf2
 546               	.LVL25:
 547 02a4 8111      		cpse r24,__zero_reg__
 548 02a6 00C0      		rjmp .L17
 549               		.loc 1 100 0 is_stmt 0 discriminator 1
 550 02a8 189B      		sbis 0x3,0
 551 02aa 00C0      		rjmp .L17
 552               	.LVL26:
 553               	.LBB32:
 554               	.LBB33:
 555               		.loc 2 164 0 is_stmt 1
 556 02ac 2FEF      		ldi r18,lo8(159999)
 557 02ae 80E7      		ldi r24,hi8(159999)
 558 02b0 92E0      		ldi r25,hlo8(159999)
 559 02b2 2150      		1: subi r18,1
 560 02b4 8040      		sbci r24,0
 561 02b6 9040      		sbci r25,0
 562 02b8 01F4      		brne 1b
 563 02ba 00C0      		rjmp .
 564 02bc 0000      		nop
 565               	.LBE33:
 566               	.LBE32:
 101:hero.c        **** 		_delay_ms(100);
 102:hero.c        **** 		hero->dx = -1;
 567               		.loc 1 102 0
 568 02be 80E0      		ldi r24,0
 569 02c0 90E0      		ldi r25,0
 570 02c2 A0E8      		ldi r26,lo8(-128)
 571 02c4 BFEB      		ldi r27,lo8(-65)
 572 02c6 8D87      		std Y+13,r24
 573 02c8 9E87      		std Y+14,r25
 574 02ca AF87      		std Y+15,r26
 575 02cc B88B      		std Y+16,r27
 103:hero.c        **** 		hero->dy = 0;
 576               		.loc 1 103 0
 577 02ce 198A      		std Y+17,__zero_reg__
 578 02d0 1A8A      		std Y+18,__zero_reg__
 579 02d2 1B8A      		std Y+19,__zero_reg__
 580 02d4 1C8A      		std Y+20,__zero_reg__
 104:hero.c        **** 		px = -1;
 581               		.loc 1 104 0
 582 02d6 8FEF      		ldi r24,lo8(-1)
 583 02d8 9FEF      		ldi r25,lo8(-1)
 584 02da 9093 0000 		sts px+1,r25
 585 02de 8093 0000 		sts px,r24
 105:hero.c        **** 		py = 0;
 586               		.loc 1 105 0
 587 02e2 1092 0000 		sts py+1,__zero_reg__
 588 02e6 1092 0000 		sts py,__zero_reg__
 589               	.LVL27:
 590               	.L17:
 106:hero.c        **** 	}
 107:hero.c        **** 
 108:hero.c        **** 	hero->x += hero->dx;
 591               		.loc 1 108 0
 592 02ea 2D85      		ldd r18,Y+13
 593 02ec 3E85      		ldd r19,Y+14
 594 02ee 4F85      		ldd r20,Y+15
 595 02f0 5889      		ldd r21,Y+16
 596 02f2 6881      		ld r22,Y
 597 02f4 7981      		ldd r23,Y+1
 598 02f6 8A81      		ldd r24,Y+2
 599 02f8 9B81      		ldd r25,Y+3
 600 02fa 0E94 0000 		call __addsf3
 601               	.LVL28:
 602 02fe 4B01      		movw r8,r22
 603 0300 5C01      		movw r10,r24
 604 0302 862F      		mov r24,r22
 605 0304 992D      		mov r25,r9
 606 0306 AA2D      		mov r26,r10
 607 0308 BB2D      		mov r27,r11
 608 030a 8883      		st Y,r24
 609 030c 9983      		std Y+1,r25
 610 030e AA83      		std Y+2,r26
 611 0310 BB83      		std Y+3,r27
 109:hero.c        **** 	hero->y += hero->dy;
 612               		.loc 1 109 0
 613 0312 2989      		ldd r18,Y+17
 614 0314 3A89      		ldd r19,Y+18
 615 0316 4B89      		ldd r20,Y+19
 616 0318 5C89      		ldd r21,Y+20
 617 031a 6C81      		ldd r22,Y+4
 618 031c 7D81      		ldd r23,Y+5
 619 031e 8E81      		ldd r24,Y+6
 620 0320 9F81      		ldd r25,Y+7
 621 0322 0E94 0000 		call __addsf3
 622               	.LVL29:
 623 0326 6B01      		movw r12,r22
 624 0328 7C01      		movw r14,r24
 625 032a 862F      		mov r24,r22
 626 032c 9D2D      		mov r25,r13
 627 032e AE2D      		mov r26,r14
 628 0330 BF2D      		mov r27,r15
 629 0332 8C83      		std Y+4,r24
 630 0334 9D83      		std Y+5,r25
 631 0336 AE83      		std Y+6,r26
 632 0338 BF83      		std Y+7,r27
 110:hero.c        **** 
 111:hero.c        **** 	if ( hero->x >= LCD_X - hero->width) {
 633               		.loc 1 111 0
 634 033a 0885      		ldd r16,Y+8
 635 033c 10E0      		ldi r17,0
 636 033e 64E5      		ldi r22,lo8(84)
 637 0340 70E0      		ldi r23,0
 638 0342 601B      		sub r22,r16
 639 0344 710B      		sbc r23,r17
 640 0346 8827      		clr r24
 641 0348 77FD      		sbrc r23,7
 642 034a 8095      		com r24
 643 034c 982F      		mov r25,r24
 644 034e 0E94 0000 		call __floatsisf
 645               	.LVL30:
 646 0352 9B01      		movw r18,r22
 647 0354 AC01      		movw r20,r24
 648 0356 682D      		mov r22,r8
 649 0358 792D      		mov r23,r9
 650 035a 8A2D      		mov r24,r10
 651 035c 9B2D      		mov r25,r11
 652 035e 0E94 0000 		call __gesf2
 653               	.LVL31:
 654 0362 87FD      		sbrc r24,7
 655 0364 00C0      		rjmp .L19
 112:hero.c        **** 		hero->x -=1;
 656               		.loc 1 112 0
 657 0366 20E0      		ldi r18,0
 658 0368 30E0      		ldi r19,0
 659 036a 40E8      		ldi r20,lo8(-128)
 660 036c 5FE3      		ldi r21,lo8(63)
 661 036e 682D      		mov r22,r8
 662 0370 792D      		mov r23,r9
 663 0372 8A2D      		mov r24,r10
 664 0374 9B2D      		mov r25,r11
 665 0376 0E94 0000 		call __subsf3
 666               	.LVL32:
 667 037a 6883      		st Y,r22
 668 037c 7983      		std Y+1,r23
 669 037e 8A83      		std Y+2,r24
 670 0380 9B83      		std Y+3,r25
 671               	.L19:
 113:hero.c        **** 	}
 114:hero.c        **** 
 115:hero.c        **** 	if (hero->x < 0 + hero->width - 2) {
 672               		.loc 1 115 0
 673 0382 8880      		ld r8,Y
 674 0384 9980      		ldd r9,Y+1
 675 0386 AA80      		ldd r10,Y+2
 676 0388 BB80      		ldd r11,Y+3
 677 038a B801      		movw r22,r16
 678 038c 6250      		subi r22,2
 679 038e 7109      		sbc r23,__zero_reg__
 680 0390 8827      		clr r24
 681 0392 77FD      		sbrc r23,7
 682 0394 8095      		com r24
 683 0396 982F      		mov r25,r24
 684 0398 0E94 0000 		call __floatsisf
 685               	.LVL33:
 686 039c 9B01      		movw r18,r22
 687 039e AC01      		movw r20,r24
 688 03a0 C501      		movw r24,r10
 689 03a2 B401      		movw r22,r8
 690 03a4 0E94 0000 		call __ltsf2
 691               	.LVL34:
 692 03a8 87FF      		sbrs r24,7
 693 03aa 00C0      		rjmp .L21
 116:hero.c        **** 		hero ->x +=1;
 694               		.loc 1 116 0
 695 03ac 20E0      		ldi r18,0
 696 03ae 30E0      		ldi r19,0
 697 03b0 40E8      		ldi r20,lo8(-128)
 698 03b2 5FE3      		ldi r21,lo8(63)
 699 03b4 C501      		movw r24,r10
 700 03b6 B401      		movw r22,r8
 701 03b8 0E94 0000 		call __addsf3
 702               	.LVL35:
 703 03bc 6883      		st Y,r22
 704 03be 7983      		std Y+1,r23
 705 03c0 8A83      		std Y+2,r24
 706 03c2 9B83      		std Y+3,r25
 707               	.L21:
 117:hero.c        **** 	}
 118:hero.c        **** 
 119:hero.c        **** 	if ( hero->y >= LCD_Y - hero->height ) {
 708               		.loc 1 119 0
 709 03c4 8985      		ldd r24,Y+9
 710 03c6 60E3      		ldi r22,lo8(48)
 711 03c8 70E0      		ldi r23,0
 712 03ca 681B      		sub r22,r24
 713 03cc 7109      		sbc r23,__zero_reg__
 714 03ce 8827      		clr r24
 715 03d0 77FD      		sbrc r23,7
 716 03d2 8095      		com r24
 717 03d4 982F      		mov r25,r24
 718 03d6 0E94 0000 		call __floatsisf
 719               	.LVL36:
 720 03da 9B01      		movw r18,r22
 721 03dc AC01      		movw r20,r24
 722 03de 6C2D      		mov r22,r12
 723 03e0 7D2D      		mov r23,r13
 724 03e2 8E2D      		mov r24,r14
 725 03e4 9F2D      		mov r25,r15
 726 03e6 0E94 0000 		call __gesf2
 727               	.LVL37:
 728 03ea 87FD      		sbrc r24,7
 729 03ec 00C0      		rjmp .L23
 120:hero.c        **** 		hero->y -=1;
 730               		.loc 1 120 0
 731 03ee 20E0      		ldi r18,0
 732 03f0 30E0      		ldi r19,0
 733 03f2 40E8      		ldi r20,lo8(-128)
 734 03f4 5FE3      		ldi r21,lo8(63)
 735 03f6 6C2D      		mov r22,r12
 736 03f8 7D2D      		mov r23,r13
 737 03fa 8E2D      		mov r24,r14
 738 03fc 9F2D      		mov r25,r15
 739 03fe 0E94 0000 		call __subsf3
 740               	.LVL38:
 741 0402 6C83      		std Y+4,r22
 742 0404 7D83      		std Y+5,r23
 743 0406 8E83      		std Y+6,r24
 744 0408 9F83      		std Y+7,r25
 745               	.L23:
 121:hero.c        **** 	}
 122:hero.c        **** 
 123:hero.c        **** 	if ( hero->y < 0 + 13) {
 746               		.loc 1 123 0
 747 040a CC80      		ldd r12,Y+4
 748 040c DD80      		ldd r13,Y+5
 749 040e EE80      		ldd r14,Y+6
 750 0410 FF80      		ldd r15,Y+7
 751 0412 20E0      		ldi r18,0
 752 0414 30E0      		ldi r19,0
 753 0416 40E5      		ldi r20,lo8(80)
 754 0418 51E4      		ldi r21,lo8(65)
 755 041a C701      		movw r24,r14
 756 041c B601      		movw r22,r12
 757 041e 0E94 0000 		call __ltsf2
 758               	.LVL39:
 759 0422 87FF      		sbrs r24,7
 760 0424 00C0      		rjmp .L2
 124:hero.c        **** 		hero->y +=1;
 761               		.loc 1 124 0
 762 0426 20E0      		ldi r18,0
 763 0428 30E0      		ldi r19,0
 764 042a 40E8      		ldi r20,lo8(-128)
 765 042c 5FE3      		ldi r21,lo8(63)
 766 042e C701      		movw r24,r14
 767 0430 B601      		movw r22,r12
 768 0432 0E94 0000 		call __addsf3
 769               	.LVL40:
 770 0436 6C83      		std Y+4,r22
 771 0438 7D83      		std Y+5,r23
 772 043a 8E83      		std Y+6,r24
 773 043c 9F83      		std Y+7,r25
 774               	.L2:
 775               	/* epilogue start */
 125:hero.c        **** 	}
 126:hero.c        **** }
 776               		.loc 1 126 0
 777 043e DF91      		pop r29
 778 0440 CF91      		pop r28
 779               	.LVL41:
 780 0442 1F91      		pop r17
 781 0444 0F91      		pop r16
 782 0446 FF90      		pop r15
 783 0448 EF90      		pop r14
 784 044a DF90      		pop r13
 785 044c CF90      		pop r12
 786 044e BF90      		pop r11
 787 0450 AF90      		pop r10
 788 0452 9F90      		pop r9
 789 0454 8F90      		pop r8
 790 0456 0895      		ret
 791               		.cfi_endproc
 792               	.LFE8:
 794               		.section	.text.update_hero,"ax",@progbits
 795               	.global	update_hero
 797               	update_hero:
 798               	.LFB9:
 127:hero.c        **** 
 128:hero.c        **** 
 129:hero.c        **** 
 130:hero.c        **** void update_hero() {
 799               		.loc 1 130 0
 800               		.cfi_startproc
 801               	/* prologue: function */
 802               	/* frame size = 0 */
 803               	/* stack size = 0 */
 804               	.L__stack_usage = 0
 131:hero.c        **** 	move_hero ( hero_prt );
 805               		.loc 1 131 0
 806 0000 8091 0000 		lds r24,hero_prt
 807 0004 9091 0000 		lds r25,hero_prt+1
 808 0008 0E94 0000 		call move_hero
 809               	.LVL42:
 132:hero.c        **** 	draw_sprite ( hero_prt );
 810               		.loc 1 132 0
 811 000c 8091 0000 		lds r24,hero_prt
 812 0010 9091 0000 		lds r25,hero_prt+1
 813 0014 0C94 0000 		jmp draw_sprite
 814               	.LVL43:
 815               		.cfi_endproc
 816               	.LFE9:
 818               	.global	bitmap_hero
 819               		.data
 822               	bitmap_hero:
 823 0000 E0        		.byte	-32
 824 0001 40        		.byte	64
 825 0002 E0        		.byte	-32
 826               	.global	hero_prt
 829               	hero_prt:
 830 0003 0000      		.word	hero
 831               	.global	py
 832               		.section .bss
 835               	py:
 836 0000 0000      		.zero	2
 837               	.global	px
 838               		.data
 841               	px:
 842 0005 0100      		.word	1
 843               		.comm	z,2,1
 844               		.comm	zombies,168,1
 845               		.comm	hero,21,1
 846               		.text
 847               	.Letext0:
 848               		.file 3 "/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/stdint.h"
 849               		.file 4 "../teensy_graphics/byte.h"
 850               		.file 5 "../teensy_graphics/sprite.h"
 851               		.file 6 "../teensy_graphics/ascii_font.h"
 852               		.file 7 "zombies.h"
DEFINED SYMBOLS
                            *ABS*:00000000 hero.c
/var/folders/dz/7l40hrmj72997lgmj3pdxb_m0000gn/T//ccWhNfpX.s:2      *ABS*:0000003e __SP_H__
/var/folders/dz/7l40hrmj72997lgmj3pdxb_m0000gn/T//ccWhNfpX.s:3      *ABS*:0000003d __SP_L__
/var/folders/dz/7l40hrmj72997lgmj3pdxb_m0000gn/T//ccWhNfpX.s:4      *ABS*:0000003f __SREG__
/var/folders/dz/7l40hrmj72997lgmj3pdxb_m0000gn/T//ccWhNfpX.s:5      *ABS*:00000000 __tmp_reg__
/var/folders/dz/7l40hrmj72997lgmj3pdxb_m0000gn/T//ccWhNfpX.s:6      *ABS*:00000001 __zero_reg__
/var/folders/dz/7l40hrmj72997lgmj3pdxb_m0000gn/T//ccWhNfpX.s:13     .text.start_hero:00000000 start_hero
/var/folders/dz/7l40hrmj72997lgmj3pdxb_m0000gn/T//ccWhNfpX.s:822    .data:00000000 bitmap_hero
                            *COM*:00000015 hero
/var/folders/dz/7l40hrmj72997lgmj3pdxb_m0000gn/T//ccWhNfpX.s:829    .data:00000003 hero_prt
/var/folders/dz/7l40hrmj72997lgmj3pdxb_m0000gn/T//ccWhNfpX.s:92     .text.move_hero:00000000 move_hero
/var/folders/dz/7l40hrmj72997lgmj3pdxb_m0000gn/T//ccWhNfpX.s:841    .data:00000005 px
/var/folders/dz/7l40hrmj72997lgmj3pdxb_m0000gn/T//ccWhNfpX.s:835    .bss:00000000 py
/var/folders/dz/7l40hrmj72997lgmj3pdxb_m0000gn/T//ccWhNfpX.s:797    .text.update_hero:00000000 update_hero
                            *COM*:00000002 z
                            *COM*:000000a8 zombies

UNDEFINED SYMBOLS
init_sprite
draw_sprite
__eqsf2
__addsf3
__floatsisf
__gesf2
__subsf3
__ltsf2
__do_copy_data
__do_clear_bss
