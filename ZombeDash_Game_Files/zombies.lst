   1               		.file	"zombies.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.section_selector,"ax",@progbits
  11               	.global	section_selector
  13               	section_selector:
  14               	.LFB3:
  15               		.file 1 "zombies.c"
   1:zombies.c     **** /*
   2:zombies.c     ****  * zombies.c
   3:zombies.c     ****  *
   4:zombies.c     ****  *  Created on: 9 May 2015
   5:zombies.c     ****  *      Author: Jai Spicer
   6:zombies.c     ****  */
   7:zombies.c     **** 
   8:zombies.c     **** 
   9:zombies.c     **** #include "sprite.h"
  10:zombies.c     **** #include "graphics.h"
  11:zombies.c     **** #include "friendly_ports.h"
  12:zombies.c     **** 
  13:zombies.c     **** #include "zombies.h"
  14:zombies.c     **** #include "score.h"
  15:zombies.c     **** #include "hero.h"
  16:zombies.c     **** #include "lives.h"
  17:zombies.c     **** #include "game_set.h"
  18:zombies.c     **** #include "pit.h"
  19:zombies.c     **** #include "items.h"
  20:zombies.c     **** 
  21:zombies.c     **** int dead_zombies = 0;
  22:zombies.c     **** 
  23:zombies.c     **** void setup_zombies(
  24:zombies.c     **** 	Sprite zombies[],
  25:zombies.c     **** 	byte *zbitmap[],
  26:zombies.c     **** 	byte width[],
  27:zombies.c     **** 	byte height[]
  28:zombies.c     **** 		);
  29:zombies.c     **** void draw_zombies ( Sprite * sprites );
  30:zombies.c     **** void start_zombies ();
  31:zombies.c     **** void section_selector( int picker );
  32:zombies.c     **** 
  33:zombies.c     **** int randx;
  34:zombies.c     **** int randy;
  35:zombies.c     **** 
  36:zombies.c     **** #define zombie_count (8)
  37:zombies.c     **** 
  38:zombies.c     **** Sprite zombies[zombie_count];
  39:zombies.c     **** Sprite * z = &zombies;
  40:zombies.c     **** byte bitmap1[] = {
  41:zombies.c     **** 		BYTE( 11100000 ),
  42:zombies.c     **** 		BYTE( 01000000 ),
  43:zombies.c     **** 		BYTE( 10100000 )
  44:zombies.c     **** 	};
  45:zombies.c     **** 
  46:zombies.c     **** void start_zombies() {
  47:zombies.c     **** 
  48:zombies.c     **** 
  49:zombies.c     **** 	byte *zbitmaps[1] = { bitmap1 };
  50:zombies.c     **** 	byte width[] = {4};
  51:zombies.c     **** 	byte height[] = {3};
  52:zombies.c     **** 
  53:zombies.c     **** //	Sprite zombies[zombie_count];
  54:zombies.c     **** 
  55:zombies.c     **** 
  56:zombies.c     **** 	setup_zombies ( zombies, zbitmaps, width, height );
  57:zombies.c     **** 
  58:zombies.c     **** 	draw_zombies ( zombies );
  59:zombies.c     **** 
  60:zombies.c     **** }
  61:zombies.c     **** 
  62:zombies.c     **** void setup_zombies(
  63:zombies.c     **** 	Sprite zombies[],
  64:zombies.c     **** 	byte *zbitmaps[],
  65:zombies.c     **** 	byte width[],
  66:zombies.c     **** 	byte height[]
  67:zombies.c     **** 	) {
  68:zombies.c     **** 
  69:zombies.c     **** 	for ( int i = 0; i < 8; i++ ) {
  70:zombies.c     **** 		Sprite * sprite = &zombies[i];
  71:zombies.c     **** 
  72:zombies.c     **** 		byte * bitmap = zbitmaps[ i % 1];
  73:zombies.c     **** 
  74:zombies.c     **** 		int picker = 1 + rand() % 2;
  75:zombies.c     **** 		section_selector ( picker );
  76:zombies.c     **** 
  77:zombies.c     **** 		init_sprite ( sprite, randx, randy, 4, 3, bitmap );
  78:zombies.c     **** 		sprite->is_visible = 1;
  79:zombies.c     **** 		sprite->dx = 1;
  80:zombies.c     **** 		sprite->dy = 0;
  81:zombies.c     **** 
  82:zombies.c     **** 
  83:zombies.c     **** 	}
  84:zombies.c     **** }
  85:zombies.c     **** 
  86:zombies.c     **** void section_selector( int picker ) {
  16               		.loc 1 86 0
  17               		.cfi_startproc
  18               	.LVL0:
  19 0000 CF93      		push r28
  20               	.LCFI0:
  21               		.cfi_def_cfa_offset 3
  22               		.cfi_offset 28, -2
  23 0002 DF93      		push r29
  24               	.LCFI1:
  25               		.cfi_def_cfa_offset 4
  26               		.cfi_offset 29, -3
  27               	/* prologue: function */
  28               	/* frame size = 0 */
  29               	/* stack size = 2 */
  30               	.L__stack_usage = 2
  87:zombies.c     **** 	if ( picker == 1 ) { // Left Section
  31               		.loc 1 87 0
  32 0004 8130      		cpi r24,1
  33 0006 9105      		cpc r25,__zero_reg__
  34 0008 01F4      		brne .L2
  35               	.LBB2:
  88:zombies.c     **** 		randx = (rand()%25)+1; // 1 - 28
  36               		.loc 1 88 0
  37 000a 0E94 0000 		call rand
  38               	.LVL1:
  39 000e 69E1      		ldi r22,lo8(25)
  40 0010 70E0      		ldi r23,0
  41 0012 0E94 0000 		call __divmodhi4
  42 0016 0196      		adiw r24,1
  43 0018 9093 0000 		sts randx+1,r25
  44 001c 8093 0000 		sts randx,r24
  89:zombies.c     **** 		randy = (rand()%30)+14; // 14 - 47
  45               		.loc 1 89 0
  46 0020 0E94 0000 		call rand
  47               	.LVL2:
  48 0024 6EE1      		ldi r22,lo8(30)
  49 0026 70E0      		ldi r23,0
  50 0028 00C0      		rjmp .L4
  51               	.LVL3:
  52               	.L2:
  53               	.LBE2:
  90:zombies.c     **** 	}
  91:zombies.c     **** 	else if ( picker == 2 ) { // Right Section
  54               		.loc 1 91 0
  55 002a 0297      		sbiw r24,2
  56 002c 01F4      		brne .L1
  57               	.LBB3:
  92:zombies.c     **** 		randx = (rand()%30)+51; // 50 - 81
  58               		.loc 1 92 0
  59 002e 0E94 0000 		call rand
  60               	.LVL4:
  61 0032 CEE1      		ldi r28,lo8(30)
  62 0034 D0E0      		ldi r29,0
  63 0036 BE01      		movw r22,r28
  64 0038 0E94 0000 		call __divmodhi4
  65 003c C396      		adiw r24,51
  66 003e 9093 0000 		sts randx+1,r25
  67 0042 8093 0000 		sts randx,r24
  93:zombies.c     **** 		randy = (rand()%30)+14; // 14 - 47
  68               		.loc 1 93 0
  69 0046 0E94 0000 		call rand
  70               	.LVL5:
  71 004a BE01      		movw r22,r28
  72               	.L4:
  73 004c 0E94 0000 		call __divmodhi4
  74 0050 0E96      		adiw r24,14
  75 0052 9093 0000 		sts randy+1,r25
  76 0056 8093 0000 		sts randy,r24
  77               	.L1:
  78               	/* epilogue start */
  79               	.LBE3:
  94:zombies.c     **** 	}
  95:zombies.c     **** }
  80               		.loc 1 95 0
  81 005a DF91      		pop r29
  82 005c CF91      		pop r28
  83 005e 0895      		ret
  84               		.cfi_endproc
  85               	.LFE3:
  87               		.section	.text.setup_zombies,"ax",@progbits
  88               	.global	setup_zombies
  90               	setup_zombies:
  91               	.LFB2:
  67:zombies.c     **** 	) {
  92               		.loc 1 67 0
  93               		.cfi_startproc
  94               	.LVL6:
  95 0000 4F92      		push r4
  96               	.LCFI2:
  97               		.cfi_def_cfa_offset 3
  98               		.cfi_offset 4, -2
  99 0002 5F92      		push r5
 100               	.LCFI3:
 101               		.cfi_def_cfa_offset 4
 102               		.cfi_offset 5, -3
 103 0004 6F92      		push r6
 104               	.LCFI4:
 105               		.cfi_def_cfa_offset 5
 106               		.cfi_offset 6, -4
 107 0006 7F92      		push r7
 108               	.LCFI5:
 109               		.cfi_def_cfa_offset 6
 110               		.cfi_offset 7, -5
 111 0008 8F92      		push r8
 112               	.LCFI6:
 113               		.cfi_def_cfa_offset 7
 114               		.cfi_offset 8, -6
 115 000a 9F92      		push r9
 116               	.LCFI7:
 117               		.cfi_def_cfa_offset 8
 118               		.cfi_offset 9, -7
 119 000c AF92      		push r10
 120               	.LCFI8:
 121               		.cfi_def_cfa_offset 9
 122               		.cfi_offset 10, -8
 123 000e BF92      		push r11
 124               	.LCFI9:
 125               		.cfi_def_cfa_offset 10
 126               		.cfi_offset 11, -9
 127 0010 CF92      		push r12
 128               	.LCFI10:
 129               		.cfi_def_cfa_offset 11
 130               		.cfi_offset 12, -10
 131 0012 DF92      		push r13
 132               	.LCFI11:
 133               		.cfi_def_cfa_offset 12
 134               		.cfi_offset 13, -11
 135 0014 EF92      		push r14
 136               	.LCFI12:
 137               		.cfi_def_cfa_offset 13
 138               		.cfi_offset 14, -12
 139 0016 FF92      		push r15
 140               	.LCFI13:
 141               		.cfi_def_cfa_offset 14
 142               		.cfi_offset 15, -13
 143 0018 0F93      		push r16
 144               	.LCFI14:
 145               		.cfi_def_cfa_offset 15
 146               		.cfi_offset 16, -14
 147 001a 1F93      		push r17
 148               	.LCFI15:
 149               		.cfi_def_cfa_offset 16
 150               		.cfi_offset 17, -15
 151 001c CF93      		push r28
 152               	.LCFI16:
 153               		.cfi_def_cfa_offset 17
 154               		.cfi_offset 28, -16
 155 001e DF93      		push r29
 156               	.LCFI17:
 157               		.cfi_def_cfa_offset 18
 158               		.cfi_offset 29, -17
 159               	/* prologue: function */
 160               	/* frame size = 0 */
 161               	/* stack size = 16 */
 162               	.L__stack_usage = 16
 163 0020 4B01      		movw r8,r22
 164               	.LVL7:
 165 0022 EC01      		movw r28,r24
  67:zombies.c     **** 	) {
 166               		.loc 1 67 0
 167 0024 88E0      		ldi r24,lo8(8)
 168 0026 C82E      		mov r12,r24
 169 0028 D12C      		mov r13,__zero_reg__
 170               	.LVL8:
 171               	.LBB4:
 172               	.LBB5:
  74:zombies.c     **** 		int picker = 1 + rand() % 2;
 173               		.loc 1 74 0
 174 002a 92E0      		ldi r25,lo8(2)
 175 002c A92E      		mov r10,r25
 176 002e B12C      		mov r11,__zero_reg__
  78:zombies.c     **** 		sprite->is_visible = 1;
 177               		.loc 1 78 0
 178 0030 11E0      		ldi r17,lo8(1)
  79:zombies.c     **** 		sprite->dx = 1;
 179               		.loc 1 79 0
 180 0032 412C      		mov r4,__zero_reg__
 181 0034 512C      		mov r5,__zero_reg__
 182 0036 20E8      		ldi r18,lo8(-128)
 183 0038 622E      		mov r6,r18
 184 003a 2FE3      		ldi r18,lo8(63)
 185 003c 722E      		mov r7,r18
 186               	.LVL9:
 187               	.L6:
  72:zombies.c     **** 		byte * bitmap = zbitmaps[ i % 1];
 188               		.loc 1 72 0 discriminator 2
 189 003e F401      		movw r30,r8
 190 0040 E080      		ld r14,Z
 191 0042 F180      		ldd r15,Z+1
 192               	.LVL10:
  74:zombies.c     **** 		int picker = 1 + rand() % 2;
 193               		.loc 1 74 0 discriminator 2
 194 0044 0E94 0000 		call rand
 195               	.LVL11:
 196 0048 B501      		movw r22,r10
 197 004a 0E94 0000 		call __divmodhi4
 198               	.LVL12:
  75:zombies.c     **** 		section_selector ( picker );
 199               		.loc 1 75 0 discriminator 2
 200 004e 0196      		adiw r24,1
 201 0050 0E94 0000 		call section_selector
 202               	.LVL13:
  77:zombies.c     **** 		init_sprite ( sprite, randx, randy, 4, 3, bitmap );
 203               		.loc 1 77 0 discriminator 2
 204 0054 03E0      		ldi r16,lo8(3)
 205 0056 24E0      		ldi r18,lo8(4)
 206 0058 4091 0000 		lds r20,randy
 207 005c 6091 0000 		lds r22,randx
 208 0060 CE01      		movw r24,r28
 209 0062 0E94 0000 		call init_sprite
 210               	.LVL14:
  78:zombies.c     **** 		sprite->is_visible = 1;
 211               		.loc 1 78 0 discriminator 2
 212 0066 1A87      		std Y+10,r17
  79:zombies.c     **** 		sprite->dx = 1;
 213               		.loc 1 79 0 discriminator 2
 214 0068 4D86      		std Y+13,r4
 215 006a 5E86      		std Y+14,r5
 216 006c 6F86      		std Y+15,r6
 217 006e 788A      		std Y+16,r7
  80:zombies.c     **** 		sprite->dy = 0;
 218               		.loc 1 80 0 discriminator 2
 219 0070 198A      		std Y+17,__zero_reg__
 220 0072 1A8A      		std Y+18,__zero_reg__
 221 0074 1B8A      		std Y+19,__zero_reg__
 222 0076 1C8A      		std Y+20,__zero_reg__
 223 0078 F1E0      		ldi r31,1
 224 007a CF1A      		sub r12,r31
 225 007c D108      		sbc r13,__zero_reg__
 226 007e 6596      		adiw r28,21
 227               	.LVL15:
 228               	.LBE5:
  69:zombies.c     **** 	for ( int i = 0; i < 8; i++ ) {
 229               		.loc 1 69 0 discriminator 2
 230 0080 C114      		cp r12,__zero_reg__
 231 0082 D104      		cpc r13,__zero_reg__
 232 0084 01F4      		brne .L6
 233               	/* epilogue start */
 234               	.LBE4:
  84:zombies.c     **** }
 235               		.loc 1 84 0
 236 0086 DF91      		pop r29
 237 0088 CF91      		pop r28
 238               	.LVL16:
 239 008a 1F91      		pop r17
 240 008c 0F91      		pop r16
 241 008e FF90      		pop r15
 242 0090 EF90      		pop r14
 243               	.LVL17:
 244 0092 DF90      		pop r13
 245 0094 CF90      		pop r12
 246 0096 BF90      		pop r11
 247 0098 AF90      		pop r10
 248 009a 9F90      		pop r9
 249 009c 8F90      		pop r8
 250               	.LVL18:
 251 009e 7F90      		pop r7
 252 00a0 6F90      		pop r6
 253 00a2 5F90      		pop r5
 254 00a4 4F90      		pop r4
 255 00a6 0895      		ret
 256               		.cfi_endproc
 257               	.LFE2:
 259               		.section	.text.draw_zombies,"ax",@progbits
 260               	.global	draw_zombies
 262               	draw_zombies:
 263               	.LFB4:
  96:zombies.c     **** 
  97:zombies.c     **** void draw_zombies ( Sprite * sprites ) {
 264               		.loc 1 97 0
 265               		.cfi_startproc
 266               	.LVL19:
 267 0000 0F93      		push r16
 268               	.LCFI18:
 269               		.cfi_def_cfa_offset 3
 270               		.cfi_offset 16, -2
 271 0002 1F93      		push r17
 272               	.LCFI19:
 273               		.cfi_def_cfa_offset 4
 274               		.cfi_offset 17, -3
 275 0004 CF93      		push r28
 276               	.LCFI20:
 277               		.cfi_def_cfa_offset 5
 278               		.cfi_offset 28, -4
 279 0006 DF93      		push r29
 280               	.LCFI21:
 281               		.cfi_def_cfa_offset 6
 282               		.cfi_offset 29, -5
 283               	/* prologue: function */
 284               	/* frame size = 0 */
 285               	/* stack size = 4 */
 286               	.L__stack_usage = 4
 287 0008 8C01      		movw r16,r24
 288               	.LVL20:
 289               		.loc 1 97 0
 290 000a C0E0      		ldi r28,0
 291 000c D0E0      		ldi r29,0
 292               	.LVL21:
 293               	.L9:
 294               	.LBB6:
  98:zombies.c     **** 	for ( int i = 0; i < zombie_count; i++ ) {
  99:zombies.c     **** 		draw_sprite ( sprites + i );
 295               		.loc 1 99 0 discriminator 2
 296 000e C801      		movw r24,r16
 297 0010 8C0F      		add r24,r28
 298 0012 9D1F      		adc r25,r29
 299 0014 0E94 0000 		call draw_sprite
 300               	.LVL22:
 301 0018 6596      		adiw r28,21
  98:zombies.c     **** 	for ( int i = 0; i < zombie_count; i++ ) {
 302               		.loc 1 98 0 discriminator 2
 303 001a C83A      		cpi r28,-88
 304 001c D105      		cpc r29,__zero_reg__
 305 001e 01F4      		brne .L9
 306               	/* epilogue start */
 307               	.LBE6:
 100:zombies.c     **** 	}
 101:zombies.c     **** }
 308               		.loc 1 101 0
 309 0020 DF91      		pop r29
 310 0022 CF91      		pop r28
 311 0024 1F91      		pop r17
 312 0026 0F91      		pop r16
 313               	.LVL23:
 314 0028 0895      		ret
 315               		.cfi_endproc
 316               	.LFE4:
 318               		.section	.text.start_zombies,"ax",@progbits
 319               	.global	start_zombies
 321               	start_zombies:
 322               	.LFB1:
  46:zombies.c     **** void start_zombies() {
 323               		.loc 1 46 0
 324               		.cfi_startproc
 325 0000 CF93      		push r28
 326               	.LCFI22:
 327               		.cfi_def_cfa_offset 3
 328               		.cfi_offset 28, -2
 329 0002 DF93      		push r29
 330               	.LCFI23:
 331               		.cfi_def_cfa_offset 4
 332               		.cfi_offset 29, -3
 333 0004 00D0      		rcall .
 334 0006 00D0      		rcall .
 335               	.LCFI24:
 336               		.cfi_def_cfa_offset 8
 337 0008 CDB7      		in r28,__SP_L__
 338 000a DEB7      		in r29,__SP_H__
 339               	.LCFI25:
 340               		.cfi_def_cfa_register 28
 341               	/* prologue: function */
 342               	/* frame size = 4 */
 343               	/* stack size = 6 */
 344               	.L__stack_usage = 6
  49:zombies.c     **** 	byte *zbitmaps[1] = { bitmap1 };
 345               		.loc 1 49 0
 346 000c 80E0      		ldi r24,lo8(bitmap1)
 347 000e 90E0      		ldi r25,hi8(bitmap1)
 348 0010 9A83      		std Y+2,r25
 349 0012 8983      		std Y+1,r24
  50:zombies.c     **** 	byte width[] = {4};
 350               		.loc 1 50 0
 351 0014 84E0      		ldi r24,lo8(4)
 352 0016 8C83      		std Y+4,r24
  51:zombies.c     **** 	byte height[] = {3};
 353               		.loc 1 51 0
 354 0018 83E0      		ldi r24,lo8(3)
 355 001a 8B83      		std Y+3,r24
  56:zombies.c     **** 	setup_zombies ( zombies, zbitmaps, width, height );
 356               		.loc 1 56 0
 357 001c 9E01      		movw r18,r28
 358 001e 2D5F      		subi r18,-3
 359 0020 3F4F      		sbci r19,-1
 360 0022 AE01      		movw r20,r28
 361 0024 4C5F      		subi r20,-4
 362 0026 5F4F      		sbci r21,-1
 363 0028 BE01      		movw r22,r28
 364 002a 6F5F      		subi r22,-1
 365 002c 7F4F      		sbci r23,-1
 366 002e 80E0      		ldi r24,lo8(zombies)
 367 0030 90E0      		ldi r25,hi8(zombies)
 368 0032 0E94 0000 		call setup_zombies
 369               	.LVL24:
  58:zombies.c     **** 	draw_zombies ( zombies );
 370               		.loc 1 58 0
 371 0036 80E0      		ldi r24,lo8(zombies)
 372 0038 90E0      		ldi r25,hi8(zombies)
 373 003a 0E94 0000 		call draw_zombies
 374               	.LVL25:
 375               	/* epilogue start */
  60:zombies.c     **** }
 376               		.loc 1 60 0
 377 003e 0F90      		pop __tmp_reg__
 378 0040 0F90      		pop __tmp_reg__
 379 0042 0F90      		pop __tmp_reg__
 380 0044 0F90      		pop __tmp_reg__
 381 0046 DF91      		pop r29
 382 0048 CF91      		pop r28
 383 004a 0895      		ret
 384               		.cfi_endproc
 385               	.LFE1:
 387               		.section	.text.zombie_drawer,"ax",@progbits
 388               	.global	zombie_drawer
 390               	zombie_drawer:
 391               	.LFB6:
 102:zombies.c     **** 
 103:zombies.c     **** void zombie_updater() {
 104:zombies.c     **** 	update_zombies( z );
 105:zombies.c     **** 	draw_zombies( z );
 106:zombies.c     **** }
 107:zombies.c     **** 
 108:zombies.c     **** void zombie_drawer() {
 392               		.loc 1 108 0
 393               		.cfi_startproc
 394               	/* prologue: function */
 395               	/* frame size = 0 */
 396               	/* stack size = 0 */
 397               	.L__stack_usage = 0
 109:zombies.c     **** 	draw_zombies( z );
 398               		.loc 1 109 0
 399 0000 8091 0000 		lds r24,z
 400 0004 9091 0000 		lds r25,z+1
 401 0008 0C94 0000 		jmp draw_zombies
 402               	.LVL26:
 403               		.cfi_endproc
 404               	.LFE6:
 406               	.global	__gtsf2
 407               	.global	__ltsf2
 408               	.global	__gesf2
 409               	.global	__addsf3
 410               	.global	__lesf2
 411               	.global	__floatsisf
 412               	.global	__subsf3
 413               		.section	.text.update_zombies,"ax",@progbits
 414               	.global	update_zombies
 416               	update_zombies:
 417               	.LFB7:
 110:zombies.c     **** }
 111:zombies.c     **** 
 112:zombies.c     **** void update_zombies ( Sprite * sprites ) {
 418               		.loc 1 112 0
 419               		.cfi_startproc
 420               	.LVL27:
 421 0000 2F92      		push r2
 422               	.LCFI26:
 423               		.cfi_def_cfa_offset 3
 424               		.cfi_offset 2, -2
 425 0002 3F92      		push r3
 426               	.LCFI27:
 427               		.cfi_def_cfa_offset 4
 428               		.cfi_offset 3, -3
 429 0004 4F92      		push r4
 430               	.LCFI28:
 431               		.cfi_def_cfa_offset 5
 432               		.cfi_offset 4, -4
 433 0006 5F92      		push r5
 434               	.LCFI29:
 435               		.cfi_def_cfa_offset 6
 436               		.cfi_offset 5, -5
 437 0008 6F92      		push r6
 438               	.LCFI30:
 439               		.cfi_def_cfa_offset 7
 440               		.cfi_offset 6, -6
 441 000a 7F92      		push r7
 442               	.LCFI31:
 443               		.cfi_def_cfa_offset 8
 444               		.cfi_offset 7, -7
 445 000c 8F92      		push r8
 446               	.LCFI32:
 447               		.cfi_def_cfa_offset 9
 448               		.cfi_offset 8, -8
 449 000e 9F92      		push r9
 450               	.LCFI33:
 451               		.cfi_def_cfa_offset 10
 452               		.cfi_offset 9, -9
 453 0010 AF92      		push r10
 454               	.LCFI34:
 455               		.cfi_def_cfa_offset 11
 456               		.cfi_offset 10, -10
 457 0012 BF92      		push r11
 458               	.LCFI35:
 459               		.cfi_def_cfa_offset 12
 460               		.cfi_offset 11, -11
 461 0014 CF92      		push r12
 462               	.LCFI36:
 463               		.cfi_def_cfa_offset 13
 464               		.cfi_offset 12, -12
 465 0016 DF92      		push r13
 466               	.LCFI37:
 467               		.cfi_def_cfa_offset 14
 468               		.cfi_offset 13, -13
 469 0018 EF92      		push r14
 470               	.LCFI38:
 471               		.cfi_def_cfa_offset 15
 472               		.cfi_offset 14, -14
 473 001a FF92      		push r15
 474               	.LCFI39:
 475               		.cfi_def_cfa_offset 16
 476               		.cfi_offset 15, -15
 477 001c 0F93      		push r16
 478               	.LCFI40:
 479               		.cfi_def_cfa_offset 17
 480               		.cfi_offset 16, -16
 481 001e 1F93      		push r17
 482               	.LCFI41:
 483               		.cfi_def_cfa_offset 18
 484               		.cfi_offset 17, -17
 485 0020 CF93      		push r28
 486               	.LCFI42:
 487               		.cfi_def_cfa_offset 19
 488               		.cfi_offset 28, -18
 489 0022 DF93      		push r29
 490               	.LCFI43:
 491               		.cfi_def_cfa_offset 20
 492               		.cfi_offset 29, -19
 493               	/* prologue: function */
 494               	/* frame size = 0 */
 495               	/* stack size = 18 */
 496               	.L__stack_usage = 18
 497 0024 1C01      		movw r2,r24
 498               	.LVL28:
 499 0026 EC01      		movw r28,r24
 500               		.loc 1 112 0
 501 0028 00E0      		ldi r16,0
 502 002a 10E0      		ldi r17,0
 503               	.LVL29:
 504               	.L50:
 505               	.LBB7:
 506               	.LBB8:
 113:zombies.c     **** 	// pick a direction to move in
 114:zombies.c     **** 	for ( int i = 0; i < zombie_count; i++ ) {
 115:zombies.c     **** 		int change = rand()%100;
 507               		.loc 1 115 0
 508 002c 0E94 0000 		call rand
 509               	.LVL30:
 510 0030 64E6      		ldi r22,lo8(100)
 511 0032 70E0      		ldi r23,0
 512 0034 0E94 0000 		call __divmodhi4
 513               	.LVL31:
 116:zombies.c     **** 		if ( change > 95 ) {
 514               		.loc 1 116 0
 515 0038 8036      		cpi r24,96
 516 003a 9105      		cpc r25,__zero_reg__
 517 003c 04F0      		brlt .L14
 117:zombies.c     **** 			if ( sprites[i].dy > 0 ) {
 518               		.loc 1 117 0
 519 003e C988      		ldd r12,Y+17
 520 0040 DA88      		ldd r13,Y+18
 521 0042 EB88      		ldd r14,Y+19
 522 0044 FC88      		ldd r15,Y+20
 523 0046 20E0      		ldi r18,0
 524 0048 30E0      		ldi r19,0
 525 004a A901      		movw r20,r18
 526 004c C701      		movw r24,r14
 527 004e B601      		movw r22,r12
 528 0050 0E94 0000 		call __gtsf2
 529               	.LVL32:
 530 0054 1816      		cp __zero_reg__,r24
 531 0056 04F4      		brge .L72
 532 0058 00C0      		rjmp .L82
 533               	.L72:
 118:zombies.c     **** 				sprites[i].dx = -1;
 119:zombies.c     **** 				sprites[i].dy = 0;
 120:zombies.c     **** 			}
 121:zombies.c     **** 			else if( sprites[i].dy < 0 ) {
 534               		.loc 1 121 0
 535 005a 20E0      		ldi r18,0
 536 005c 30E0      		ldi r19,0
 537 005e A901      		movw r20,r18
 538 0060 C701      		movw r24,r14
 539 0062 B601      		movw r22,r12
 540 0064 0E94 0000 		call __ltsf2
 541               	.LVL33:
 542 0068 87FD      		sbrc r24,7
 543 006a 00C0      		rjmp .L79
 544               	.L73:
 122:zombies.c     **** 				sprites[i].dx = 1;
 123:zombies.c     **** 				sprites[i].dy = 0;
 124:zombies.c     **** 			}
 125:zombies.c     **** 			else if ( sprites[i].dx > 0 ) {
 545               		.loc 1 125 0
 546 006c CD84      		ldd r12,Y+13
 547 006e DE84      		ldd r13,Y+14
 548 0070 EF84      		ldd r14,Y+15
 549 0072 F888      		ldd r15,Y+16
 550 0074 20E0      		ldi r18,0
 551 0076 30E0      		ldi r19,0
 552 0078 A901      		movw r20,r18
 553 007a C701      		movw r24,r14
 554 007c B601      		movw r22,r12
 555 007e 0E94 0000 		call __gtsf2
 556               	.LVL34:
 557 0082 1816      		cp __zero_reg__,r24
 558 0084 04F4      		brge .L74
 559 0086 00C0      		rjmp .L81
 560               	.L74:
 126:zombies.c     **** 				sprites[i].dx = 0;
 127:zombies.c     **** 				sprites[i].dy = 1;
 128:zombies.c     **** 			}
 129:zombies.c     **** 			else if( sprites[i].dx < 0) {
 561               		.loc 1 129 0
 562 0088 20E0      		ldi r18,0
 563 008a 30E0      		ldi r19,0
 564 008c A901      		movw r20,r18
 565 008e C701      		movw r24,r14
 566 0090 B601      		movw r22,r12
 567 0092 0E94 0000 		call __ltsf2
 568               	.LVL35:
 569 0096 87FF      		sbrs r24,7
 570 0098 00C0      		rjmp .L23
 571 009a 00C0      		rjmp .L83
 572               	.LVL36:
 573               	.L14:
 130:zombies.c     **** 				sprites[i].dx = 0;
 131:zombies.c     **** 				sprites[i].dy = -1;
 132:zombies.c     **** 			}
 133:zombies.c     **** 		}
 134:zombies.c     **** 		if( change < 5 ) {
 574               		.loc 1 134 0
 575 009c 0597      		sbiw r24,5
 576 009e 04F0      		brlt .+2
 577 00a0 00C0      		rjmp .L23
 135:zombies.c     **** 			if( sprites[i].dy > 0) {
 578               		.loc 1 135 0
 579 00a2 C988      		ldd r12,Y+17
 580 00a4 DA88      		ldd r13,Y+18
 581 00a6 EB88      		ldd r14,Y+19
 582 00a8 FC88      		ldd r15,Y+20
 583 00aa 20E0      		ldi r18,0
 584 00ac 30E0      		ldi r19,0
 585 00ae A901      		movw r20,r18
 586 00b0 C701      		movw r24,r14
 587 00b2 B601      		movw r22,r12
 588 00b4 0E94 0000 		call __gtsf2
 589               	.LVL37:
 590 00b8 1816      		cp __zero_reg__,r24
 591 00ba 04F4      		brge .L75
 592               	.L79:
 136:zombies.c     **** 					sprites[i].dx = 1;
 593               		.loc 1 136 0
 594 00bc 80E0      		ldi r24,0
 595 00be 90E0      		ldi r25,0
 596 00c0 A0E8      		ldi r26,lo8(-128)
 597 00c2 BFE3      		ldi r27,lo8(63)
 598               	.L80:
 599 00c4 8D87      		std Y+13,r24
 600 00c6 9E87      		std Y+14,r25
 601 00c8 AF87      		std Y+15,r26
 602 00ca B88B      		std Y+16,r27
 137:zombies.c     **** 					sprites[i].dy = 0;
 603               		.loc 1 137 0
 604 00cc 198A      		std Y+17,__zero_reg__
 605 00ce 1A8A      		std Y+18,__zero_reg__
 606 00d0 1B8A      		std Y+19,__zero_reg__
 607 00d2 1C8A      		std Y+20,__zero_reg__
 608 00d4 00C0      		rjmp .L23
 609               	.L75:
 138:zombies.c     **** 			}
 139:zombies.c     **** 			else if( sprites[i].dy < 0 ) {
 610               		.loc 1 139 0
 611 00d6 20E0      		ldi r18,0
 612 00d8 30E0      		ldi r19,0
 613 00da A901      		movw r20,r18
 614 00dc C701      		movw r24,r14
 615 00de B601      		movw r22,r12
 616 00e0 0E94 0000 		call __ltsf2
 617               	.LVL38:
 618 00e4 87FF      		sbrs r24,7
 619 00e6 00C0      		rjmp .L76
 620               	.L82:
 140:zombies.c     **** 					sprites[i].dx = -1;
 621               		.loc 1 140 0
 622 00e8 80E0      		ldi r24,0
 623 00ea 90E0      		ldi r25,0
 624 00ec A0E8      		ldi r26,lo8(-128)
 625 00ee BFEB      		ldi r27,lo8(-65)
 626 00f0 00C0      		rjmp .L80
 627               	.L76:
 141:zombies.c     **** 					sprites[i].dy = 0;
 142:zombies.c     **** 			}
 143:zombies.c     **** 			else if( sprites[i].dx > 0){
 628               		.loc 1 143 0
 629 00f2 CD84      		ldd r12,Y+13
 630 00f4 DE84      		ldd r13,Y+14
 631 00f6 EF84      		ldd r14,Y+15
 632 00f8 F888      		ldd r15,Y+16
 633 00fa 20E0      		ldi r18,0
 634 00fc 30E0      		ldi r19,0
 635 00fe A901      		movw r20,r18
 636 0100 C701      		movw r24,r14
 637 0102 B601      		movw r22,r12
 638 0104 0E94 0000 		call __gtsf2
 639               	.LVL39:
 640 0108 1816      		cp __zero_reg__,r24
 641 010a 04F4      		brge .L77
 642               	.L83:
 144:zombies.c     **** 					sprites[i].dx = 0;
 643               		.loc 1 144 0
 644 010c 1D86      		std Y+13,__zero_reg__
 645 010e 1E86      		std Y+14,__zero_reg__
 646 0110 1F86      		std Y+15,__zero_reg__
 647 0112 188A      		std Y+16,__zero_reg__
 145:zombies.c     **** 					sprites[i].dy = -1;
 648               		.loc 1 145 0
 649 0114 80E0      		ldi r24,0
 650 0116 90E0      		ldi r25,0
 651 0118 A0E8      		ldi r26,lo8(-128)
 652 011a BFEB      		ldi r27,lo8(-65)
 653 011c 00C0      		rjmp .L78
 654               	.L77:
 146:zombies.c     **** 			}
 147:zombies.c     **** 			else if ( sprites[i].dx < 0){
 655               		.loc 1 147 0
 656 011e 20E0      		ldi r18,0
 657 0120 30E0      		ldi r19,0
 658 0122 A901      		movw r20,r18
 659 0124 C701      		movw r24,r14
 660 0126 B601      		movw r22,r12
 661 0128 0E94 0000 		call __ltsf2
 662               	.LVL40:
 663 012c 87FF      		sbrs r24,7
 664 012e 00C0      		rjmp .L23
 665               	.L81:
 148:zombies.c     **** 				sprites[i].dx = 0;
 666               		.loc 1 148 0
 667 0130 1D86      		std Y+13,__zero_reg__
 668 0132 1E86      		std Y+14,__zero_reg__
 669 0134 1F86      		std Y+15,__zero_reg__
 670 0136 188A      		std Y+16,__zero_reg__
 149:zombies.c     **** 				sprites[i].dy = 1;
 671               		.loc 1 149 0
 672 0138 80E0      		ldi r24,0
 673 013a 90E0      		ldi r25,0
 674 013c A0E8      		ldi r26,lo8(-128)
 675 013e BFE3      		ldi r27,lo8(63)
 676               	.L78:
 677 0140 898B      		std Y+17,r24
 678 0142 9A8B      		std Y+18,r25
 679 0144 AB8B      		std Y+19,r26
 680 0146 BC8B      		std Y+20,r27
 681               	.L23:
 150:zombies.c     **** 			}
 151:zombies.c     **** 		}
 152:zombies.c     **** 		if ( (sprites[i].x >= pit_prt->x) && (sprites[i].x <= pit_prt->x + 5 ) && (sprites[i].y >= pit_pr
 682               		.loc 1 152 0
 683 0148 4880      		ld r4,Y
 684 014a 5980      		ldd r5,Y+1
 685 014c 6A80      		ldd r6,Y+2
 686 014e 7B80      		ldd r7,Y+3
 687 0150 E090 0000 		lds r14,pit_prt
 688 0154 F090 0000 		lds r15,pit_prt+1
 689 0158 D701      		movw r26,r14
 690 015a 8D90      		ld r8,X+
 691 015c 9D90      		ld r9,X+
 692 015e AD90      		ld r10,X+
 693 0160 BC90      		ld r11,X
 694 0162 A501      		movw r20,r10
 695 0164 9401      		movw r18,r8
 696 0166 C301      		movw r24,r6
 697 0168 B201      		movw r22,r4
 698 016a 0E94 0000 		call __gesf2
 699               	.LVL41:
 700 016e 87FD      		sbrc r24,7
 701 0170 00C0      		rjmp .L31
 702               		.loc 1 152 0 is_stmt 0 discriminator 1
 703 0172 20E0      		ldi r18,0
 704 0174 30E0      		ldi r19,0
 705 0176 40EA      		ldi r20,lo8(-96)
 706 0178 50E4      		ldi r21,lo8(64)
 707 017a C501      		movw r24,r10
 708 017c B401      		movw r22,r8
 709 017e 0E94 0000 		call __addsf3
 710               	.LVL42:
 711 0182 9B01      		movw r18,r22
 712 0184 AC01      		movw r20,r24
 713 0186 C301      		movw r24,r6
 714 0188 B201      		movw r22,r4
 715 018a 0E94 0000 		call __lesf2
 716               	.LVL43:
 717 018e 1816      		cp __zero_reg__,r24
 718 0190 04F4      		brge .+2
 719 0192 00C0      		rjmp .L31
 720 0194 4C80      		ldd r4,Y+4
 721 0196 5D80      		ldd r5,Y+5
 722 0198 6E80      		ldd r6,Y+6
 723 019a 7F80      		ldd r7,Y+7
 724 019c F701      		movw r30,r14
 725 019e C480      		ldd r12,Z+4
 726 01a0 D580      		ldd r13,Z+5
 727 01a2 E680      		ldd r14,Z+6
 728 01a4 F780      		ldd r15,Z+7
 729 01a6 A701      		movw r20,r14
 730 01a8 9601      		movw r18,r12
 731 01aa C301      		movw r24,r6
 732 01ac B201      		movw r22,r4
 733 01ae 0E94 0000 		call __gesf2
 734               	.LVL44:
 735 01b2 87FD      		sbrc r24,7
 736 01b4 00C0      		rjmp .L31
 737 01b6 20E0      		ldi r18,0
 738 01b8 30E0      		ldi r19,0
 739 01ba 40EA      		ldi r20,lo8(-96)
 740 01bc 50E4      		ldi r21,lo8(64)
 741 01be C701      		movw r24,r14
 742 01c0 B601      		movw r22,r12
 743 01c2 0E94 0000 		call __addsf3
 744               	.LVL45:
 745 01c6 9B01      		movw r18,r22
 746 01c8 AC01      		movw r20,r24
 747 01ca C301      		movw r24,r6
 748 01cc B201      		movw r22,r4
 749 01ce 0E94 0000 		call __lesf2
 750               	.LVL46:
 751 01d2 1816      		cp __zero_reg__,r24
 752 01d4 04F0      		brlt .L31
 153:zombies.c     **** 			sprites[i].dx = 0;
 753               		.loc 1 153 0 is_stmt 1
 754 01d6 1D86      		std Y+13,__zero_reg__
 755 01d8 1E86      		std Y+14,__zero_reg__
 756 01da 1F86      		std Y+15,__zero_reg__
 757 01dc 188A      		std Y+16,__zero_reg__
 154:zombies.c     **** 			sprites[i].dy = 0;
 758               		.loc 1 154 0
 759 01de 198A      		std Y+17,__zero_reg__
 760 01e0 1A8A      		std Y+18,__zero_reg__
 761 01e2 1B8A      		std Y+19,__zero_reg__
 762 01e4 1C8A      		std Y+20,__zero_reg__
 155:zombies.c     **** 			sprites[i].x = pit_prt->x + 1;
 763               		.loc 1 155 0
 764 01e6 20E0      		ldi r18,0
 765 01e8 30E0      		ldi r19,0
 766 01ea 40E8      		ldi r20,lo8(-128)
 767 01ec 5FE3      		ldi r21,lo8(63)
 768 01ee C501      		movw r24,r10
 769 01f0 B401      		movw r22,r8
 770 01f2 0E94 0000 		call __addsf3
 771               	.LVL47:
 772 01f6 6883      		st Y,r22
 773 01f8 7983      		std Y+1,r23
 774 01fa 8A83      		std Y+2,r24
 775 01fc 9B83      		std Y+3,r25
 156:zombies.c     **** 			sprites[i].y = pit_prt->y + 1;
 776               		.loc 1 156 0
 777 01fe 20E0      		ldi r18,0
 778 0200 30E0      		ldi r19,0
 779 0202 40E8      		ldi r20,lo8(-128)
 780 0204 5FE3      		ldi r21,lo8(63)
 781 0206 C701      		movw r24,r14
 782 0208 B601      		movw r22,r12
 783 020a 0E94 0000 		call __addsf3
 784               	.LVL48:
 785 020e 6C83      		std Y+4,r22
 786 0210 7D83      		std Y+5,r23
 787 0212 8E83      		std Y+6,r24
 788 0214 9F83      		std Y+7,r25
 789               	.L31:
 157:zombies.c     **** 		}
 158:zombies.c     **** 		if ( (sprites[i].x >= sword_prt->x) && (sprites[i].x <= sword_prt->x + 4 ) && (sprites[i].y >= sw
 790               		.loc 1 158 0
 791 0216 8880      		ld r8,Y
 792 0218 9980      		ldd r9,Y+1
 793 021a AA80      		ldd r10,Y+2
 794 021c BB80      		ldd r11,Y+3
 795 021e E090 0000 		lds r14,sword_prt
 796 0222 F090 0000 		lds r15,sword_prt+1
 797 0226 D701      		movw r26,r14
 798 0228 4D90      		ld r4,X+
 799 022a 5D90      		ld r5,X+
 800 022c 6D90      		ld r6,X+
 801 022e 7C90      		ld r7,X
 802 0230 A301      		movw r20,r6
 803 0232 9201      		movw r18,r4
 804 0234 C501      		movw r24,r10
 805 0236 B401      		movw r22,r8
 806 0238 0E94 0000 		call __gesf2
 807               	.LVL49:
 808 023c 87FD      		sbrc r24,7
 809 023e 00C0      		rjmp .L36
 810               		.loc 1 158 0 is_stmt 0 discriminator 1
 811 0240 20E0      		ldi r18,0
 812 0242 30E0      		ldi r19,0
 813 0244 40E8      		ldi r20,lo8(-128)
 814 0246 50E4      		ldi r21,lo8(64)
 815 0248 C301      		movw r24,r6
 816 024a B201      		movw r22,r4
 817 024c 0E94 0000 		call __addsf3
 818               	.LVL50:
 819 0250 9B01      		movw r18,r22
 820 0252 AC01      		movw r20,r24
 821 0254 C501      		movw r24,r10
 822 0256 B401      		movw r22,r8
 823 0258 0E94 0000 		call __lesf2
 824               	.LVL51:
 825 025c 1816      		cp __zero_reg__,r24
 826 025e 04F4      		brge .+2
 827 0260 00C0      		rjmp .L36
 828 0262 8C80      		ldd r8,Y+4
 829 0264 9D80      		ldd r9,Y+5
 830 0266 AE80      		ldd r10,Y+6
 831 0268 BF80      		ldd r11,Y+7
 832 026a F701      		movw r30,r14
 833 026c C480      		ldd r12,Z+4
 834 026e D580      		ldd r13,Z+5
 835 0270 E680      		ldd r14,Z+6
 836 0272 F780      		ldd r15,Z+7
 837 0274 A701      		movw r20,r14
 838 0276 9601      		movw r18,r12
 839 0278 C501      		movw r24,r10
 840 027a B401      		movw r22,r8
 841 027c 0E94 0000 		call __gesf2
 842               	.LVL52:
 843 0280 87FD      		sbrc r24,7
 844 0282 00C0      		rjmp .L36
 845 0284 20E0      		ldi r18,0
 846 0286 30E0      		ldi r19,0
 847 0288 40E8      		ldi r20,lo8(-128)
 848 028a 50E4      		ldi r21,lo8(64)
 849 028c C701      		movw r24,r14
 850 028e B601      		movw r22,r12
 851 0290 0E94 0000 		call __addsf3
 852               	.LVL53:
 853 0294 9B01      		movw r18,r22
 854 0296 AC01      		movw r20,r24
 855 0298 C501      		movw r24,r10
 856 029a B401      		movw r22,r8
 857 029c 0E94 0000 		call __lesf2
 858               	.LVL54:
 859 02a0 1816      		cp __zero_reg__,r24
 860 02a2 04F0      		brlt .L36
 159:zombies.c     **** 			sprites[i].dx = 0;
 861               		.loc 1 159 0 is_stmt 1
 862 02a4 1D86      		std Y+13,__zero_reg__
 863 02a6 1E86      		std Y+14,__zero_reg__
 864 02a8 1F86      		std Y+15,__zero_reg__
 865 02aa 188A      		std Y+16,__zero_reg__
 160:zombies.c     **** 			sprites[i].dy = 0;
 866               		.loc 1 160 0
 867 02ac 198A      		std Y+17,__zero_reg__
 868 02ae 1A8A      		std Y+18,__zero_reg__
 869 02b0 1B8A      		std Y+19,__zero_reg__
 870 02b2 1C8A      		std Y+20,__zero_reg__
 161:zombies.c     **** 			sprites[i].x = -5;
 871               		.loc 1 161 0
 872 02b4 80E0      		ldi r24,0
 873 02b6 90E0      		ldi r25,0
 874 02b8 A0EA      		ldi r26,lo8(-96)
 875 02ba B0EC      		ldi r27,lo8(-64)
 876 02bc 8883      		st Y,r24
 877 02be 9983      		std Y+1,r25
 878 02c0 AA83      		std Y+2,r26
 879 02c2 BB83      		std Y+3,r27
 162:zombies.c     **** 			sprites[i].y = -5;
 880               		.loc 1 162 0
 881 02c4 8C83      		std Y+4,r24
 882 02c6 9D83      		std Y+5,r25
 883 02c8 AE83      		std Y+6,r26
 884 02ca BF83      		std Y+7,r27
 112:zombies.c     **** void update_zombies ( Sprite * sprites ) {
 885               		.loc 1 112 0
 886 02cc F101      		movw r30,r2
 887 02ce E00F      		add r30,r16
 888 02d0 F11F      		adc r31,r17
 163:zombies.c     **** 			sprites[i].is_visible = 0;
 889               		.loc 1 163 0
 890 02d2 1286      		std Z+10,__zero_reg__
 164:zombies.c     **** 			score = score + 2;
 891               		.loc 1 164 0
 892 02d4 8091 0000 		lds r24,score
 893 02d8 9091 0000 		lds r25,score+1
 894 02dc 0296      		adiw r24,2
 895 02de 9093 0000 		sts score+1,r25
 896 02e2 8093 0000 		sts score,r24
 165:zombies.c     **** 			dead_zombies = dead_zombies + 1;
 897               		.loc 1 165 0
 898 02e6 8091 0000 		lds r24,dead_zombies
 899 02ea 9091 0000 		lds r25,dead_zombies+1
 900 02ee 0196      		adiw r24,1
 901 02f0 9093 0000 		sts dead_zombies+1,r25
 902 02f4 8093 0000 		sts dead_zombies,r24
 903               	.L36:
 112:zombies.c     **** void update_zombies ( Sprite * sprites ) {
 904               		.loc 1 112 0
 905 02f8 7101      		movw r14,r2
 906 02fa E00E      		add r14,r16
 907 02fc F11E      		adc r15,r17
 166:zombies.c     **** 
 167:zombies.c     **** 
 168:zombies.c     **** 				}
 169:zombies.c     **** 		if ( sprites[i].is_visible == 1) {
 908               		.loc 1 169 0
 909 02fe D701      		movw r26,r14
 910 0300 1A96      		adiw r26, 10
 911 0302 8C91      		ld r24,X
 912 0304 8130      		cpi r24,lo8(1)
 913 0306 01F4      		brne .L41
 170:zombies.c     **** 			sprites[i].x += sprites[i].dx;
 914               		.loc 1 170 0
 915 0308 2D85      		ldd r18,Y+13
 916 030a 3E85      		ldd r19,Y+14
 917 030c 4F85      		ldd r20,Y+15
 918 030e 5889      		ldd r21,Y+16
 919 0310 6881      		ld r22,Y
 920 0312 7981      		ldd r23,Y+1
 921 0314 8A81      		ldd r24,Y+2
 922 0316 9B81      		ldd r25,Y+3
 923 0318 0E94 0000 		call __addsf3
 924               	.LVL55:
 925 031c 6883      		st Y,r22
 926 031e 7983      		std Y+1,r23
 927 0320 8A83      		std Y+2,r24
 928 0322 9B83      		std Y+3,r25
 171:zombies.c     **** 			sprites[i].y += sprites[i].dy;
 929               		.loc 1 171 0
 930 0324 2989      		ldd r18,Y+17
 931 0326 3A89      		ldd r19,Y+18
 932 0328 4B89      		ldd r20,Y+19
 933 032a 5C89      		ldd r21,Y+20
 934 032c 6C81      		ldd r22,Y+4
 935 032e 7D81      		ldd r23,Y+5
 936 0330 8E81      		ldd r24,Y+6
 937 0332 9F81      		ldd r25,Y+7
 938 0334 0E94 0000 		call __addsf3
 939               	.LVL56:
 940 0338 6C83      		std Y+4,r22
 941 033a 7D83      		std Y+5,r23
 942 033c 8E83      		std Y+6,r24
 943 033e 9F83      		std Y+7,r25
 944               	.L41:
 172:zombies.c     **** 		}
 173:zombies.c     **** 
 174:zombies.c     **** 
 175:zombies.c     **** 		if ( sprites[i].x >= LCD_X - sprites[i].width) {
 945               		.loc 1 175 0
 946 0340 8880      		ld r8,Y
 947 0342 9980      		ldd r9,Y+1
 948 0344 AA80      		ldd r10,Y+2
 949 0346 BB80      		ldd r11,Y+3
 950 0348 F701      		movw r30,r14
 951 034a C084      		ldd r12,Z+8
 952 034c D12C      		mov r13,__zero_reg__
 953 034e 84E5      		ldi r24,lo8(84)
 954 0350 90E0      		ldi r25,0
 955 0352 8C19      		sub r24,r12
 956 0354 9D09      		sbc r25,r13
 957 0356 BC01      		movw r22,r24
 958 0358 8827      		clr r24
 959 035a 77FD      		sbrc r23,7
 960 035c 8095      		com r24
 961 035e 982F      		mov r25,r24
 962 0360 0E94 0000 		call __floatsisf
 963               	.LVL57:
 964 0364 9B01      		movw r18,r22
 965 0366 AC01      		movw r20,r24
 966 0368 C501      		movw r24,r10
 967 036a B401      		movw r22,r8
 968 036c 0E94 0000 		call __gesf2
 969               	.LVL58:
 970 0370 87FD      		sbrc r24,7
 971 0372 00C0      		rjmp .L42
 176:zombies.c     **** 			sprites[i].x -=1;
 972               		.loc 1 176 0
 973 0374 20E0      		ldi r18,0
 974 0376 30E0      		ldi r19,0
 975 0378 40E8      		ldi r20,lo8(-128)
 976 037a 5FE3      		ldi r21,lo8(63)
 977 037c C501      		movw r24,r10
 978 037e B401      		movw r22,r8
 979 0380 0E94 0000 		call __subsf3
 980               	.LVL59:
 981 0384 6883      		st Y,r22
 982 0386 7983      		std Y+1,r23
 983 0388 8A83      		std Y+2,r24
 984 038a 9B83      		std Y+3,r25
 985               	.L42:
 177:zombies.c     **** 		}
 178:zombies.c     **** 
 179:zombies.c     **** 		if (sprites[i].x < 0 + sprites[i].width - 2) {
 986               		.loc 1 179 0
 987 038c 8880      		ld r8,Y
 988 038e 9980      		ldd r9,Y+1
 989 0390 AA80      		ldd r10,Y+2
 990 0392 BB80      		ldd r11,Y+3
 991 0394 F2E0      		ldi r31,2
 992 0396 CF1A      		sub r12,r31
 993 0398 D108      		sbc r13,__zero_reg__
 994 039a B601      		movw r22,r12
 995 039c 8827      		clr r24
 996 039e 77FD      		sbrc r23,7
 997 03a0 8095      		com r24
 998 03a2 982F      		mov r25,r24
 999 03a4 0E94 0000 		call __floatsisf
 1000               	.LVL60:
 1001 03a8 9B01      		movw r18,r22
 1002 03aa AC01      		movw r20,r24
 1003 03ac C501      		movw r24,r10
 1004 03ae B401      		movw r22,r8
 1005 03b0 0E94 0000 		call __ltsf2
 1006               	.LVL61:
 1007 03b4 87FF      		sbrs r24,7
 1008 03b6 00C0      		rjmp .L44
 180:zombies.c     **** 			sprites[i].x +=1;
 1009               		.loc 1 180 0
 1010 03b8 20E0      		ldi r18,0
 1011 03ba 30E0      		ldi r19,0
 1012 03bc 40E8      		ldi r20,lo8(-128)
 1013 03be 5FE3      		ldi r21,lo8(63)
 1014 03c0 C501      		movw r24,r10
 1015 03c2 B401      		movw r22,r8
 1016 03c4 0E94 0000 		call __addsf3
 1017               	.LVL62:
 1018 03c8 6883      		st Y,r22
 1019 03ca 7983      		std Y+1,r23
 1020 03cc 8A83      		std Y+2,r24
 1021 03ce 9B83      		std Y+3,r25
 1022               	.L44:
 181:zombies.c     **** 		}
 182:zombies.c     **** 
 183:zombies.c     **** 		if ( sprites[i].y >= LCD_Y - sprites[i].height ) {
 1023               		.loc 1 183 0
 1024 03d0 8C80      		ldd r8,Y+4
 1025 03d2 9D80      		ldd r9,Y+5
 1026 03d4 AE80      		ldd r10,Y+6
 1027 03d6 BF80      		ldd r11,Y+7
 1028 03d8 D701      		movw r26,r14
 1029 03da 1996      		adiw r26, 9
 1030 03dc 8C91      		ld r24,X
 1031 03de E0E3      		ldi r30,lo8(48)
 1032 03e0 F0E0      		ldi r31,0
 1033 03e2 E81B      		sub r30,r24
 1034 03e4 F109      		sbc r31,__zero_reg__
 1035 03e6 BF01      		movw r22,r30
 1036 03e8 8827      		clr r24
 1037 03ea 77FD      		sbrc r23,7
 1038 03ec 8095      		com r24
 1039 03ee 982F      		mov r25,r24
 1040 03f0 0E94 0000 		call __floatsisf
 1041               	.LVL63:
 1042 03f4 9B01      		movw r18,r22
 1043 03f6 AC01      		movw r20,r24
 1044 03f8 C501      		movw r24,r10
 1045 03fa B401      		movw r22,r8
 1046 03fc 0E94 0000 		call __gesf2
 1047               	.LVL64:
 1048 0400 87FD      		sbrc r24,7
 1049 0402 00C0      		rjmp .L46
 184:zombies.c     **** 			sprites[i].y -=1;
 1050               		.loc 1 184 0
 1051 0404 20E0      		ldi r18,0
 1052 0406 30E0      		ldi r19,0
 1053 0408 40E8      		ldi r20,lo8(-128)
 1054 040a 5FE3      		ldi r21,lo8(63)
 1055 040c C501      		movw r24,r10
 1056 040e B401      		movw r22,r8
 1057 0410 0E94 0000 		call __subsf3
 1058               	.LVL65:
 1059 0414 6C83      		std Y+4,r22
 1060 0416 7D83      		std Y+5,r23
 1061 0418 8E83      		std Y+6,r24
 1062 041a 9F83      		std Y+7,r25
 1063               	.L46:
 185:zombies.c     **** 		}
 186:zombies.c     **** 
 187:zombies.c     **** 		if ( sprites[i].y < 0 + 13) {
 1064               		.loc 1 187 0
 1065 041c CC80      		ldd r12,Y+4
 1066 041e DD80      		ldd r13,Y+5
 1067 0420 EE80      		ldd r14,Y+6
 1068 0422 FF80      		ldd r15,Y+7
 1069 0424 20E0      		ldi r18,0
 1070 0426 30E0      		ldi r19,0
 1071 0428 40E5      		ldi r20,lo8(80)
 1072 042a 51E4      		ldi r21,lo8(65)
 1073 042c C701      		movw r24,r14
 1074 042e B601      		movw r22,r12
 1075 0430 0E94 0000 		call __ltsf2
 1076               	.LVL66:
 1077 0434 87FF      		sbrs r24,7
 1078 0436 00C0      		rjmp .L48
 188:zombies.c     **** 			sprites[i].y +=1;
 1079               		.loc 1 188 0
 1080 0438 20E0      		ldi r18,0
 1081 043a 30E0      		ldi r19,0
 1082 043c 40E8      		ldi r20,lo8(-128)
 1083 043e 5FE3      		ldi r21,lo8(63)
 1084 0440 C701      		movw r24,r14
 1085 0442 B601      		movw r22,r12
 1086 0444 0E94 0000 		call __addsf3
 1087               	.LVL67:
 1088 0448 6C83      		std Y+4,r22
 1089 044a 7D83      		std Y+5,r23
 1090 044c 8E83      		std Y+6,r24
 1091 044e 9F83      		std Y+7,r25
 1092               	.L48:
 1093 0450 0B5E      		subi r16,-21
 1094 0452 1F4F      		sbci r17,-1
 1095 0454 6596      		adiw r28,21
 1096               	.LBE8:
 114:zombies.c     **** 	for ( int i = 0; i < zombie_count; i++ ) {
 1097               		.loc 1 114 0
 1098 0456 083A      		cpi r16,-88
 1099 0458 1105      		cpc r17,__zero_reg__
 1100 045a 01F0      		breq .+2
 1101 045c 00C0      		rjmp .L50
 1102               	/* epilogue start */
 1103               	.LBE7:
 189:zombies.c     **** 		}
 190:zombies.c     **** 
 191:zombies.c     **** 	}
 192:zombies.c     **** }
 1104               		.loc 1 192 0
 1105 045e DF91      		pop r29
 1106 0460 CF91      		pop r28
 1107 0462 1F91      		pop r17
 1108 0464 0F91      		pop r16
 1109 0466 FF90      		pop r15
 1110 0468 EF90      		pop r14
 1111 046a DF90      		pop r13
 1112 046c CF90      		pop r12
 1113 046e BF90      		pop r11
 1114 0470 AF90      		pop r10
 1115 0472 9F90      		pop r9
 1116 0474 8F90      		pop r8
 1117 0476 7F90      		pop r7
 1118 0478 6F90      		pop r6
 1119 047a 5F90      		pop r5
 1120 047c 4F90      		pop r4
 1121 047e 3F90      		pop r3
 1122 0480 2F90      		pop r2
 1123               	.LVL68:
 1124 0482 0895      		ret
 1125               		.cfi_endproc
 1126               	.LFE7:
 1128               		.section	.text.zombie_updater,"ax",@progbits
 1129               	.global	zombie_updater
 1131               	zombie_updater:
 1132               	.LFB5:
 103:zombies.c     **** void zombie_updater() {
 1133               		.loc 1 103 0
 1134               		.cfi_startproc
 1135               	/* prologue: function */
 1136               	/* frame size = 0 */
 1137               	/* stack size = 0 */
 1138               	.L__stack_usage = 0
 104:zombies.c     **** 	update_zombies( z );
 1139               		.loc 1 104 0
 1140 0000 8091 0000 		lds r24,z
 1141 0004 9091 0000 		lds r25,z+1
 1142 0008 0E94 0000 		call update_zombies
 1143               	.LVL69:
 105:zombies.c     **** 	draw_zombies( z );
 1144               		.loc 1 105 0
 1145 000c 8091 0000 		lds r24,z
 1146 0010 9091 0000 		lds r25,z+1
 1147 0014 0C94 0000 		jmp draw_zombies
 1148               	.LVL70:
 1149               		.cfi_endproc
 1150               	.LFE5:
 1152               		.section	.text.zombie_collision,"ax",@progbits
 1153               	.global	zombie_collision
 1155               	zombie_collision:
 1156               	.LFB10:
 193:zombies.c     **** 
 194:zombies.c     **** void check_zombie() {
 195:zombies.c     **** 	zombies_collission ( z );
 196:zombies.c     **** 	kill_zombies( z );
 197:zombies.c     **** }
 198:zombies.c     **** 
 199:zombies.c     **** void zombies_collission ( Sprite * zs ) {
 200:zombies.c     **** 	for ( int i = 0; i < zombie_count; i++ ) {
 201:zombies.c     **** 		zombie_collision( zs + i );
 202:zombies.c     **** 	}
 203:zombies.c     **** }
 204:zombies.c     **** 
 205:zombies.c     **** void zombie_collision( Sprite * z) {
 1157               		.loc 1 205 0
 1158               		.cfi_startproc
 1159               	.LVL71:
 1160 0000 2F92      		push r2
 1161               	.LCFI44:
 1162               		.cfi_def_cfa_offset 3
 1163               		.cfi_offset 2, -2
 1164 0002 3F92      		push r3
 1165               	.LCFI45:
 1166               		.cfi_def_cfa_offset 4
 1167               		.cfi_offset 3, -3
 1168 0004 4F92      		push r4
 1169               	.LCFI46:
 1170               		.cfi_def_cfa_offset 5
 1171               		.cfi_offset 4, -4
 1172 0006 5F92      		push r5
 1173               	.LCFI47:
 1174               		.cfi_def_cfa_offset 6
 1175               		.cfi_offset 5, -5
 1176 0008 6F92      		push r6
 1177               	.LCFI48:
 1178               		.cfi_def_cfa_offset 7
 1179               		.cfi_offset 6, -6
 1180 000a 7F92      		push r7
 1181               	.LCFI49:
 1182               		.cfi_def_cfa_offset 8
 1183               		.cfi_offset 7, -7
 1184 000c 8F92      		push r8
 1185               	.LCFI50:
 1186               		.cfi_def_cfa_offset 9
 1187               		.cfi_offset 8, -8
 1188 000e 9F92      		push r9
 1189               	.LCFI51:
 1190               		.cfi_def_cfa_offset 10
 1191               		.cfi_offset 9, -9
 1192 0010 AF92      		push r10
 1193               	.LCFI52:
 1194               		.cfi_def_cfa_offset 11
 1195               		.cfi_offset 10, -10
 1196 0012 BF92      		push r11
 1197               	.LCFI53:
 1198               		.cfi_def_cfa_offset 12
 1199               		.cfi_offset 11, -11
 1200 0014 CF92      		push r12
 1201               	.LCFI54:
 1202               		.cfi_def_cfa_offset 13
 1203               		.cfi_offset 12, -12
 1204 0016 DF92      		push r13
 1205               	.LCFI55:
 1206               		.cfi_def_cfa_offset 14
 1207               		.cfi_offset 13, -13
 1208 0018 EF92      		push r14
 1209               	.LCFI56:
 1210               		.cfi_def_cfa_offset 15
 1211               		.cfi_offset 14, -14
 1212 001a FF92      		push r15
 1213               	.LCFI57:
 1214               		.cfi_def_cfa_offset 16
 1215               		.cfi_offset 15, -15
 1216 001c 0F93      		push r16
 1217               	.LCFI58:
 1218               		.cfi_def_cfa_offset 17
 1219               		.cfi_offset 16, -16
 1220 001e 1F93      		push r17
 1221               	.LCFI59:
 1222               		.cfi_def_cfa_offset 18
 1223               		.cfi_offset 17, -17
 1224 0020 CF93      		push r28
 1225               	.LCFI60:
 1226               		.cfi_def_cfa_offset 19
 1227               		.cfi_offset 28, -18
 1228 0022 DF93      		push r29
 1229               	.LCFI61:
 1230               		.cfi_def_cfa_offset 20
 1231               		.cfi_offset 29, -19
 1232 0024 CDB7      		in r28,__SP_L__
 1233 0026 DEB7      		in r29,__SP_H__
 1234               	.LCFI62:
 1235               		.cfi_def_cfa_register 28
 1236 0028 2B97      		sbiw r28,11
 1237               	.LCFI63:
 1238               		.cfi_def_cfa_offset 31
 1239 002a 0FB6      		in __tmp_reg__,__SREG__
 1240 002c F894      		cli
 1241 002e DEBF      		out __SP_H__,r29
 1242 0030 0FBE      		out __SREG__,__tmp_reg__
 1243 0032 CDBF      		out __SP_L__,r28
 1244               	/* prologue: function */
 1245               	/* frame size = 11 */
 1246               	/* stack size = 29 */
 1247               	.L__stack_usage = 29
 1248 0034 9E83      		std Y+6,r25
 1249 0036 8D83      		std Y+5,r24
 206:zombies.c     **** 	if (
 207:zombies.c     **** 			( hero.x > z->x && hero.y > z->y && hero.x < z->x + 3 && hero.y < z->y + 3 ) ||
 1250               		.loc 1 207 0
 1251 0038 8090 0000 		lds r8,hero
 1252 003c 9090 0000 		lds r9,hero+1
 1253 0040 A090 0000 		lds r10,hero+2
 1254 0044 B090 0000 		lds r11,hero+3
 1255 0048 DC01      		movw r26,r24
 1256 004a CD90      		ld r12,X+
 1257 004c DD90      		ld r13,X+
 1258 004e ED90      		ld r14,X+
 1259 0050 FC90      		ld r15,X
 206:zombies.c     **** 	if (
 1260               		.loc 1 206 0
 1261 0052 A701      		movw r20,r14
 1262 0054 9601      		movw r18,r12
 1263 0056 C501      		movw r24,r10
 1264 0058 B401      		movw r22,r8
 1265 005a 0E94 0000 		call __gtsf2
 1266               	.LVL72:
 1267 005e 1816      		cp __zero_reg__,r24
 1268 0060 04F0      		brlt .+2
 1269 0062 00C0      		rjmp .L86
 1270               		.loc 1 207 0
 1271 0064 4090 0000 		lds r4,hero+4
 1272 0068 5090 0000 		lds r5,hero+4+1
 1273 006c 6090 0000 		lds r6,hero+4+2
 1274 0070 7090 0000 		lds r7,hero+4+3
 1275 0074 AD81      		ldd r26,Y+5
 1276 0076 BE81      		ldd r27,Y+6
 1277 0078 1496      		adiw r26,4
 1278 007a 8D91      		ld r24,X+
 1279 007c 9D91      		ld r25,X+
 1280 007e 0D90      		ld __tmp_reg__,X+
 1281 0080 BC91      		ld r27,X
 1282 0082 A02D      		mov r26,__tmp_reg__
 1283 0084 8983      		std Y+1,r24
 1284 0086 9A83      		std Y+2,r25
 1285 0088 AB83      		std Y+3,r26
 1286 008a BC83      		std Y+4,r27
 1287 008c 9C01      		movw r18,r24
 1288 008e AD01      		movw r20,r26
 1289 0090 C301      		movw r24,r6
 1290 0092 B201      		movw r22,r4
 1291 0094 0E94 0000 		call __gtsf2
 1292               	.LVL73:
 1293 0098 1816      		cp __zero_reg__,r24
 1294 009a 04F4      		brge .L86
 1295               		.loc 1 207 0 is_stmt 0 discriminator 1
 1296 009c 20E0      		ldi r18,0
 1297 009e 30E0      		ldi r19,0
 1298 00a0 40E4      		ldi r20,lo8(64)
 1299 00a2 50E4      		ldi r21,lo8(64)
 1300 00a4 C701      		movw r24,r14
 1301 00a6 B601      		movw r22,r12
 1302 00a8 0E94 0000 		call __addsf3
 1303               	.LVL74:
 1304 00ac 9B01      		movw r18,r22
 1305 00ae AC01      		movw r20,r24
 1306 00b0 C501      		movw r24,r10
 1307 00b2 B401      		movw r22,r8
 1308 00b4 0E94 0000 		call __ltsf2
 1309               	.LVL75:
 1310 00b8 87FF      		sbrs r24,7
 1311 00ba 00C0      		rjmp .L86
 1312 00bc 20E0      		ldi r18,0
 1313 00be 30E0      		ldi r19,0
 1314 00c0 40E4      		ldi r20,lo8(64)
 1315 00c2 50E4      		ldi r21,lo8(64)
 1316 00c4 6981      		ldd r22,Y+1
 1317 00c6 7A81      		ldd r23,Y+2
 1318 00c8 8B81      		ldd r24,Y+3
 1319 00ca 9C81      		ldd r25,Y+4
 1320 00cc 0E94 0000 		call __addsf3
 1321               	.LVL76:
 1322 00d0 9B01      		movw r18,r22
 1323 00d2 AC01      		movw r20,r24
 1324 00d4 C301      		movw r24,r6
 1325 00d6 B201      		movw r22,r4
 1326 00d8 0E94 0000 		call __ltsf2
 1327               	.LVL77:
 1328 00dc 87FD      		sbrc r24,7
 1329 00de 00C0      		rjmp .L90
 1330               	.L86:
 208:zombies.c     **** 			( hero.x + 1 > z->x && hero.y + 1 > z->y && hero.x + 1 < z->x + 3 && hero.y + 1 < z->y + 3 )  ||
 1331               		.loc 1 208 0 is_stmt 1 discriminator 2
 1332 00e0 20E0      		ldi r18,0
 1333 00e2 30E0      		ldi r19,0
 1334 00e4 40E8      		ldi r20,lo8(-128)
 1335 00e6 5FE3      		ldi r21,lo8(63)
 1336 00e8 C501      		movw r24,r10
 1337 00ea B401      		movw r22,r8
 1338 00ec 0E94 0000 		call __addsf3
 1339               	.LVL78:
 1340 00f0 1B01      		movw r2,r22
 1341 00f2 8C01      		movw r16,r24
 207:zombies.c     **** 			( hero.x > z->x && hero.y > z->y && hero.x < z->x + 3 && hero.y < z->y + 3 ) ||
 1342               		.loc 1 207 0 discriminator 2
 1343 00f4 A701      		movw r20,r14
 1344 00f6 9601      		movw r18,r12
 1345 00f8 732D      		mov r23,r3
 1346 00fa 912F      		mov r25,r17
 1347 00fc 0E94 0000 		call __gtsf2
 1348               	.LVL79:
 1349 0100 1816      		cp __zero_reg__,r24
 1350 0102 04F0      		brlt .+2
 1351 0104 00C0      		rjmp .L91
 1352               		.loc 1 208 0
 1353 0106 20E0      		ldi r18,0
 1354 0108 30E0      		ldi r19,0
 1355 010a 40E8      		ldi r20,lo8(-128)
 1356 010c 5FE3      		ldi r21,lo8(63)
 1357 010e 6091 0000 		lds r22,hero+4
 1358 0112 7091 0000 		lds r23,hero+4+1
 1359 0116 8091 0000 		lds r24,hero+4+2
 1360 011a 9091 0000 		lds r25,hero+4+3
 1361 011e 0E94 0000 		call __addsf3
 1362               	.LVL80:
 1363 0122 6B87      		std Y+11,r22
 1364 0124 7887      		std Y+8,r23
 1365 0126 8983      		std Y+1,r24
 1366 0128 9F83      		std Y+7,r25
 1367 012a ED81      		ldd r30,Y+5
 1368 012c FE81      		ldd r31,Y+6
 1369 012e 4480      		ldd r4,Z+4
 1370 0130 5580      		ldd r5,Z+5
 1371 0132 6680      		ldd r6,Z+6
 1372 0134 7780      		ldd r7,Z+7
 1373 0136 A301      		movw r20,r6
 1374 0138 9201      		movw r18,r4
 1375 013a 0E94 0000 		call __gtsf2
 1376               	.LVL81:
 1377 013e 1816      		cp __zero_reg__,r24
 1378 0140 04F4      		brge .L91
 1379               		.loc 1 208 0 is_stmt 0 discriminator 1
 1380 0142 20E0      		ldi r18,0
 1381 0144 30E0      		ldi r19,0
 1382 0146 40E4      		ldi r20,lo8(64)
 1383 0148 50E4      		ldi r21,lo8(64)
 1384 014a C701      		movw r24,r14
 1385 014c B601      		movw r22,r12
 1386 014e 0E94 0000 		call __addsf3
 1387               	.LVL82:
 1388 0152 9B01      		movw r18,r22
 1389 0154 AC01      		movw r20,r24
 1390 0156 622D      		mov r22,r2
 1391 0158 732D      		mov r23,r3
 1392 015a 802F      		mov r24,r16
 1393 015c 912F      		mov r25,r17
 1394 015e 0E94 0000 		call __ltsf2
 1395               	.LVL83:
 1396 0162 87FF      		sbrs r24,7
 1397 0164 00C0      		rjmp .L91
 1398 0166 20E0      		ldi r18,0
 1399 0168 30E0      		ldi r19,0
 1400 016a 40E4      		ldi r20,lo8(64)
 1401 016c 50E4      		ldi r21,lo8(64)
 1402 016e C301      		movw r24,r6
 1403 0170 B201      		movw r22,r4
 1404 0172 0E94 0000 		call __addsf3
 1405               	.LVL84:
 1406 0176 9B01      		movw r18,r22
 1407 0178 AC01      		movw r20,r24
 1408 017a BB85      		ldd r27,Y+11
 1409 017c A885      		ldd r26,Y+8
 1410 017e 1981      		ldd r17,Y+1
 1411 0180 0F81      		ldd r16,Y+7
 1412 0182 6B2F      		mov r22,r27
 1413 0184 7A2F      		mov r23,r26
 1414 0186 812F      		mov r24,r17
 1415 0188 902F      		mov r25,r16
 1416 018a 0E94 0000 		call __ltsf2
 1417               	.LVL85:
 1418 018e 87FD      		sbrc r24,7
 1419 0190 00C0      		rjmp .L90
 1420               	.L91:
 209:zombies.c     **** 			( hero.x + 2 > z->x && hero.y + 2 > z->y && hero.x + 2 < z->x + 3 && hero.y + 2 < z->y + 3 )
 1421               		.loc 1 209 0 is_stmt 1 discriminator 2
 1422 0192 20E0      		ldi r18,0
 1423 0194 30E0      		ldi r19,0
 1424 0196 40E0      		ldi r20,0
 1425 0198 50E4      		ldi r21,lo8(64)
 1426 019a C501      		movw r24,r10
 1427 019c B401      		movw r22,r8
 1428 019e 0E94 0000 		call __addsf3
 1429               	.LVL86:
 1430 01a2 2B01      		movw r4,r22
 1431 01a4 3C01      		movw r6,r24
 208:zombies.c     **** 			( hero.x + 1 > z->x && hero.y + 1 > z->y && hero.x + 1 < z->x + 3 && hero.y + 1 < z->y + 3 )  ||
 1432               		.loc 1 208 0 discriminator 2
 1433 01a6 A701      		movw r20,r14
 1434 01a8 9601      		movw r18,r12
 1435 01aa 752D      		mov r23,r5
 1436 01ac 972D      		mov r25,r7
 1437 01ae 0E94 0000 		call __gtsf2
 1438               	.LVL87:
 1439 01b2 1816      		cp __zero_reg__,r24
 1440 01b4 04F0      		brlt .+2
 1441 01b6 00C0      		rjmp .L85
 1442               		.loc 1 209 0
 1443 01b8 20E0      		ldi r18,0
 1444 01ba 30E0      		ldi r19,0
 1445 01bc 40E0      		ldi r20,0
 1446 01be 50E4      		ldi r21,lo8(64)
 1447 01c0 6091 0000 		lds r22,hero+4
 1448 01c4 7091 0000 		lds r23,hero+4+1
 1449 01c8 8091 0000 		lds r24,hero+4+2
 1450 01cc 9091 0000 		lds r25,hero+4+3
 1451 01d0 0E94 0000 		call __addsf3
 1452               	.LVL88:
 1453 01d4 8B01      		movw r16,r22
 1454 01d6 1C01      		movw r2,r24
 1455 01d8 AD81      		ldd r26,Y+5
 1456 01da BE81      		ldd r27,Y+6
 1457 01dc 1496      		adiw r26,4
 1458 01de 8D90      		ld r8,X+
 1459 01e0 9D90      		ld r9,X+
 1460 01e2 AD90      		ld r10,X+
 1461 01e4 BC90      		ld r11,X
 1462 01e6 1797      		sbiw r26,4+3
 1463 01e8 A501      		movw r20,r10
 1464 01ea 9401      		movw r18,r8
 1465 01ec 712F      		mov r23,r17
 1466 01ee 932D      		mov r25,r3
 1467 01f0 0E94 0000 		call __gtsf2
 1468               	.LVL89:
 1469 01f4 1816      		cp __zero_reg__,r24
 1470 01f6 04F0      		brlt .+2
 1471 01f8 00C0      		rjmp .L85
 1472               		.loc 1 209 0 is_stmt 0 discriminator 1
 1473 01fa 20E0      		ldi r18,0
 1474 01fc 30E0      		ldi r19,0
 1475 01fe 40E4      		ldi r20,lo8(64)
 1476 0200 50E4      		ldi r21,lo8(64)
 1477 0202 C701      		movw r24,r14
 1478 0204 B601      		movw r22,r12
 1479 0206 0E94 0000 		call __addsf3
 1480               	.LVL90:
 1481 020a 9B01      		movw r18,r22
 1482 020c AC01      		movw r20,r24
 1483 020e 642D      		mov r22,r4
 1484 0210 752D      		mov r23,r5
 1485 0212 862D      		mov r24,r6
 1486 0214 972D      		mov r25,r7
 1487 0216 0E94 0000 		call __ltsf2
 1488               	.LVL91:
 1489 021a 87FF      		sbrs r24,7
 1490 021c 00C0      		rjmp .L85
 1491 021e 20E0      		ldi r18,0
 1492 0220 30E0      		ldi r19,0
 1493 0222 40E4      		ldi r20,lo8(64)
 1494 0224 50E4      		ldi r21,lo8(64)
 1495 0226 C501      		movw r24,r10
 1496 0228 B401      		movw r22,r8
 1497 022a 0E94 0000 		call __addsf3
 1498               	.LVL92:
 1499 022e 9B01      		movw r18,r22
 1500 0230 AC01      		movw r20,r24
 1501 0232 602F      		mov r22,r16
 1502 0234 712F      		mov r23,r17
 1503 0236 822D      		mov r24,r2
 1504 0238 932D      		mov r25,r3
 1505 023a 0E94 0000 		call __ltsf2
 1506               	.LVL93:
 1507 023e 87FF      		sbrs r24,7
 1508 0240 00C0      		rjmp .L85
 1509               	.L90:
 210:zombies.c     **** 			) {
 211:zombies.c     **** 		lives = lives - 1;
 1510               		.loc 1 211 0 is_stmt 1
 1511 0242 8091 0000 		lds r24,lives
 1512 0246 9091 0000 		lds r25,lives+1
 1513               	.LVL94:
 1514 024a 0197      		sbiw r24,1
 1515               	.LVL95:
 1516 024c 9093 0000 		sts lives+1,r25
 1517 0250 8093 0000 		sts lives,r24
 1518               	.LVL96:
 212:zombies.c     **** 		if ( lives > 0 ){
 1519               		.loc 1 212 0
 1520 0254 1816      		cp __zero_reg__,r24
 1521 0256 1906      		cpc __zero_reg__,r25
 1522 0258 04F4      		brge .L100
 1523               	/* epilogue start */
 213:zombies.c     **** 			hero_die();
 214:zombies.c     **** 		}
 215:zombies.c     **** 		else {
 216:zombies.c     **** 			clear();
 217:zombies.c     **** 		}
 218:zombies.c     **** 
 219:zombies.c     **** 	}
 220:zombies.c     **** }
 1524               		.loc 1 220 0
 1525 025a 2B96      		adiw r28,11
 1526 025c 0FB6      		in __tmp_reg__,__SREG__
 1527 025e F894      		cli
 1528 0260 DEBF      		out __SP_H__,r29
 1529 0262 0FBE      		out __SREG__,__tmp_reg__
 1530 0264 CDBF      		out __SP_L__,r28
 1531 0266 DF91      		pop r29
 1532 0268 CF91      		pop r28
 1533 026a 1F91      		pop r17
 1534 026c 0F91      		pop r16
 1535 026e FF90      		pop r15
 1536 0270 EF90      		pop r14
 1537 0272 DF90      		pop r13
 1538 0274 CF90      		pop r12
 1539 0276 BF90      		pop r11
 1540 0278 AF90      		pop r10
 1541 027a 9F90      		pop r9
 1542 027c 8F90      		pop r8
 1543 027e 7F90      		pop r7
 1544 0280 6F90      		pop r6
 1545 0282 5F90      		pop r5
 1546 0284 4F90      		pop r4
 1547 0286 3F90      		pop r3
 1548 0288 2F90      		pop r2
 213:zombies.c     **** 			hero_die();
 1549               		.loc 1 213 0
 1550 028a 0C94 0000 		jmp hero_die
 1551               	.LVL97:
 1552               	.L100:
 1553               	/* epilogue start */
 1554               		.loc 1 220 0
 1555 028e 2B96      		adiw r28,11
 1556 0290 0FB6      		in __tmp_reg__,__SREG__
 1557 0292 F894      		cli
 1558 0294 DEBF      		out __SP_H__,r29
 1559 0296 0FBE      		out __SREG__,__tmp_reg__
 1560 0298 CDBF      		out __SP_L__,r28
 1561 029a DF91      		pop r29
 1562 029c CF91      		pop r28
 1563 029e 1F91      		pop r17
 1564 02a0 0F91      		pop r16
 1565 02a2 FF90      		pop r15
 1566 02a4 EF90      		pop r14
 1567 02a6 DF90      		pop r13
 1568 02a8 CF90      		pop r12
 1569 02aa BF90      		pop r11
 1570 02ac AF90      		pop r10
 1571 02ae 9F90      		pop r9
 1572 02b0 8F90      		pop r8
 1573 02b2 7F90      		pop r7
 1574 02b4 6F90      		pop r6
 1575 02b6 5F90      		pop r5
 1576 02b8 4F90      		pop r4
 1577 02ba 3F90      		pop r3
 1578 02bc 2F90      		pop r2
 216:zombies.c     **** 			clear();
 1579               		.loc 1 216 0
 1580 02be 0C94 0000 		jmp clear
 1581               	.LVL98:
 1582               	.L85:
 1583               	/* epilogue start */
 1584               		.loc 1 220 0
 1585 02c2 2B96      		adiw r28,11
 1586 02c4 0FB6      		in __tmp_reg__,__SREG__
 1587 02c6 F894      		cli
 1588 02c8 DEBF      		out __SP_H__,r29
 1589 02ca 0FBE      		out __SREG__,__tmp_reg__
 1590 02cc CDBF      		out __SP_L__,r28
 1591 02ce DF91      		pop r29
 1592 02d0 CF91      		pop r28
 1593 02d2 1F91      		pop r17
 1594 02d4 0F91      		pop r16
 1595 02d6 FF90      		pop r15
 1596 02d8 EF90      		pop r14
 1597 02da DF90      		pop r13
 1598 02dc CF90      		pop r12
 1599 02de BF90      		pop r11
 1600 02e0 AF90      		pop r10
 1601 02e2 9F90      		pop r9
 1602 02e4 8F90      		pop r8
 1603 02e6 7F90      		pop r7
 1604 02e8 6F90      		pop r6
 1605 02ea 5F90      		pop r5
 1606 02ec 4F90      		pop r4
 1607 02ee 3F90      		pop r3
 1608 02f0 2F90      		pop r2
 1609 02f2 0895      		ret
 1610               		.cfi_endproc
 1611               	.LFE10:
 1613               		.section	.text.zombies_collission,"ax",@progbits
 1614               	.global	zombies_collission
 1616               	zombies_collission:
 1617               	.LFB9:
 199:zombies.c     **** void zombies_collission ( Sprite * zs ) {
 1618               		.loc 1 199 0
 1619               		.cfi_startproc
 1620               	.LVL99:
 1621 0000 0F93      		push r16
 1622               	.LCFI64:
 1623               		.cfi_def_cfa_offset 3
 1624               		.cfi_offset 16, -2
 1625 0002 1F93      		push r17
 1626               	.LCFI65:
 1627               		.cfi_def_cfa_offset 4
 1628               		.cfi_offset 17, -3
 1629 0004 CF93      		push r28
 1630               	.LCFI66:
 1631               		.cfi_def_cfa_offset 5
 1632               		.cfi_offset 28, -4
 1633 0006 DF93      		push r29
 1634               	.LCFI67:
 1635               		.cfi_def_cfa_offset 6
 1636               		.cfi_offset 29, -5
 1637               	/* prologue: function */
 1638               	/* frame size = 0 */
 1639               	/* stack size = 4 */
 1640               	.L__stack_usage = 4
 1641 0008 8C01      		movw r16,r24
 1642               	.LVL100:
 199:zombies.c     **** void zombies_collission ( Sprite * zs ) {
 1643               		.loc 1 199 0
 1644 000a C0E0      		ldi r28,0
 1645 000c D0E0      		ldi r29,0
 1646               	.LVL101:
 1647               	.L111:
 1648               	.LBB9:
 1649               	.LBB10:
 201:zombies.c     **** 		zombie_collision( zs + i );
 1650               		.loc 1 201 0 discriminator 2
 1651 000e C801      		movw r24,r16
 1652 0010 8C0F      		add r24,r28
 1653 0012 9D1F      		adc r25,r29
 1654 0014 0E94 0000 		call zombie_collision
 1655               	.LVL102:
 1656 0018 6596      		adiw r28,21
 1657               	.LBE10:
 200:zombies.c     **** 	for ( int i = 0; i < zombie_count; i++ ) {
 1658               		.loc 1 200 0 discriminator 2
 1659 001a C83A      		cpi r28,-88
 1660 001c D105      		cpc r29,__zero_reg__
 1661 001e 01F4      		brne .L111
 1662               	/* epilogue start */
 1663               	.LBE9:
 203:zombies.c     **** }
 1664               		.loc 1 203 0
 1665 0020 DF91      		pop r29
 1666 0022 CF91      		pop r28
 1667 0024 1F91      		pop r17
 1668 0026 0F91      		pop r16
 1669               	.LVL103:
 1670 0028 0895      		ret
 1671               		.cfi_endproc
 1672               	.LFE9:
 1674               		.section	.text.kill_zombie,"ax",@progbits
 1675               	.global	kill_zombie
 1677               	kill_zombie:
 1678               	.LFB12:
 221:zombies.c     **** 
 222:zombies.c     **** void kill_zombies( Sprite * zombies ) {
 223:zombies.c     **** 	for ( int i = 0; i < zombie_count; i++ ) {
 224:zombies.c     **** 		kill_zombie( zombies + i );
 225:zombies.c     **** 	}
 226:zombies.c     **** }
 227:zombies.c     **** 
 228:zombies.c     **** void kill_zombie( Sprite * zombie ) {
 1679               		.loc 1 228 0
 1680               		.cfi_startproc
 1681               	.LVL104:
 1682 0000 8F92      		push r8
 1683               	.LCFI68:
 1684               		.cfi_def_cfa_offset 3
 1685               		.cfi_offset 8, -2
 1686 0002 9F92      		push r9
 1687               	.LCFI69:
 1688               		.cfi_def_cfa_offset 4
 1689               		.cfi_offset 9, -3
 1690 0004 AF92      		push r10
 1691               	.LCFI70:
 1692               		.cfi_def_cfa_offset 5
 1693               		.cfi_offset 10, -4
 1694 0006 BF92      		push r11
 1695               	.LCFI71:
 1696               		.cfi_def_cfa_offset 6
 1697               		.cfi_offset 11, -5
 1698 0008 CF92      		push r12
 1699               	.LCFI72:
 1700               		.cfi_def_cfa_offset 7
 1701               		.cfi_offset 12, -6
 1702 000a DF92      		push r13
 1703               	.LCFI73:
 1704               		.cfi_def_cfa_offset 8
 1705               		.cfi_offset 13, -7
 1706 000c EF92      		push r14
 1707               	.LCFI74:
 1708               		.cfi_def_cfa_offset 9
 1709               		.cfi_offset 14, -8
 1710 000e FF92      		push r15
 1711               	.LCFI75:
 1712               		.cfi_def_cfa_offset 10
 1713               		.cfi_offset 15, -9
 1714 0010 0F93      		push r16
 1715               	.LCFI76:
 1716               		.cfi_def_cfa_offset 11
 1717               		.cfi_offset 16, -10
 1718 0012 CF93      		push r28
 1719               	.LCFI77:
 1720               		.cfi_def_cfa_offset 12
 1721               		.cfi_offset 28, -11
 1722 0014 DF93      		push r29
 1723               	.LCFI78:
 1724               		.cfi_def_cfa_offset 13
 1725               		.cfi_offset 29, -12
 1726               	/* prologue: function */
 1727               	/* frame size = 0 */
 1728               	/* stack size = 11 */
 1729               	.L__stack_usage = 11
 1730 0016 EC01      		movw r28,r24
 229:zombies.c     **** 	if ( zombie->x < sword_prt->x && zombie->y < sword_prt->y && zombie->y > sword_prt->y + 3) {
 1731               		.loc 1 229 0
 1732 0018 A090 0000 		lds r10,sword_prt
 1733 001c B090 0000 		lds r11,sword_prt+1
 1734 0020 F501      		movw r30,r10
 1735 0022 2081      		ld r18,Z
 1736 0024 3181      		ldd r19,Z+1
 1737 0026 4281      		ldd r20,Z+2
 1738 0028 5381      		ldd r21,Z+3
 1739 002a 6881      		ld r22,Y
 1740 002c 7981      		ldd r23,Y+1
 1741 002e 8A81      		ldd r24,Y+2
 1742 0030 9B81      		ldd r25,Y+3
 1743 0032 0E94 0000 		call __ltsf2
 1744               	.LVL105:
 1745 0036 87FF      		sbrs r24,7
 1746 0038 00C0      		rjmp .L113
 1747               		.loc 1 229 0 is_stmt 0 discriminator 1
 1748 003a CC80      		ldd r12,Y+4
 1749 003c DD80      		ldd r13,Y+5
 1750 003e EE80      		ldd r14,Y+6
 1751 0040 FF80      		ldd r15,Y+7
 1752 0042 F501      		movw r30,r10
 1753 0044 8480      		ldd r8,Z+4
 1754 0046 9580      		ldd r9,Z+5
 1755 0048 A680      		ldd r10,Z+6
 1756 004a B780      		ldd r11,Z+7
 1757 004c A501      		movw r20,r10
 1758 004e 9401      		movw r18,r8
 1759 0050 C701      		movw r24,r14
 1760 0052 B601      		movw r22,r12
 1761 0054 0E94 0000 		call __ltsf2
 1762               	.LVL106:
 1763 0058 87FF      		sbrs r24,7
 1764 005a 00C0      		rjmp .L113
 1765 005c 20E0      		ldi r18,0
 1766 005e 30E0      		ldi r19,0
 1767 0060 40E4      		ldi r20,lo8(64)
 1768 0062 50E4      		ldi r21,lo8(64)
 1769 0064 C501      		movw r24,r10
 1770 0066 B401      		movw r22,r8
 1771 0068 0E94 0000 		call __addsf3
 1772               	.LVL107:
 1773 006c 9B01      		movw r18,r22
 1774 006e AC01      		movw r20,r24
 1775 0070 C701      		movw r24,r14
 1776 0072 B601      		movw r22,r12
 1777 0074 0E94 0000 		call __gtsf2
 1778               	.LVL108:
 1779 0078 1816      		cp __zero_reg__,r24
 1780 007a 04F4      		brge .L113
 230:zombies.c     **** 		init_sprite ( zombie, -10, -10, 4, 3, bitmap1 );
 1781               		.loc 1 230 0 is_stmt 1
 1782 007c 30E0      		ldi r19,lo8(bitmap1)
 1783 007e E32E      		mov r14,r19
 1784 0080 30E0      		ldi r19,hi8(bitmap1)
 1785 0082 F32E      		mov r15,r19
 1786 0084 03E0      		ldi r16,lo8(3)
 1787 0086 24E0      		ldi r18,lo8(4)
 1788 0088 46EF      		ldi r20,lo8(-10)
 1789 008a 66EF      		ldi r22,lo8(-10)
 1790 008c CE01      		movw r24,r28
 1791 008e 0E94 0000 		call init_sprite
 1792               	.LVL109:
 1793               	.L113:
 1794               	/* epilogue start */
 231:zombies.c     **** 	}
 232:zombies.c     **** }
 1795               		.loc 1 232 0
 1796 0092 DF91      		pop r29
 1797 0094 CF91      		pop r28
 1798               	.LVL110:
 1799 0096 0F91      		pop r16
 1800 0098 FF90      		pop r15
 1801 009a EF90      		pop r14
 1802 009c DF90      		pop r13
 1803 009e CF90      		pop r12
 1804 00a0 BF90      		pop r11
 1805 00a2 AF90      		pop r10
 1806 00a4 9F90      		pop r9
 1807 00a6 8F90      		pop r8
 1808 00a8 0895      		ret
 1809               		.cfi_endproc
 1810               	.LFE12:
 1812               		.section	.text.kill_zombies,"ax",@progbits
 1813               	.global	kill_zombies
 1815               	kill_zombies:
 1816               	.LFB11:
 222:zombies.c     **** void kill_zombies( Sprite * zombies ) {
 1817               		.loc 1 222 0
 1818               		.cfi_startproc
 1819               	.LVL111:
 1820 0000 0F93      		push r16
 1821               	.LCFI79:
 1822               		.cfi_def_cfa_offset 3
 1823               		.cfi_offset 16, -2
 1824 0002 1F93      		push r17
 1825               	.LCFI80:
 1826               		.cfi_def_cfa_offset 4
 1827               		.cfi_offset 17, -3
 1828 0004 CF93      		push r28
 1829               	.LCFI81:
 1830               		.cfi_def_cfa_offset 5
 1831               		.cfi_offset 28, -4
 1832 0006 DF93      		push r29
 1833               	.LCFI82:
 1834               		.cfi_def_cfa_offset 6
 1835               		.cfi_offset 29, -5
 1836               	/* prologue: function */
 1837               	/* frame size = 0 */
 1838               	/* stack size = 4 */
 1839               	.L__stack_usage = 4
 1840 0008 8C01      		movw r16,r24
 1841               	.LVL112:
 222:zombies.c     **** void kill_zombies( Sprite * zombies ) {
 1842               		.loc 1 222 0
 1843 000a C0E0      		ldi r28,0
 1844 000c D0E0      		ldi r29,0
 1845               	.LVL113:
 1846               	.L122:
 1847               	.LBB11:
 1848               	.LBB12:
 224:zombies.c     **** 		kill_zombie( zombies + i );
 1849               		.loc 1 224 0 discriminator 2
 1850 000e C801      		movw r24,r16
 1851 0010 8C0F      		add r24,r28
 1852 0012 9D1F      		adc r25,r29
 1853 0014 0E94 0000 		call kill_zombie
 1854               	.LVL114:
 1855 0018 6596      		adiw r28,21
 1856               	.LBE12:
 223:zombies.c     **** 	for ( int i = 0; i < zombie_count; i++ ) {
 1857               		.loc 1 223 0 discriminator 2
 1858 001a C83A      		cpi r28,-88
 1859 001c D105      		cpc r29,__zero_reg__
 1860 001e 01F4      		brne .L122
 1861               	/* epilogue start */
 1862               	.LBE11:
 226:zombies.c     **** }
 1863               		.loc 1 226 0
 1864 0020 DF91      		pop r29
 1865 0022 CF91      		pop r28
 1866 0024 1F91      		pop r17
 1867 0026 0F91      		pop r16
 1868               	.LVL115:
 1869 0028 0895      		ret
 1870               		.cfi_endproc
 1871               	.LFE11:
 1873               		.section	.text.check_zombie,"ax",@progbits
 1874               	.global	check_zombie
 1876               	check_zombie:
 1877               	.LFB8:
 194:zombies.c     **** void check_zombie() {
 1878               		.loc 1 194 0
 1879               		.cfi_startproc
 1880               	/* prologue: function */
 1881               	/* frame size = 0 */
 1882               	/* stack size = 0 */
 1883               	.L__stack_usage = 0
 195:zombies.c     **** 	zombies_collission ( z );
 1884               		.loc 1 195 0
 1885 0000 8091 0000 		lds r24,z
 1886 0004 9091 0000 		lds r25,z+1
 1887 0008 0E94 0000 		call zombies_collission
 1888               	.LVL116:
 196:zombies.c     **** 	kill_zombies( z );
 1889               		.loc 1 196 0
 1890 000c 8091 0000 		lds r24,z
 1891 0010 9091 0000 		lds r25,z+1
 1892 0014 0C94 0000 		jmp kill_zombies
 1893               	.LVL117:
 1894               		.cfi_endproc
 1895               	.LFE8:
 1897               		.section	.text.update_one_zombie_pit,"ax",@progbits
 1898               	.global	update_one_zombie_pit
 1900               	update_one_zombie_pit:
 1901               	.LFB13:
 233:zombies.c     **** 
 234:zombies.c     **** void update_one_zombie_pit ( Sprite * zombie ) {
 1902               		.loc 1 234 0
 1903               		.cfi_startproc
 1904               	.LVL118:
 1905 0000 6F92      		push r6
 1906               	.LCFI83:
 1907               		.cfi_def_cfa_offset 3
 1908               		.cfi_offset 6, -2
 1909 0002 7F92      		push r7
 1910               	.LCFI84:
 1911               		.cfi_def_cfa_offset 4
 1912               		.cfi_offset 7, -3
 1913 0004 8F92      		push r8
 1914               	.LCFI85:
 1915               		.cfi_def_cfa_offset 5
 1916               		.cfi_offset 8, -4
 1917 0006 9F92      		push r9
 1918               	.LCFI86:
 1919               		.cfi_def_cfa_offset 6
 1920               		.cfi_offset 9, -5
 1921 0008 AF92      		push r10
 1922               	.LCFI87:
 1923               		.cfi_def_cfa_offset 7
 1924               		.cfi_offset 10, -6
 1925 000a BF92      		push r11
 1926               	.LCFI88:
 1927               		.cfi_def_cfa_offset 8
 1928               		.cfi_offset 11, -7
 1929 000c CF92      		push r12
 1930               	.LCFI89:
 1931               		.cfi_def_cfa_offset 9
 1932               		.cfi_offset 12, -8
 1933 000e DF92      		push r13
 1934               	.LCFI90:
 1935               		.cfi_def_cfa_offset 10
 1936               		.cfi_offset 13, -9
 1937 0010 EF92      		push r14
 1938               	.LCFI91:
 1939               		.cfi_def_cfa_offset 11
 1940               		.cfi_offset 14, -10
 1941 0012 FF92      		push r15
 1942               	.LCFI92:
 1943               		.cfi_def_cfa_offset 12
 1944               		.cfi_offset 15, -11
 1945 0014 0F93      		push r16
 1946               	.LCFI93:
 1947               		.cfi_def_cfa_offset 13
 1948               		.cfi_offset 16, -12
 1949 0016 1F93      		push r17
 1950               	.LCFI94:
 1951               		.cfi_def_cfa_offset 14
 1952               		.cfi_offset 17, -13
 1953 0018 CF93      		push r28
 1954               	.LCFI95:
 1955               		.cfi_def_cfa_offset 15
 1956               		.cfi_offset 28, -14
 1957 001a DF93      		push r29
 1958               	.LCFI96:
 1959               		.cfi_def_cfa_offset 16
 1960               		.cfi_offset 29, -15
 1961               	/* prologue: function */
 1962               	/* frame size = 0 */
 1963               	/* stack size = 14 */
 1964               	.L__stack_usage = 14
 1965 001c EC01      		movw r28,r24
 235:zombies.c     **** 	zombie->x += zombie->dx;
 1966               		.loc 1 235 0
 1967 001e 2D85      		ldd r18,Y+13
 1968 0020 3E85      		ldd r19,Y+14
 1969 0022 4F85      		ldd r20,Y+15
 1970 0024 5889      		ldd r21,Y+16
 1971 0026 6881      		ld r22,Y
 1972 0028 7981      		ldd r23,Y+1
 1973 002a 8A81      		ldd r24,Y+2
 1974 002c 9B81      		ldd r25,Y+3
 1975 002e 0E94 0000 		call __addsf3
 1976               	.LVL119:
 1977 0032 6B01      		movw r12,r22
 1978 0034 7C01      		movw r14,r24
 1979 0036 862F      		mov r24,r22
 1980 0038 9D2D      		mov r25,r13
 1981 003a AE2D      		mov r26,r14
 1982 003c BF2D      		mov r27,r15
 1983 003e 8883      		st Y,r24
 1984 0040 9983      		std Y+1,r25
 1985 0042 AA83      		std Y+2,r26
 1986 0044 BB83      		std Y+3,r27
 236:zombies.c     **** 	zombie->y += zombie->dy;
 1987               		.loc 1 236 0
 1988 0046 2989      		ldd r18,Y+17
 1989 0048 3A89      		ldd r19,Y+18
 1990 004a 4B89      		ldd r20,Y+19
 1991 004c 5C89      		ldd r21,Y+20
 1992 004e 6C81      		ldd r22,Y+4
 1993 0050 7D81      		ldd r23,Y+5
 1994 0052 8E81      		ldd r24,Y+6
 1995 0054 9F81      		ldd r25,Y+7
 1996 0056 0E94 0000 		call __addsf3
 1997               	.LVL120:
 1998 005a 3B01      		movw r6,r22
 1999 005c 8C01      		movw r16,r24
 2000 005e 862F      		mov r24,r22
 2001 0060 972D      		mov r25,r7
 2002 0062 A02F      		mov r26,r16
 2003 0064 B12F      		mov r27,r17
 2004 0066 8C83      		std Y+4,r24
 2005 0068 9D83      		std Y+5,r25
 2006 006a AE83      		std Y+6,r26
 2007 006c BF83      		std Y+7,r27
 237:zombies.c     **** 
 238:zombies.c     **** 	if ( zombie->x > pit.x + 5 - zombie->width) {
 2008               		.loc 1 238 0
 2009 006e 6885      		ldd r22,Y+8
 2010 0070 70E0      		ldi r23,0
 2011 0072 80E0      		ldi r24,0
 2012 0074 90E0      		ldi r25,0
 2013 0076 0E94 0000 		call __floatsisf
 2014               	.LVL121:
 2015 007a 4B01      		movw r8,r22
 2016 007c 5C01      		movw r10,r24
 2017 007e 20E0      		ldi r18,0
 2018 0080 30E0      		ldi r19,0
 2019 0082 40EA      		ldi r20,lo8(-96)
 2020 0084 50E4      		ldi r21,lo8(64)
 2021 0086 6091 0000 		lds r22,pit
 2022 008a 7091 0000 		lds r23,pit+1
 2023 008e 8091 0000 		lds r24,pit+2
 2024 0092 9091 0000 		lds r25,pit+3
 2025 0096 0E94 0000 		call __addsf3
 2026               	.LVL122:
 2027 009a A501      		movw r20,r10
 2028 009c 9401      		movw r18,r8
 2029 009e 0E94 0000 		call __subsf3
 2030               	.LVL123:
 2031 00a2 9B01      		movw r18,r22
 2032 00a4 AC01      		movw r20,r24
 2033 00a6 6C2D      		mov r22,r12
 2034 00a8 7D2D      		mov r23,r13
 2035 00aa 8E2D      		mov r24,r14
 2036 00ac 9F2D      		mov r25,r15
 2037 00ae 0E94 0000 		call __gtsf2
 2038               	.LVL124:
 2039 00b2 1816      		cp __zero_reg__,r24
 2040 00b4 04F4      		brge .L126
 239:zombies.c     **** 		zombie->x -=1;
 2041               		.loc 1 239 0
 2042 00b6 20E0      		ldi r18,0
 2043 00b8 30E0      		ldi r19,0
 2044 00ba 40E8      		ldi r20,lo8(-128)
 2045 00bc 5FE3      		ldi r21,lo8(63)
 2046 00be 6C2D      		mov r22,r12
 2047 00c0 7D2D      		mov r23,r13
 2048 00c2 8E2D      		mov r24,r14
 2049 00c4 9F2D      		mov r25,r15
 2050 00c6 0E94 0000 		call __subsf3
 2051               	.LVL125:
 2052 00ca 6883      		st Y,r22
 2053 00cc 7983      		std Y+1,r23
 2054 00ce 8A83      		std Y+2,r24
 2055 00d0 9B83      		std Y+3,r25
 2056               	.L126:
 240:zombies.c     **** 	}
 241:zombies.c     **** 
 242:zombies.c     **** 	if (zombie->x < pit.x + zombie->width - 2) {
 2057               		.loc 1 242 0
 2058 00d2 C880      		ld r12,Y
 2059 00d4 D980      		ldd r13,Y+1
 2060 00d6 EA80      		ldd r14,Y+2
 2061 00d8 FB80      		ldd r15,Y+3
 2062 00da 2091 0000 		lds r18,pit
 2063 00de 3091 0000 		lds r19,pit+1
 2064 00e2 4091 0000 		lds r20,pit+2
 2065 00e6 5091 0000 		lds r21,pit+3
 2066 00ea C501      		movw r24,r10
 2067 00ec B401      		movw r22,r8
 2068 00ee 0E94 0000 		call __addsf3
 2069               	.LVL126:
 2070 00f2 20E0      		ldi r18,0
 2071 00f4 30E0      		ldi r19,0
 2072 00f6 40E0      		ldi r20,0
 2073 00f8 50E4      		ldi r21,lo8(64)
 2074 00fa 0E94 0000 		call __subsf3
 2075               	.LVL127:
 2076 00fe 9B01      		movw r18,r22
 2077 0100 AC01      		movw r20,r24
 2078 0102 C701      		movw r24,r14
 2079 0104 B601      		movw r22,r12
 2080 0106 0E94 0000 		call __ltsf2
 2081               	.LVL128:
 2082 010a 87FF      		sbrs r24,7
 2083 010c 00C0      		rjmp .L128
 243:zombies.c     **** 		zombie ->x +=1;
 2084               		.loc 1 243 0
 2085 010e 20E0      		ldi r18,0
 2086 0110 30E0      		ldi r19,0
 2087 0112 40E8      		ldi r20,lo8(-128)
 2088 0114 5FE3      		ldi r21,lo8(63)
 2089 0116 C701      		movw r24,r14
 2090 0118 B601      		movw r22,r12
 2091 011a 0E94 0000 		call __addsf3
 2092               	.LVL129:
 2093 011e 6883      		st Y,r22
 2094 0120 7983      		std Y+1,r23
 2095 0122 8A83      		std Y+2,r24
 2096 0124 9B83      		std Y+3,r25
 2097               	.L128:
 244:zombies.c     **** 	}
 245:zombies.c     **** 
 246:zombies.c     **** 	if ( zombie->y >= pit.y + 5 - zombie->height ) {
 2098               		.loc 1 246 0
 2099 0126 20E0      		ldi r18,0
 2100 0128 30E0      		ldi r19,0
 2101 012a 40EA      		ldi r20,lo8(-96)
 2102 012c 50E4      		ldi r21,lo8(64)
 2103 012e 6091 0000 		lds r22,pit+4
 2104 0132 7091 0000 		lds r23,pit+4+1
 2105 0136 8091 0000 		lds r24,pit+4+2
 2106 013a 9091 0000 		lds r25,pit+4+3
 2107 013e 0E94 0000 		call __addsf3
 2108               	.LVL130:
 2109 0142 6B01      		movw r12,r22
 2110 0144 7C01      		movw r14,r24
 2111 0146 6985      		ldd r22,Y+9
 2112 0148 70E0      		ldi r23,0
 2113 014a 80E0      		ldi r24,0
 2114 014c 90E0      		ldi r25,0
 2115 014e 0E94 0000 		call __floatsisf
 2116               	.LVL131:
 2117 0152 9B01      		movw r18,r22
 2118 0154 AC01      		movw r20,r24
 2119 0156 C701      		movw r24,r14
 2120 0158 B601      		movw r22,r12
 2121 015a 0E94 0000 		call __subsf3
 2122               	.LVL132:
 2123 015e 9B01      		movw r18,r22
 2124 0160 AC01      		movw r20,r24
 2125 0162 662D      		mov r22,r6
 2126 0164 772D      		mov r23,r7
 2127 0166 802F      		mov r24,r16
 2128 0168 912F      		mov r25,r17
 2129 016a 0E94 0000 		call __gesf2
 2130               	.LVL133:
 2131 016e 87FD      		sbrc r24,7
 2132 0170 00C0      		rjmp .L130
 247:zombies.c     **** 		zombie->y -=1;
 2133               		.loc 1 247 0
 2134 0172 20E0      		ldi r18,0
 2135 0174 30E0      		ldi r19,0
 2136 0176 40E8      		ldi r20,lo8(-128)
 2137 0178 5FE3      		ldi r21,lo8(63)
 2138 017a 662D      		mov r22,r6
 2139 017c 772D      		mov r23,r7
 2140 017e 802F      		mov r24,r16
 2141 0180 912F      		mov r25,r17
 2142 0182 0E94 0000 		call __subsf3
 2143               	.LVL134:
 2144 0186 6C83      		std Y+4,r22
 2145 0188 7D83      		std Y+5,r23
 2146 018a 8E83      		std Y+6,r24
 2147 018c 9F83      		std Y+7,r25
 2148               	.L130:
 248:zombies.c     **** 	}
 249:zombies.c     **** 
 250:zombies.c     **** 	if ( zombie->y < pit.y ) {
 2149               		.loc 1 250 0
 2150 018e CC80      		ldd r12,Y+4
 2151 0190 DD80      		ldd r13,Y+5
 2152 0192 EE80      		ldd r14,Y+6
 2153 0194 FF80      		ldd r15,Y+7
 2154 0196 2091 0000 		lds r18,pit+4
 2155 019a 3091 0000 		lds r19,pit+4+1
 2156 019e 4091 0000 		lds r20,pit+4+2
 2157 01a2 5091 0000 		lds r21,pit+4+3
 2158 01a6 C701      		movw r24,r14
 2159 01a8 B601      		movw r22,r12
 2160 01aa 0E94 0000 		call __ltsf2
 2161               	.LVL135:
 2162 01ae 87FF      		sbrs r24,7
 2163 01b0 00C0      		rjmp .L125
 251:zombies.c     **** 		zombie->y +=1;
 2164               		.loc 1 251 0
 2165 01b2 20E0      		ldi r18,0
 2166 01b4 30E0      		ldi r19,0
 2167 01b6 40E8      		ldi r20,lo8(-128)
 2168 01b8 5FE3      		ldi r21,lo8(63)
 2169 01ba C701      		movw r24,r14
 2170 01bc B601      		movw r22,r12
 2171 01be 0E94 0000 		call __addsf3
 2172               	.LVL136:
 2173 01c2 6C83      		std Y+4,r22
 2174 01c4 7D83      		std Y+5,r23
 2175 01c6 8E83      		std Y+6,r24
 2176 01c8 9F83      		std Y+7,r25
 2177               	.L125:
 2178               	/* epilogue start */
 252:zombies.c     **** 	}
 253:zombies.c     **** }
 2179               		.loc 1 253 0
 2180 01ca DF91      		pop r29
 2181 01cc CF91      		pop r28
 2182               	.LVL137:
 2183 01ce 1F91      		pop r17
 2184 01d0 0F91      		pop r16
 2185 01d2 FF90      		pop r15
 2186 01d4 EF90      		pop r14
 2187 01d6 DF90      		pop r13
 2188 01d8 CF90      		pop r12
 2189 01da BF90      		pop r11
 2190 01dc AF90      		pop r10
 2191 01de 9F90      		pop r9
 2192 01e0 8F90      		pop r8
 2193 01e2 7F90      		pop r7
 2194 01e4 6F90      		pop r6
 2195 01e6 0895      		ret
 2196               		.cfi_endproc
 2197               	.LFE13:
 2199               	.global	bitmap1
 2200               		.data
 2203               	bitmap1:
 2204 0000 E0        		.byte	-32
 2205 0001 40        		.byte	64
 2206 0002 A0        		.byte	-96
 2207               		.comm	randy,2,1
 2208               		.comm	randx,2,1
 2209               	.global	dead_zombies
 2210               		.section .bss
 2213               	dead_zombies:
 2214 0000 0000      		.zero	2
 2215               		.comm	bomb,21,1
 2216               		.comm	grenades,21,1
 2217               		.comm	sword,21,1
 2218               		.comm	pit,21,1
 2219               		.comm	hero,21,1
 2220               	.global	z
 2221               		.data
 2224               	z:
 2225 0003 0000      		.word	zombies
 2226               		.comm	zombies,168,1
 2227               		.text
 2228               	.Letext0:
 2229               		.file 2 "../teensy_graphics/sprite.h"
 2230               		.file 3 "../teensy_graphics/byte.h"
 2231               		.file 4 "score.h"
 2232               		.file 5 "hero.h"
 2233               		.file 6 "lives.h"
 2234               		.file 7 "pit.h"
 2235               		.file 8 "items.h"
 2236               		.file 9 "game_set.h"
 2237               		.file 10 "../teensy_graphics/graphics.h"
 2238               		.file 11 "../teensy_graphics/ascii_font.h"
DEFINED SYMBOLS
                            *ABS*:00000000 zombies.c
/var/folders/dz/7l40hrmj72997lgmj3pdxb_m0000gn/T//cc2VJxea.s:2      *ABS*:0000003e __SP_H__
/var/folders/dz/7l40hrmj72997lgmj3pdxb_m0000gn/T//cc2VJxea.s:3      *ABS*:0000003d __SP_L__
/var/folders/dz/7l40hrmj72997lgmj3pdxb_m0000gn/T//cc2VJxea.s:4      *ABS*:0000003f __SREG__
/var/folders/dz/7l40hrmj72997lgmj3pdxb_m0000gn/T//cc2VJxea.s:5      *ABS*:00000000 __tmp_reg__
/var/folders/dz/7l40hrmj72997lgmj3pdxb_m0000gn/T//cc2VJxea.s:6      *ABS*:00000001 __zero_reg__
/var/folders/dz/7l40hrmj72997lgmj3pdxb_m0000gn/T//cc2VJxea.s:13     .text.section_selector:00000000 section_selector
                            *COM*:00000002 randx
                            *COM*:00000002 randy
/var/folders/dz/7l40hrmj72997lgmj3pdxb_m0000gn/T//cc2VJxea.s:90     .text.setup_zombies:00000000 setup_zombies
/var/folders/dz/7l40hrmj72997lgmj3pdxb_m0000gn/T//cc2VJxea.s:262    .text.draw_zombies:00000000 draw_zombies
/var/folders/dz/7l40hrmj72997lgmj3pdxb_m0000gn/T//cc2VJxea.s:321    .text.start_zombies:00000000 start_zombies
/var/folders/dz/7l40hrmj72997lgmj3pdxb_m0000gn/T//cc2VJxea.s:2203   .data:00000000 bitmap1
                            *COM*:000000a8 zombies
/var/folders/dz/7l40hrmj72997lgmj3pdxb_m0000gn/T//cc2VJxea.s:390    .text.zombie_drawer:00000000 zombie_drawer
/var/folders/dz/7l40hrmj72997lgmj3pdxb_m0000gn/T//cc2VJxea.s:2224   .data:00000003 z
/var/folders/dz/7l40hrmj72997lgmj3pdxb_m0000gn/T//cc2VJxea.s:416    .text.update_zombies:00000000 update_zombies
/var/folders/dz/7l40hrmj72997lgmj3pdxb_m0000gn/T//cc2VJxea.s:2213   .bss:00000000 dead_zombies
/var/folders/dz/7l40hrmj72997lgmj3pdxb_m0000gn/T//cc2VJxea.s:1131   .text.zombie_updater:00000000 zombie_updater
/var/folders/dz/7l40hrmj72997lgmj3pdxb_m0000gn/T//cc2VJxea.s:1155   .text.zombie_collision:00000000 zombie_collision
                            *COM*:00000015 hero
/var/folders/dz/7l40hrmj72997lgmj3pdxb_m0000gn/T//cc2VJxea.s:1616   .text.zombies_collission:00000000 zombies_collission
/var/folders/dz/7l40hrmj72997lgmj3pdxb_m0000gn/T//cc2VJxea.s:1677   .text.kill_zombie:00000000 kill_zombie
/var/folders/dz/7l40hrmj72997lgmj3pdxb_m0000gn/T//cc2VJxea.s:1815   .text.kill_zombies:00000000 kill_zombies
/var/folders/dz/7l40hrmj72997lgmj3pdxb_m0000gn/T//cc2VJxea.s:1876   .text.check_zombie:00000000 check_zombie
/var/folders/dz/7l40hrmj72997lgmj3pdxb_m0000gn/T//cc2VJxea.s:1900   .text.update_one_zombie_pit:00000000 update_one_zombie_pit
                            *COM*:00000015 pit
                            *COM*:00000015 bomb
                            *COM*:00000015 grenades
                            *COM*:00000015 sword

UNDEFINED SYMBOLS
rand
__divmodhi4
init_sprite
draw_sprite
__gtsf2
__ltsf2
__gesf2
__addsf3
__lesf2
__floatsisf
__subsf3
pit_prt
sword_prt
score
lives
hero_die
clear
__do_copy_data
__do_clear_bss
