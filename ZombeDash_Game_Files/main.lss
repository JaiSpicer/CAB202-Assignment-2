
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000048  00800100  00001f2e  00001fc2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001f2e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000002c6  00800148  00800148  0000200a  2**0
                  ALLOC
  3 .stab         00002994  00000000  00000000  0000200c  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000802  00000000  00000000  000049a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000011  00000000  00000000  000051a2  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 00000478  00000000  00000000  000051b8  2**3
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00003c10  00000000  00000000  00005630  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00001604  00000000  00000000  00009240  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000014bc  00000000  00000000  0000a844  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  0000087c  00000000  00000000  0000bd00  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000781  00000000  00000000  0000c57c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00002257  00000000  00000000  0000ccfd  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000228  00000000  00000000  0000ef54  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
#include "graphics.h"
#include "friendly_ports.h"

#include "pit.h"

void start_pit() {
       0:	45 c1       	rjmp	.+650    	; 0x28c <__ctors_end>
       2:	00 00       	nop
       4:	5f c1       	rjmp	.+702    	; 0x2c4 <__bad_interrupt>
       6:	00 00       	nop
       8:	5d c1       	rjmp	.+698    	; 0x2c4 <__bad_interrupt>
       a:	00 00       	nop
       c:	5b c1       	rjmp	.+694    	; 0x2c4 <__bad_interrupt>
       e:	00 00       	nop
      10:	59 c1       	rjmp	.+690    	; 0x2c4 <__bad_interrupt>
      12:	00 00       	nop
      14:	57 c1       	rjmp	.+686    	; 0x2c4 <__bad_interrupt>
      16:	00 00       	nop
      18:	55 c1       	rjmp	.+682    	; 0x2c4 <__bad_interrupt>
	byte bitmap_pit[] = {
      1a:	00 00       	nop
      1c:	53 c1       	rjmp	.+678    	; 0x2c4 <__bad_interrupt>
      1e:	00 00       	nop
      20:	51 c1       	rjmp	.+674    	; 0x2c4 <__bad_interrupt>
      22:	00 00       	nop
      24:	4f c1       	rjmp	.+670    	; 0x2c4 <__bad_interrupt>
      26:	00 00       	nop
      28:	4d c1       	rjmp	.+666    	; 0x2c4 <__bad_interrupt>
      2a:	00 00       	nop
	const int pit_width = 6; // Maybe 4
	const int pit_height = 6;

	Sprite pit;

	init_sprite( &pit, 20,28,pit_width,pit_height, bitmap_pit );
      2c:	4b c1       	rjmp	.+662    	; 0x2c4 <__bad_interrupt>
      2e:	00 00       	nop
      30:	49 c1       	rjmp	.+658    	; 0x2c4 <__bad_interrupt>
      32:	00 00       	nop
      34:	47 c1       	rjmp	.+654    	; 0x2c4 <__bad_interrupt>
      36:	00 00       	nop
      38:	45 c1       	rjmp	.+650    	; 0x2c4 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	43 c1       	rjmp	.+646    	; 0x2c4 <__bad_interrupt>
      3e:	00 00       	nop
      40:	41 c1       	rjmp	.+642    	; 0x2c4 <__bad_interrupt>
      42:	00 00       	nop
      44:	3f c1       	rjmp	.+638    	; 0x2c4 <__bad_interrupt>

	draw_sprite( &pit );
      46:	00 00       	nop
      48:	3d c1       	rjmp	.+634    	; 0x2c4 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	3b c1       	rjmp	.+630    	; 0x2c4 <__bad_interrupt>


}
      4e:	00 00       	nop
      50:	39 c1       	rjmp	.+626    	; 0x2c4 <__bad_interrupt>
      52:	00 00       	nop
      54:	37 c1       	rjmp	.+622    	; 0x2c4 <__bad_interrupt>
      56:	00 00       	nop
      58:	35 c1       	rjmp	.+618    	; 0x2c4 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	33 c1       	rjmp	.+614    	; 0x2c4 <__bad_interrupt>
      5e:	00 00       	nop
      60:	31 c1       	rjmp	.+610    	; 0x2c4 <__bad_interrupt>
      62:	00 00       	nop
      64:	2f c1       	rjmp	.+606    	; 0x2c4 <__bad_interrupt>
	Sprite grenades_tool;

	init_sprite( &grenades_tool, 59, 2, grenades_tool_width, grenades_tool_height, bitmap_grenades_tool);
	draw_sprite( &grenades_tool );

	sprintf(g, "%d", grenades);
      66:	00 00       	nop
      68:	2d c1       	rjmp	.+602    	; 0x2c4 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	2b c1       	rjmp	.+598    	; 0x2c4 <__bad_interrupt>
	draw_string(g, 68, 3);
      6e:	00 00       	nop
      70:	29 c1       	rjmp	.+594    	; 0x2c4 <__bad_interrupt>
      72:	00 00       	nop
      74:	27 c1       	rjmp	.+590    	; 0x2c4 <__bad_interrupt>
      76:	00 00       	nop
      78:	25 c1       	rjmp	.+586    	; 0x2c4 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	23 c1       	rjmp	.+582    	; 0x2c4 <__bad_interrupt>
      7e:	00 00       	nop
      80:	21 c1       	rjmp	.+578    	; 0x2c4 <__bad_interrupt>
      82:	00 00       	nop
      84:	1f c1       	rjmp	.+574    	; 0x2c4 <__bad_interrupt>

}
      86:	00 00       	nop
      88:	1d c1       	rjmp	.+570    	; 0x2c4 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	1b c1       	rjmp	.+566    	; 0x2c4 <__bad_interrupt>
      8e:	00 00       	nop
      90:	19 c1       	rjmp	.+562    	; 0x2c4 <__bad_interrupt>
      92:	00 00       	nop
      94:	17 c1       	rjmp	.+558    	; 0x2c4 <__bad_interrupt>
      96:	00 00       	nop
      98:	15 c1       	rjmp	.+554    	; 0x2c4 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	13 c1       	rjmp	.+550    	; 0x2c4 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	11 c1       	rjmp	.+546    	; 0x2c4 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	0f c1       	rjmp	.+542    	; 0x2c4 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	0d c1       	rjmp	.+538    	; 0x2c4 <__bad_interrupt>
      aa:	00 00       	nop

000000ac <ASCII>:
      ac:	00 00 00 00 00 00 00 5f 00 00 00 07 00 07 00 14     ......._........
      bc:	7f 14 7f 14 24 2a 7f 2a 12 23 13 08 64 62 36 49     ....$*.*.#..db6I
      cc:	55 22 50 00 05 03 00 00 00 1c 22 41 00 00 41 22     U"P......."A..A"
      dc:	1c 00 14 08 3e 08 14 08 08 3e 08 08 00 50 30 00     ....>....>...P0.
      ec:	00 08 08 08 08 08 00 60 60 00 00 20 10 08 04 02     .......``.. ....
      fc:	3e 51 49 45 3e 00 42 7f 40 00 42 61 51 49 46 21     >QIE>.B.@.BaQIF!
     10c:	41 45 4b 31 18 14 12 7f 10 27 45 45 45 39 3c 4a     AEK1.....'EEE9<J
     11c:	49 49 30 01 71 09 05 03 36 49 49 49 36 06 49 49     II0.q...6III6.II
     12c:	29 1e 00 36 36 00 00 00 56 36 00 00 08 14 22 41     )..66...V6...."A
     13c:	00 14 14 14 14 14 00 41 22 14 08 02 01 51 09 06     .......A"....Q..
     14c:	32 49 79 41 3e 7e 11 11 11 7e 7f 49 49 49 36 3e     2IyA>~...~.III6>
     15c:	41 41 41 22 7f 41 41 22 1c 7f 49 49 49 41 7f 09     AAA".AA"..IIIA..
     16c:	09 09 01 3e 41 49 49 7a 7f 08 08 08 7f 00 41 7f     ...>AIIz......A.
     17c:	41 00 20 40 41 3f 01 7f 08 14 22 41 7f 40 40 40     A. @A?...."A.@@@
     18c:	40 7f 02 0c 02 7f 7f 04 08 10 7f 3e 41 41 41 3e     @..........>AAA>
     19c:	7f 09 09 09 06 3e 41 51 21 5e 7f 09 19 29 46 46     .....>AQ!^...)FF
     1ac:	49 49 49 31 01 01 7f 01 01 3f 40 40 40 3f 1f 20     III1.....?@@@?. 
     1bc:	40 20 1f 3f 40 38 40 3f 63 14 08 14 63 07 08 70     @ .?@8@?c...c..p
     1cc:	08 07 61 51 49 45 43 00 7f 41 41 00 02 04 08 10     ..aQIEC..AA.....
     1dc:	20 00 41 41 7f 00 04 02 01 02 04 40 40 40 40 40      .AA.......@@@@@
     1ec:	00 01 02 04 00 20 54 54 54 78 7f 48 44 44 38 38     ..... TTTx.HDD88
     1fc:	44 44 44 20 38 44 44 48 7f 38 54 54 54 18 08 7e     DDD 8DDH.8TTT..~
     20c:	09 01 02 0c 52 52 52 3e 7f 08 04 04 78 00 44 7d     ....RRR>....x.D}
     21c:	40 00 20 40 44 3d 00 7f 10 28 44 00 00 41 7f 40     @. @D=...(D..A.@
     22c:	00 7c 04 18 04 78 7c 08 04 04 78 38 44 44 44 38     .|...x|...x8DDD8
     23c:	7c 14 14 14 08 08 14 14 18 7c 7c 08 04 04 08 48     |........||....H
     24c:	54 54 54 20 04 3f 44 40 20 3c 40 40 20 7c 1c 20     TTT .?D@ <@@ |. 
     25c:	40 20 1c 3c 40 30 40 3c 44 28 10 28 44 0c 50 50     @ .<@0@<D(.(D.PP
     26c:	50 3c 44 64 54 4c 44 00 08 36 41 00 00 00 7f 00     P<DdTLD..6A.....
     27c:	00 00 41 36 08 00 10 08 08 10 08 78 46 41 46 78     ..A6.......xFAFx

0000028c <__ctors_end>:
     28c:	11 24       	eor	r1, r1
     28e:	1f be       	out	0x3f, r1	; 63
     290:	cf ef       	ldi	r28, 0xFF	; 255
     292:	da e0       	ldi	r29, 0x0A	; 10
     294:	de bf       	out	0x3e, r29	; 62
     296:	cd bf       	out	0x3d, r28	; 61

00000298 <__do_copy_data>:
     298:	11 e0       	ldi	r17, 0x01	; 1
     29a:	a0 e0       	ldi	r26, 0x00	; 0
     29c:	b1 e0       	ldi	r27, 0x01	; 1
     29e:	ee e2       	ldi	r30, 0x2E	; 46
     2a0:	ff e1       	ldi	r31, 0x1F	; 31
     2a2:	02 c0       	rjmp	.+4      	; 0x2a8 <__do_copy_data+0x10>
     2a4:	05 90       	lpm	r0, Z+
     2a6:	0d 92       	st	X+, r0
     2a8:	a8 34       	cpi	r26, 0x48	; 72
     2aa:	b1 07       	cpc	r27, r17
     2ac:	d9 f7       	brne	.-10     	; 0x2a4 <__do_copy_data+0xc>

000002ae <__do_clear_bss>:
     2ae:	24 e0       	ldi	r18, 0x04	; 4
     2b0:	a8 e4       	ldi	r26, 0x48	; 72
     2b2:	b1 e0       	ldi	r27, 0x01	; 1
     2b4:	01 c0       	rjmp	.+2      	; 0x2b8 <.do_clear_bss_start>

000002b6 <.do_clear_bss_loop>:
     2b6:	1d 92       	st	X+, r1

000002b8 <.do_clear_bss_start>:
     2b8:	ae 30       	cpi	r26, 0x0E	; 14
     2ba:	b2 07       	cpc	r27, r18
     2bc:	e1 f7       	brne	.-8      	; 0x2b6 <.do_clear_bss_loop>
     2be:	13 d0       	rcall	.+38     	; 0x2e6 <main>
     2c0:	0c 94 95 0f 	jmp	0x1f2a	; 0x1f2a <_exit>

000002c4 <__bad_interrupt>:
     2c4:	9d ce       	rjmp	.-710    	; 0x0 <__vectors>

000002c6 <setup_device>:
	return 0;

}

void setup_device() {
	CPU_PRESCALE(CPU_8MHz);
     2c6:	e1 e6       	ldi	r30, 0x61	; 97
     2c8:	f0 e0       	ldi	r31, 0x00	; 0
     2ca:	80 e8       	ldi	r24, 0x80	; 128
     2cc:	80 83       	st	Z, r24
     2ce:	81 e0       	ldi	r24, 0x01	; 1
     2d0:	80 83       	st	Z, r24

	DDRB = ( LED0 | LED1 ) & ~( SW0 | SW1 ); // Output to LEDs, input from switches.
     2d2:	8c e0       	ldi	r24, 0x0C	; 12
     2d4:	84 b9       	out	0x04, r24	; 4
	DDRD = LED2; // Turn on the little yellow LED.
     2d6:	80 e4       	ldi	r24, 0x40	; 64
     2d8:	8a b9       	out	0x0a, r24	; 10

	// Turn everything off to start with
	PORTB = 0x00;
     2da:	15 b8       	out	0x05, r1	; 5
	PORTD = 0x00;
     2dc:	1b b8       	out	0x0b, r1	; 11

	LCDInitialise(LCD_DEFAULT_CONTRAST);
     2de:	8f e3       	ldi	r24, 0x3F	; 63
     2e0:	0e 94 cb 09 	call	0x1396	; 0x1396 <LCDInitialise>
	clear();
     2e4:	a9 c5       	rjmp	.+2898   	; 0xe38 <clear>

000002e6 <main>:
     2e6:	ef df       	rcall	.-34     	; 0x2c6 <setup_device>
#include "items.h"

void setup_device(void);

int main() {
	setup_device();
     2e8:	4f d0       	rcall	.+158    	; 0x388 <setup_start_screen>

	setup_start_screen();
     2ea:	72 d0       	rcall	.+228    	; 0x3d0 <screen_lines>
     2ec:	c2 d0       	rcall	.+388    	; 0x472 <lives_setup>

	screen_lines();
     2ee:	e5 d0       	rcall	.+458    	; 0x4ba <score_setup>
     2f0:	f3 d2       	rcall	.+1510   	; 0x8d8 <start_hero>
	lives_setup();
     2f2:	b9 d3       	rcall	.+1906   	; 0xa66 <start_zombies>
     2f4:	90 d5       	rcall	.+2848   	; 0xe16 <refresh>
	score_setup();
     2f6:	80 e0       	ldi	r24, 0x00	; 0
     2f8:	90 e0       	ldi	r25, 0x00	; 0

//	start_pit();
//	sword_setup();
//	grenades_setup();

	start_hero();
     2fa:	08 95       	ret

000002fc <game_countdown>:
	game_countdown();
	refresh();
}

void game_countdown() {
	clear();
     2fc:	9d d5       	rcall	.+2874   	; 0xe38 <clear>
     2fe:	46 e1       	ldi	r20, 0x16	; 22
	int timer = 3;
//	while ( timer > 0) {

		draw_string( "3", 40, 22 );
     300:	50 e0       	ldi	r21, 0x00	; 0
     302:	68 e2       	ldi	r22, 0x28	; 40
     304:	70 e0       	ldi	r23, 0x00	; 0
     306:	8a e0       	ldi	r24, 0x0A	; 10
     308:	91 e0       	ldi	r25, 0x01	; 1
     30a:	0e 94 99 09 	call	0x1332	; 0x1332 <draw_string>
     30e:	2a 9a       	sbi	0x05, 2	; 5
		turn_on(LED0);
     310:	2b 9a       	sbi	0x05, 3	; 5
		turn_on(LED1);
     312:	5e 9a       	sbi	0x0b, 6	; 11
		turn_on(LED2);
     314:	80 d5       	rcall	.+2816   	; 0xe16 <refresh>
		refresh();
     316:	2f ef       	ldi	r18, 0xFF	; 255
     318:	84 e3       	ldi	r24, 0x34	; 52
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     31a:	9c e0       	ldi	r25, 0x0C	; 12
     31c:	21 50       	subi	r18, 0x01	; 1
     31e:	80 40       	sbci	r24, 0x00	; 0
     320:	90 40       	sbci	r25, 0x00	; 0
     322:	e1 f7       	brne	.-8      	; 0x31c <game_countdown+0x20>
     324:	00 c0       	rjmp	.+0      	; 0x326 <game_countdown+0x2a>
     326:	00 00       	nop
     328:	2a 98       	cbi	0x05, 2	; 5
     32a:	2b 98       	cbi	0x05, 3	; 5
		_delay_ms(500);
		turn_off(LED0);
     32c:	5e 98       	cbi	0x0b, 6	; 11
		turn_off(LED1);
     32e:	84 d5       	rcall	.+2824   	; 0xe38 <clear>
		turn_off(LED2);
     330:	46 e1       	ldi	r20, 0x16	; 22
		clear();
     332:	50 e0       	ldi	r21, 0x00	; 0
     334:	68 e2       	ldi	r22, 0x28	; 40
		draw_string( "2", 40, 22 );
     336:	70 e0       	ldi	r23, 0x00	; 0
     338:	8c e0       	ldi	r24, 0x0C	; 12
     33a:	91 e0       	ldi	r25, 0x01	; 1
     33c:	fa d7       	rcall	.+4084   	; 0x1332 <draw_string>
     33e:	2a 9a       	sbi	0x05, 2	; 5
     340:	2b 9a       	sbi	0x05, 3	; 5
     342:	69 d5       	rcall	.+2770   	; 0xe16 <refresh>
     344:	2f ef       	ldi	r18, 0xFF	; 255
		turn_on(LED0);
     346:	84 e3       	ldi	r24, 0x34	; 52
		turn_on(LED1);
     348:	9c e0       	ldi	r25, 0x0C	; 12
		refresh();
     34a:	21 50       	subi	r18, 0x01	; 1
     34c:	80 40       	sbci	r24, 0x00	; 0
     34e:	90 40       	sbci	r25, 0x00	; 0
     350:	e1 f7       	brne	.-8      	; 0x34a <game_countdown+0x4e>
     352:	00 c0       	rjmp	.+0      	; 0x354 <game_countdown+0x58>
     354:	00 00       	nop
     356:	2a 98       	cbi	0x05, 2	; 5
     358:	2b 98       	cbi	0x05, 3	; 5
     35a:	6e d5       	rcall	.+2780   	; 0xe38 <clear>
     35c:	46 e1       	ldi	r20, 0x16	; 22
     35e:	50 e0       	ldi	r21, 0x00	; 0
		_delay_ms(500);
		turn_off(LED0);
     360:	68 e2       	ldi	r22, 0x28	; 40
		turn_off(LED1);
     362:	70 e0       	ldi	r23, 0x00	; 0
		clear();
     364:	8e e0       	ldi	r24, 0x0E	; 14
     366:	91 e0       	ldi	r25, 0x01	; 1
		draw_string( "1", 40, 22 );
     368:	e4 d7       	rcall	.+4040   	; 0x1332 <draw_string>
     36a:	2b 9a       	sbi	0x05, 3	; 5
     36c:	54 d5       	rcall	.+2728   	; 0xe16 <refresh>
     36e:	2f ef       	ldi	r18, 0xFF	; 255
     370:	84 e3       	ldi	r24, 0x34	; 52
     372:	9c e0       	ldi	r25, 0x0C	; 12
     374:	21 50       	subi	r18, 0x01	; 1
     376:	80 40       	sbci	r24, 0x00	; 0
		turn_on(LED1);
     378:	90 40       	sbci	r25, 0x00	; 0
		refresh();
     37a:	e1 f7       	brne	.-8      	; 0x374 <game_countdown+0x78>
     37c:	00 c0       	rjmp	.+0      	; 0x37e <game_countdown+0x82>
     37e:	00 00       	nop
     380:	2a 98       	cbi	0x05, 2	; 5
     382:	2b 98       	cbi	0x05, 3	; 5
     384:	59 d5       	rcall	.+2738   	; 0xe38 <clear>
     386:	58 c5       	rjmp	.+2736   	; 0xe38 <clear>

00000388 <setup_start_screen>:
     388:	57 d5       	rcall	.+2734   	; 0xe38 <clear>
     38a:	40 e0       	ldi	r20, 0x00	; 0
     38c:	50 e0       	ldi	r21, 0x00	; 0
     38e:	6f e0       	ldi	r22, 0x0F	; 15
		_delay_ms(500);
		turn_off(LED0);
     390:	70 e0       	ldi	r23, 0x00	; 0
		turn_off(LED1);
     392:	80 e1       	ldi	r24, 0x10	; 16
		clear();
     394:	91 e0       	ldi	r25, 0x01	; 1
     396:	cd d7       	rcall	.+3994   	; 0x1332 <draw_string>

//	}
	clear();
     398:	49 e0       	ldi	r20, 0x09	; 9
     39a:	50 e0       	ldi	r21, 0x00	; 0
#include "friendly_ports.h"

void setup_start_screen() { // Write the different strings at the correct locations on the screen
	clear();
	draw_string("ZombieDash",15,0);
	draw_string("Teensy Edition",7,9);
     39c:	67 e0       	ldi	r22, 0x07	; 7
     39e:	70 e0       	ldi	r23, 0x00	; 0
     3a0:	8b e1       	ldi	r24, 0x1B	; 27
     3a2:	91 e0       	ldi	r25, 0x01	; 1
     3a4:	c6 d7       	rcall	.+3980   	; 0x1332 <draw_string>
     3a6:	4b e1       	ldi	r20, 0x1B	; 27
     3a8:	50 e0       	ldi	r21, 0x00	; 0
     3aa:	63 e1       	ldi	r22, 0x13	; 19
	draw_string("n9378880",19,27);
     3ac:	70 e0       	ldi	r23, 0x00	; 0
     3ae:	8a e2       	ldi	r24, 0x2A	; 42
     3b0:	91 e0       	ldi	r25, 0x01	; 1
     3b2:	bf d7       	rcall	.+3966   	; 0x1332 <draw_string>
     3b4:	44 e2       	ldi	r20, 0x24	; 36
     3b6:	50 e0       	ldi	r21, 0x00	; 0
     3b8:	6f e0       	ldi	r22, 0x0F	; 15
     3ba:	70 e0       	ldi	r23, 0x00	; 0
	draw_string("Jai Spicer",15,36);
     3bc:	83 e3       	ldi	r24, 0x33	; 51
     3be:	91 e0       	ldi	r25, 0x01	; 1
     3c0:	b8 d7       	rcall	.+3952   	; 0x1332 <draw_string>
     3c2:	29 d5       	rcall	.+2642   	; 0xe16 <refresh>
     3c4:	19 9b       	sbis	0x03, 1	; 3
     3c6:	fe cf       	rjmp	.-4      	; 0x3c4 <setup_start_screen+0x3c>
     3c8:	19 99       	sbic	0x03, 1	; 3
     3ca:	fe cf       	rjmp	.-4      	; 0x3c8 <setup_start_screen+0x40>
	refresh();
     3cc:	97 df       	rcall	.-210    	; 0x2fc <game_countdown>
     3ce:	23 c5       	rjmp	.+2630   	; 0xe16 <refresh>

000003d0 <screen_lines>:
 */

#include "screen.h"

void screen_lines() {
	draw_line(0,0,0,47); // Left Line
     3d0:	2f e2       	ldi	r18, 0x2F	; 47
     3d2:	30 e0       	ldi	r19, 0x00	; 0
     3d4:	40 e0       	ldi	r20, 0x00	; 0
     3d6:	50 e0       	ldi	r21, 0x00	; 0
     3d8:	60 e0       	ldi	r22, 0x00	; 0
     3da:	70 e0       	ldi	r23, 0x00	; 0
     3dc:	80 e0       	ldi	r24, 0x00	; 0
     3de:	90 e0       	ldi	r25, 0x00	; 0
     3e0:	56 d5       	rcall	.+2732   	; 0xe8e <draw_line>
     3e2:	2f e2       	ldi	r18, 0x2F	; 47
	draw_line(83,0,83,47); // Right Line
     3e4:	30 e0       	ldi	r19, 0x00	; 0
     3e6:	43 e5       	ldi	r20, 0x53	; 83
     3e8:	50 e0       	ldi	r21, 0x00	; 0
     3ea:	60 e0       	ldi	r22, 0x00	; 0
     3ec:	70 e0       	ldi	r23, 0x00	; 0
     3ee:	83 e5       	ldi	r24, 0x53	; 83
     3f0:	90 e0       	ldi	r25, 0x00	; 0
     3f2:	4d d5       	rcall	.+2714   	; 0xe8e <draw_line>
     3f4:	20 e0       	ldi	r18, 0x00	; 0
     3f6:	30 e0       	ldi	r19, 0x00	; 0
	draw_line(0,0,84,0); // Top Line
     3f8:	44 e5       	ldi	r20, 0x54	; 84
     3fa:	50 e0       	ldi	r21, 0x00	; 0
     3fc:	60 e0       	ldi	r22, 0x00	; 0
     3fe:	70 e0       	ldi	r23, 0x00	; 0
     400:	80 e0       	ldi	r24, 0x00	; 0
     402:	90 e0       	ldi	r25, 0x00	; 0
     404:	44 d5       	rcall	.+2696   	; 0xe8e <draw_line>
     406:	2f e2       	ldi	r18, 0x2F	; 47
     408:	30 e0       	ldi	r19, 0x00	; 0
     40a:	43 e5       	ldi	r20, 0x53	; 83
	draw_line(0,47,83,47); // Bottom Line
     40c:	50 e0       	ldi	r21, 0x00	; 0
     40e:	6f e2       	ldi	r22, 0x2F	; 47
     410:	70 e0       	ldi	r23, 0x00	; 0
     412:	80 e0       	ldi	r24, 0x00	; 0
     414:	90 e0       	ldi	r25, 0x00	; 0
     416:	3b d5       	rcall	.+2678   	; 0xe8e <draw_line>
     418:	2c e0       	ldi	r18, 0x0C	; 12
     41a:	30 e0       	ldi	r19, 0x00	; 0
     41c:	43 e5       	ldi	r20, 0x53	; 83
     41e:	50 e0       	ldi	r21, 0x00	; 0
	draw_line(0,12,83,12); // Score area
     420:	6c e0       	ldi	r22, 0x0C	; 12
     422:	70 e0       	ldi	r23, 0x00	; 0
     424:	80 e0       	ldi	r24, 0x00	; 0
     426:	90 e0       	ldi	r25, 0x00	; 0
     428:	32 d5       	rcall	.+2660   	; 0xe8e <draw_line>
     42a:	22 e1       	ldi	r18, 0x12	; 18
     42c:	30 e0       	ldi	r19, 0x00	; 0
     42e:	43 e3       	ldi	r20, 0x33	; 51
     430:	50 e0       	ldi	r21, 0x00	; 0
     432:	62 e1       	ldi	r22, 0x12	; 18

	//zombie spawn debug
	draw_line(28,18,51,18);
     434:	70 e0       	ldi	r23, 0x00	; 0
     436:	8c e1       	ldi	r24, 0x1C	; 28
     438:	90 e0       	ldi	r25, 0x00	; 0
     43a:	29 d5       	rcall	.+2642   	; 0xe8e <draw_line>
     43c:	29 e2       	ldi	r18, 0x29	; 41
     43e:	30 e0       	ldi	r19, 0x00	; 0
     440:	43 e3       	ldi	r20, 0x33	; 51
     442:	50 e0       	ldi	r21, 0x00	; 0
     444:	69 e2       	ldi	r22, 0x29	; 41
     446:	70 e0       	ldi	r23, 0x00	; 0
	draw_line(28,41,51,41);
     448:	8c e1       	ldi	r24, 0x1C	; 28
     44a:	90 e0       	ldi	r25, 0x00	; 0
     44c:	20 d5       	rcall	.+2624   	; 0xe8e <draw_line>
     44e:	29 e2       	ldi	r18, 0x29	; 41
     450:	30 e0       	ldi	r19, 0x00	; 0
     452:	4c e1       	ldi	r20, 0x1C	; 28
     454:	50 e0       	ldi	r21, 0x00	; 0
     456:	62 e1       	ldi	r22, 0x12	; 18
     458:	70 e0       	ldi	r23, 0x00	; 0
     45a:	8c e1       	ldi	r24, 0x1C	; 28
	draw_line(28,18,28,41);
     45c:	90 e0       	ldi	r25, 0x00	; 0
     45e:	17 d5       	rcall	.+2606   	; 0xe8e <draw_line>
     460:	29 e2       	ldi	r18, 0x29	; 41
     462:	30 e0       	ldi	r19, 0x00	; 0
     464:	43 e3       	ldi	r20, 0x33	; 51
     466:	50 e0       	ldi	r21, 0x00	; 0
     468:	62 e1       	ldi	r22, 0x12	; 18
     46a:	70 e0       	ldi	r23, 0x00	; 0
     46c:	83 e3       	ldi	r24, 0x33	; 51
     46e:	90 e0       	ldi	r25, 0x00	; 0
	draw_line(51,18,51,41);
     470:	0e c5       	rjmp	.+2588   	; 0xe8e <draw_line>

00000472 <lives_setup>:
#include "lives.h"

int lives = 3; // Initialise lives for the start of game
char l[15];
void lives_setup() {
	draw_string("L:", 2,3);
     472:	43 e0       	ldi	r20, 0x03	; 3
     474:	50 e0       	ldi	r21, 0x00	; 0
     476:	62 e0       	ldi	r22, 0x02	; 2
     478:	70 e0       	ldi	r23, 0x00	; 0
     47a:	8e e3       	ldi	r24, 0x3E	; 62
     47c:	91 e0       	ldi	r25, 0x01	; 1
     47e:	59 d7       	rcall	.+3762   	; 0x1332 <draw_string>
     480:	80 91 01 01 	lds	r24, 0x0101
	sprintf(l, "%d", lives);
     484:	8f 93       	push	r24
     486:	80 91 00 01 	lds	r24, 0x0100
     48a:	8f 93       	push	r24
     48c:	81 e4       	ldi	r24, 0x41	; 65
     48e:	91 e0       	ldi	r25, 0x01	; 1
     490:	9f 93       	push	r25
     492:	8f 93       	push	r24
     494:	8c e4       	ldi	r24, 0x4C	; 76
     496:	91 e0       	ldi	r25, 0x01	; 1
     498:	9f 93       	push	r25
     49a:	8f 93       	push	r24
     49c:	0e 94 79 0c 	call	0x18f2	; 0x18f2 <sprintf>
     4a0:	0f 90       	pop	r0
	draw_string(l, 11, 3);
     4a2:	0f 90       	pop	r0
     4a4:	0f 90       	pop	r0
     4a6:	0f 90       	pop	r0
     4a8:	0f 90       	pop	r0
     4aa:	0f 90       	pop	r0
     4ac:	43 e0       	ldi	r20, 0x03	; 3
     4ae:	50 e0       	ldi	r21, 0x00	; 0
     4b0:	6b e0       	ldi	r22, 0x0B	; 11
     4b2:	70 e0       	ldi	r23, 0x00	; 0
     4b4:	8c e4       	ldi	r24, 0x4C	; 76
     4b6:	91 e0       	ldi	r25, 0x01	; 1
     4b8:	3c c7       	rjmp	.+3704   	; 0x1332 <draw_string>

000004ba <score_setup>:
char s[15];
void score_setup() {
//	score = scoretotal;


	draw_string("S:", 18,3);
     4ba:	43 e0       	ldi	r20, 0x03	; 3
     4bc:	50 e0       	ldi	r21, 0x00	; 0
     4be:	62 e1       	ldi	r22, 0x12	; 18
     4c0:	70 e0       	ldi	r23, 0x00	; 0
     4c2:	84 e4       	ldi	r24, 0x44	; 68
     4c4:	91 e0       	ldi	r25, 0x01	; 1
     4c6:	35 d7       	rcall	.+3690   	; 0x1332 <draw_string>
     4c8:	80 91 49 01 	lds	r24, 0x0149
	sprintf(s, "%d", score);
     4cc:	8f 93       	push	r24
     4ce:	80 91 48 01 	lds	r24, 0x0148
     4d2:	8f 93       	push	r24
     4d4:	81 e4       	ldi	r24, 0x41	; 65
     4d6:	91 e0       	ldi	r25, 0x01	; 1
     4d8:	9f 93       	push	r25
     4da:	8f 93       	push	r24
     4dc:	8b e5       	ldi	r24, 0x5B	; 91
     4de:	91 e0       	ldi	r25, 0x01	; 1
     4e0:	9f 93       	push	r25
     4e2:	8f 93       	push	r24
     4e4:	0e 94 79 0c 	call	0x18f2	; 0x18f2 <sprintf>
     4e8:	0f 90       	pop	r0
	draw_string(s, 27, 3);
     4ea:	0f 90       	pop	r0
     4ec:	0f 90       	pop	r0
     4ee:	0f 90       	pop	r0
     4f0:	0f 90       	pop	r0
     4f2:	0f 90       	pop	r0
     4f4:	43 e0       	ldi	r20, 0x03	; 3
     4f6:	50 e0       	ldi	r21, 0x00	; 0
     4f8:	6b e1       	ldi	r22, 0x1B	; 27
     4fa:	70 e0       	ldi	r23, 0x00	; 0
     4fc:	8b e5       	ldi	r24, 0x5B	; 91
     4fe:	91 e0       	ldi	r25, 0x01	; 1
     500:	18 c7       	rjmp	.+3632   	; 0x1332 <draw_string>

00000502 <update_score_time>:
     502:	80 91 48 01 	lds	r24, 0x0148
}

void update_score_time() {
	score = score + 1;
     506:	90 91 49 01 	lds	r25, 0x0149
     50a:	01 96       	adiw	r24, 0x01	; 1
     50c:	90 93 49 01 	sts	0x0149, r25
     510:	80 93 48 01 	sts	0x0148, r24
     514:	08 95       	ret

00000516 <move_hero>:
		_delay_ms( 100 );
	}

}

void move_hero( Sprite * hero ) {
     516:	af 92       	push	r10
     518:	bf 92       	push	r11
     51a:	cf 92       	push	r12
     51c:	df 92       	push	r13
     51e:	ef 92       	push	r14
     520:	ff 92       	push	r15
     522:	0f 93       	push	r16
     524:	1f 93       	push	r17
     526:	cf 93       	push	r28
     528:	df 93       	push	r29
     52a:	ec 01       	movw	r28, r24

	if ( ( hero->dx == 1) && ( pressed ( SW1 ) ) ) { // Right Button, turn right, down
     52c:	20 e0       	ldi	r18, 0x00	; 0
     52e:	30 e0       	ldi	r19, 0x00	; 0
     530:	40 e8       	ldi	r20, 0x80	; 128
     532:	5f e3       	ldi	r21, 0x3F	; 63
     534:	6d 85       	ldd	r22, Y+13	; 0x0d
     536:	7e 85       	ldd	r23, Y+14	; 0x0e
     538:	8f 85       	ldd	r24, Y+15	; 0x0f
     53a:	98 89       	ldd	r25, Y+16	; 0x10
     53c:	b2 d3       	rcall	.+1892   	; 0xca2 <__cmpsf2>
     53e:	81 11       	cpse	r24, r1
     540:	21 c0       	rjmp	.+66     	; 0x584 <move_hero+0x6e>
     542:	19 9b       	sbis	0x03, 1	; 3
     544:	1f c0       	rjmp	.+62     	; 0x584 <move_hero+0x6e>
     546:	2f ef       	ldi	r18, 0xFF	; 255
     548:	80 e7       	ldi	r24, 0x70	; 112
     54a:	92 e0       	ldi	r25, 0x02	; 2
     54c:	21 50       	subi	r18, 0x01	; 1
     54e:	80 40       	sbci	r24, 0x00	; 0
     550:	90 40       	sbci	r25, 0x00	; 0
     552:	e1 f7       	brne	.-8      	; 0x54c <move_hero+0x36>
     554:	00 c0       	rjmp	.+0      	; 0x556 <move_hero+0x40>
     556:	00 00       	nop
     558:	1d 86       	std	Y+13, r1	; 0x0d
		_delay_ms(100);
		hero->dx = 0;
     55a:	1e 86       	std	Y+14, r1	; 0x0e
     55c:	1f 86       	std	Y+15, r1	; 0x0f
     55e:	18 8a       	std	Y+16, r1	; 0x10
     560:	80 e0       	ldi	r24, 0x00	; 0
		hero->dy = 1;
     562:	90 e0       	ldi	r25, 0x00	; 0
     564:	a0 e8       	ldi	r26, 0x80	; 128
     566:	bf e3       	ldi	r27, 0x3F	; 63
     568:	89 8b       	std	Y+17, r24	; 0x11
     56a:	9a 8b       	std	Y+18, r25	; 0x12
     56c:	ab 8b       	std	Y+19, r26	; 0x13
     56e:	bc 8b       	std	Y+20, r27	; 0x14
     570:	10 92 03 01 	sts	0x0103, r1
		px = 0;
     574:	10 92 02 01 	sts	0x0102, r1
     578:	81 e0       	ldi	r24, 0x01	; 1
		py = 1;
     57a:	90 e0       	ldi	r25, 0x00	; 0
     57c:	90 93 4b 01 	sts	0x014B, r25
     580:	80 93 4a 01 	sts	0x014A, r24
     584:	20 e0       	ldi	r18, 0x00	; 0
	}
	if ( (hero->dx == -1) && ( pressed ( SW1 ) )) { // Right Button, turn right, up
     586:	30 e0       	ldi	r19, 0x00	; 0
     588:	40 e8       	ldi	r20, 0x80	; 128
     58a:	5f eb       	ldi	r21, 0xBF	; 191
     58c:	6d 85       	ldd	r22, Y+13	; 0x0d
     58e:	7e 85       	ldd	r23, Y+14	; 0x0e
     590:	8f 85       	ldd	r24, Y+15	; 0x0f
     592:	98 89       	ldd	r25, Y+16	; 0x10
     594:	86 d3       	rcall	.+1804   	; 0xca2 <__cmpsf2>
     596:	81 11       	cpse	r24, r1
     598:	21 c0       	rjmp	.+66     	; 0x5dc <move_hero+0xc6>
     59a:	19 9b       	sbis	0x03, 1	; 3
     59c:	1f c0       	rjmp	.+62     	; 0x5dc <move_hero+0xc6>
     59e:	2f ef       	ldi	r18, 0xFF	; 255
     5a0:	80 e7       	ldi	r24, 0x70	; 112
     5a2:	92 e0       	ldi	r25, 0x02	; 2
     5a4:	21 50       	subi	r18, 0x01	; 1
     5a6:	80 40       	sbci	r24, 0x00	; 0
     5a8:	90 40       	sbci	r25, 0x00	; 0
     5aa:	e1 f7       	brne	.-8      	; 0x5a4 <move_hero+0x8e>
     5ac:	00 c0       	rjmp	.+0      	; 0x5ae <move_hero+0x98>
     5ae:	00 00       	nop
     5b0:	1d 86       	std	Y+13, r1	; 0x0d
     5b2:	1e 86       	std	Y+14, r1	; 0x0e
		_delay_ms(100);
		hero->dx = 0;
     5b4:	1f 86       	std	Y+15, r1	; 0x0f
     5b6:	18 8a       	std	Y+16, r1	; 0x10
     5b8:	80 e0       	ldi	r24, 0x00	; 0
     5ba:	90 e0       	ldi	r25, 0x00	; 0
		hero->dy = -1;
     5bc:	a0 e8       	ldi	r26, 0x80	; 128
     5be:	bf eb       	ldi	r27, 0xBF	; 191
     5c0:	89 8b       	std	Y+17, r24	; 0x11
     5c2:	9a 8b       	std	Y+18, r25	; 0x12
     5c4:	ab 8b       	std	Y+19, r26	; 0x13
     5c6:	bc 8b       	std	Y+20, r27	; 0x14
     5c8:	10 92 03 01 	sts	0x0103, r1
		px = 0;
     5cc:	10 92 02 01 	sts	0x0102, r1
     5d0:	8f ef       	ldi	r24, 0xFF	; 255
     5d2:	9f ef       	ldi	r25, 0xFF	; 255
		py = -1;
     5d4:	90 93 4b 01 	sts	0x014B, r25
     5d8:	80 93 4a 01 	sts	0x014A, r24
     5dc:	20 e0       	ldi	r18, 0x00	; 0
     5de:	30 e0       	ldi	r19, 0x00	; 0
	}
	if ( ( hero->dy == 1 ) && ( pressed ( SW1 ) )) { // Right Button, turn right, left
     5e0:	40 e8       	ldi	r20, 0x80	; 128
     5e2:	5f e3       	ldi	r21, 0x3F	; 63
     5e4:	69 89       	ldd	r22, Y+17	; 0x11
     5e6:	7a 89       	ldd	r23, Y+18	; 0x12
     5e8:	8b 89       	ldd	r24, Y+19	; 0x13
     5ea:	9c 89       	ldd	r25, Y+20	; 0x14
     5ec:	5a d3       	rcall	.+1716   	; 0xca2 <__cmpsf2>
     5ee:	81 11       	cpse	r24, r1
     5f0:	21 c0       	rjmp	.+66     	; 0x634 <move_hero+0x11e>
     5f2:	19 9b       	sbis	0x03, 1	; 3
     5f4:	1f c0       	rjmp	.+62     	; 0x634 <move_hero+0x11e>
     5f6:	2f ef       	ldi	r18, 0xFF	; 255
     5f8:	80 e7       	ldi	r24, 0x70	; 112
     5fa:	92 e0       	ldi	r25, 0x02	; 2
     5fc:	21 50       	subi	r18, 0x01	; 1
     5fe:	80 40       	sbci	r24, 0x00	; 0
     600:	90 40       	sbci	r25, 0x00	; 0
     602:	e1 f7       	brne	.-8      	; 0x5fc <move_hero+0xe6>
     604:	00 c0       	rjmp	.+0      	; 0x606 <move_hero+0xf0>
     606:	00 00       	nop
     608:	80 e0       	ldi	r24, 0x00	; 0
     60a:	90 e0       	ldi	r25, 0x00	; 0
     60c:	a0 e8       	ldi	r26, 0x80	; 128
		_delay_ms(100);
		hero->dx = -1;
     60e:	bf eb       	ldi	r27, 0xBF	; 191
     610:	8d 87       	std	Y+13, r24	; 0x0d
     612:	9e 87       	std	Y+14, r25	; 0x0e
     614:	af 87       	std	Y+15, r26	; 0x0f
     616:	b8 8b       	std	Y+16, r27	; 0x10
     618:	19 8a       	std	Y+17, r1	; 0x11
     61a:	1a 8a       	std	Y+18, r1	; 0x12
     61c:	1b 8a       	std	Y+19, r1	; 0x13
		hero->dy = 0;
     61e:	1c 8a       	std	Y+20, r1	; 0x14
     620:	8f ef       	ldi	r24, 0xFF	; 255
     622:	9f ef       	ldi	r25, 0xFF	; 255
     624:	90 93 03 01 	sts	0x0103, r25
		px = -1;
     628:	80 93 02 01 	sts	0x0102, r24
     62c:	10 92 4b 01 	sts	0x014B, r1
     630:	10 92 4a 01 	sts	0x014A, r1
		py = 0;
     634:	20 e0       	ldi	r18, 0x00	; 0
     636:	30 e0       	ldi	r19, 0x00	; 0
     638:	40 e8       	ldi	r20, 0x80	; 128
	}
	if ( ( hero->dy == -1 ) && ( pressed ( SW1 ) )) { // Right Button, turn right , right
     63a:	5f eb       	ldi	r21, 0xBF	; 191
     63c:	69 89       	ldd	r22, Y+17	; 0x11
     63e:	7a 89       	ldd	r23, Y+18	; 0x12
     640:	8b 89       	ldd	r24, Y+19	; 0x13
     642:	9c 89       	ldd	r25, Y+20	; 0x14
     644:	2e d3       	rcall	.+1628   	; 0xca2 <__cmpsf2>
     646:	81 11       	cpse	r24, r1
     648:	21 c0       	rjmp	.+66     	; 0x68c <move_hero+0x176>
     64a:	19 9b       	sbis	0x03, 1	; 3
     64c:	1f c0       	rjmp	.+62     	; 0x68c <move_hero+0x176>
     64e:	2f ef       	ldi	r18, 0xFF	; 255
     650:	80 e7       	ldi	r24, 0x70	; 112
     652:	92 e0       	ldi	r25, 0x02	; 2
     654:	21 50       	subi	r18, 0x01	; 1
     656:	80 40       	sbci	r24, 0x00	; 0
     658:	90 40       	sbci	r25, 0x00	; 0
     65a:	e1 f7       	brne	.-8      	; 0x654 <move_hero+0x13e>
     65c:	00 c0       	rjmp	.+0      	; 0x65e <move_hero+0x148>
     65e:	00 00       	nop
     660:	80 e0       	ldi	r24, 0x00	; 0
     662:	90 e0       	ldi	r25, 0x00	; 0
     664:	a0 e8       	ldi	r26, 0x80	; 128
     666:	bf e3       	ldi	r27, 0x3F	; 63
		_delay_ms(100);
		hero->dx = 1;
     668:	8d 87       	std	Y+13, r24	; 0x0d
     66a:	9e 87       	std	Y+14, r25	; 0x0e
     66c:	af 87       	std	Y+15, r26	; 0x0f
     66e:	b8 8b       	std	Y+16, r27	; 0x10
     670:	19 8a       	std	Y+17, r1	; 0x11
     672:	1a 8a       	std	Y+18, r1	; 0x12
     674:	1b 8a       	std	Y+19, r1	; 0x13
     676:	1c 8a       	std	Y+20, r1	; 0x14
		hero->dy = 0;
     678:	81 e0       	ldi	r24, 0x01	; 1
     67a:	90 e0       	ldi	r25, 0x00	; 0
     67c:	90 93 03 01 	sts	0x0103, r25
		px = 1;
     680:	80 93 02 01 	sts	0x0102, r24
     684:	10 92 4b 01 	sts	0x014B, r1
     688:	10 92 4a 01 	sts	0x014A, r1
		py = 0;
     68c:	20 e0       	ldi	r18, 0x00	; 0
     68e:	30 e0       	ldi	r19, 0x00	; 0
     690:	40 e8       	ldi	r20, 0x80	; 128
     692:	5f e3       	ldi	r21, 0x3F	; 63
	}
	if ( ( hero->dx == 1 ) && ( pressed ( SW0 ) )) { // Left Button, turn left, up
     694:	6d 85       	ldd	r22, Y+13	; 0x0d
     696:	7e 85       	ldd	r23, Y+14	; 0x0e
     698:	8f 85       	ldd	r24, Y+15	; 0x0f
     69a:	98 89       	ldd	r25, Y+16	; 0x10
     69c:	02 d3       	rcall	.+1540   	; 0xca2 <__cmpsf2>
     69e:	81 11       	cpse	r24, r1
     6a0:	21 c0       	rjmp	.+66     	; 0x6e4 <move_hero+0x1ce>
     6a2:	18 9b       	sbis	0x03, 0	; 3
     6a4:	1f c0       	rjmp	.+62     	; 0x6e4 <move_hero+0x1ce>
     6a6:	2f ef       	ldi	r18, 0xFF	; 255
     6a8:	80 e7       	ldi	r24, 0x70	; 112
     6aa:	92 e0       	ldi	r25, 0x02	; 2
     6ac:	21 50       	subi	r18, 0x01	; 1
     6ae:	80 40       	sbci	r24, 0x00	; 0
     6b0:	90 40       	sbci	r25, 0x00	; 0
     6b2:	e1 f7       	brne	.-8      	; 0x6ac <move_hero+0x196>
     6b4:	00 c0       	rjmp	.+0      	; 0x6b6 <move_hero+0x1a0>
     6b6:	00 00       	nop
     6b8:	1d 86       	std	Y+13, r1	; 0x0d
     6ba:	1e 86       	std	Y+14, r1	; 0x0e
     6bc:	1f 86       	std	Y+15, r1	; 0x0f
     6be:	18 8a       	std	Y+16, r1	; 0x10
     6c0:	80 e0       	ldi	r24, 0x00	; 0
		_delay_ms(100);
		hero->dx = 0;
     6c2:	90 e0       	ldi	r25, 0x00	; 0
     6c4:	a0 e8       	ldi	r26, 0x80	; 128
     6c6:	bf eb       	ldi	r27, 0xBF	; 191
     6c8:	89 8b       	std	Y+17, r24	; 0x11
		hero->dy = -1;
     6ca:	9a 8b       	std	Y+18, r25	; 0x12
     6cc:	ab 8b       	std	Y+19, r26	; 0x13
     6ce:	bc 8b       	std	Y+20, r27	; 0x14
     6d0:	10 92 03 01 	sts	0x0103, r1
     6d4:	10 92 02 01 	sts	0x0102, r1
     6d8:	8f ef       	ldi	r24, 0xFF	; 255
		px = 0;
     6da:	9f ef       	ldi	r25, 0xFF	; 255
     6dc:	90 93 4b 01 	sts	0x014B, r25
     6e0:	80 93 4a 01 	sts	0x014A, r24
		py = -1;
     6e4:	20 e0       	ldi	r18, 0x00	; 0
     6e6:	30 e0       	ldi	r19, 0x00	; 0
     6e8:	40 e8       	ldi	r20, 0x80	; 128
     6ea:	5f eb       	ldi	r21, 0xBF	; 191
     6ec:	6d 85       	ldd	r22, Y+13	; 0x0d
	}
	if ( ( hero->dx == -1 ) && ( pressed ( SW0 ) )) { // Left Button, turn left, down
     6ee:	7e 85       	ldd	r23, Y+14	; 0x0e
     6f0:	8f 85       	ldd	r24, Y+15	; 0x0f
     6f2:	98 89       	ldd	r25, Y+16	; 0x10
     6f4:	d6 d2       	rcall	.+1452   	; 0xca2 <__cmpsf2>
     6f6:	81 11       	cpse	r24, r1
     6f8:	21 c0       	rjmp	.+66     	; 0x73c <move_hero+0x226>
     6fa:	18 9b       	sbis	0x03, 0	; 3
     6fc:	1f c0       	rjmp	.+62     	; 0x73c <move_hero+0x226>
     6fe:	2f ef       	ldi	r18, 0xFF	; 255
     700:	80 e7       	ldi	r24, 0x70	; 112
     702:	92 e0       	ldi	r25, 0x02	; 2
     704:	21 50       	subi	r18, 0x01	; 1
     706:	80 40       	sbci	r24, 0x00	; 0
     708:	90 40       	sbci	r25, 0x00	; 0
     70a:	e1 f7       	brne	.-8      	; 0x704 <move_hero+0x1ee>
     70c:	00 c0       	rjmp	.+0      	; 0x70e <move_hero+0x1f8>
     70e:	00 00       	nop
     710:	1d 86       	std	Y+13, r1	; 0x0d
     712:	1e 86       	std	Y+14, r1	; 0x0e
     714:	1f 86       	std	Y+15, r1	; 0x0f
     716:	18 8a       	std	Y+16, r1	; 0x10
     718:	80 e0       	ldi	r24, 0x00	; 0
     71a:	90 e0       	ldi	r25, 0x00	; 0
		_delay_ms(100);
		hero->dx = 0;
     71c:	a0 e8       	ldi	r26, 0x80	; 128
     71e:	bf e3       	ldi	r27, 0x3F	; 63
     720:	89 8b       	std	Y+17, r24	; 0x11
     722:	9a 8b       	std	Y+18, r25	; 0x12
		hero->dy = 1;
     724:	ab 8b       	std	Y+19, r26	; 0x13
     726:	bc 8b       	std	Y+20, r27	; 0x14
     728:	10 92 03 01 	sts	0x0103, r1
     72c:	10 92 02 01 	sts	0x0102, r1
     730:	81 e0       	ldi	r24, 0x01	; 1
     732:	90 e0       	ldi	r25, 0x00	; 0
		px = 0;
     734:	90 93 4b 01 	sts	0x014B, r25
     738:	80 93 4a 01 	sts	0x014A, r24
		py = 1;
     73c:	20 e0       	ldi	r18, 0x00	; 0
     73e:	30 e0       	ldi	r19, 0x00	; 0
     740:	40 e8       	ldi	r20, 0x80	; 128
     742:	5f e3       	ldi	r21, 0x3F	; 63
     744:	69 89       	ldd	r22, Y+17	; 0x11
     746:	7a 89       	ldd	r23, Y+18	; 0x12
	}
	if ( ( hero->dy == 1 ) && ( pressed ( SW0 ) )) { // Left Button, turn left, right
     748:	8b 89       	ldd	r24, Y+19	; 0x13
     74a:	9c 89       	ldd	r25, Y+20	; 0x14
     74c:	aa d2       	rcall	.+1364   	; 0xca2 <__cmpsf2>
     74e:	81 11       	cpse	r24, r1
     750:	21 c0       	rjmp	.+66     	; 0x794 <move_hero+0x27e>
     752:	18 9b       	sbis	0x03, 0	; 3
     754:	1f c0       	rjmp	.+62     	; 0x794 <move_hero+0x27e>
     756:	2f ef       	ldi	r18, 0xFF	; 255
     758:	80 e7       	ldi	r24, 0x70	; 112
     75a:	92 e0       	ldi	r25, 0x02	; 2
     75c:	21 50       	subi	r18, 0x01	; 1
     75e:	80 40       	sbci	r24, 0x00	; 0
     760:	90 40       	sbci	r25, 0x00	; 0
     762:	e1 f7       	brne	.-8      	; 0x75c <move_hero+0x246>
     764:	00 c0       	rjmp	.+0      	; 0x766 <move_hero+0x250>
     766:	00 00       	nop
     768:	80 e0       	ldi	r24, 0x00	; 0
     76a:	90 e0       	ldi	r25, 0x00	; 0
     76c:	a0 e8       	ldi	r26, 0x80	; 128
     76e:	bf e3       	ldi	r27, 0x3F	; 63
     770:	8d 87       	std	Y+13, r24	; 0x0d
     772:	9e 87       	std	Y+14, r25	; 0x0e
     774:	af 87       	std	Y+15, r26	; 0x0f
		_delay_ms(100);
		hero->dx = 1;
     776:	b8 8b       	std	Y+16, r27	; 0x10
     778:	19 8a       	std	Y+17, r1	; 0x11
     77a:	1a 8a       	std	Y+18, r1	; 0x12
     77c:	1b 8a       	std	Y+19, r1	; 0x13
     77e:	1c 8a       	std	Y+20, r1	; 0x14
     780:	81 e0       	ldi	r24, 0x01	; 1
     782:	90 e0       	ldi	r25, 0x00	; 0
     784:	90 93 03 01 	sts	0x0103, r25
		hero->dy = 0;
     788:	80 93 02 01 	sts	0x0102, r24
     78c:	10 92 4b 01 	sts	0x014B, r1
		px = 1;
     790:	10 92 4a 01 	sts	0x014A, r1
     794:	20 e0       	ldi	r18, 0x00	; 0
     796:	30 e0       	ldi	r19, 0x00	; 0
     798:	40 e8       	ldi	r20, 0x80	; 128
		py = 0;
     79a:	5f eb       	ldi	r21, 0xBF	; 191
     79c:	69 89       	ldd	r22, Y+17	; 0x11
     79e:	7a 89       	ldd	r23, Y+18	; 0x12
     7a0:	8b 89       	ldd	r24, Y+19	; 0x13
	}
	if ( ( hero->dy == -1 ) && ( pressed ( SW0 ) )) { // Left Button, turn left, left
     7a2:	9c 89       	ldd	r25, Y+20	; 0x14
     7a4:	7e d2       	rcall	.+1276   	; 0xca2 <__cmpsf2>
     7a6:	81 11       	cpse	r24, r1
     7a8:	21 c0       	rjmp	.+66     	; 0x7ec <move_hero+0x2d6>
     7aa:	18 9b       	sbis	0x03, 0	; 3
     7ac:	1f c0       	rjmp	.+62     	; 0x7ec <move_hero+0x2d6>
     7ae:	2f ef       	ldi	r18, 0xFF	; 255
     7b0:	80 e7       	ldi	r24, 0x70	; 112
     7b2:	92 e0       	ldi	r25, 0x02	; 2
     7b4:	21 50       	subi	r18, 0x01	; 1
     7b6:	80 40       	sbci	r24, 0x00	; 0
     7b8:	90 40       	sbci	r25, 0x00	; 0
     7ba:	e1 f7       	brne	.-8      	; 0x7b4 <move_hero+0x29e>
     7bc:	00 c0       	rjmp	.+0      	; 0x7be <move_hero+0x2a8>
     7be:	00 00       	nop
     7c0:	80 e0       	ldi	r24, 0x00	; 0
     7c2:	90 e0       	ldi	r25, 0x00	; 0
     7c4:	a0 e8       	ldi	r26, 0x80	; 128
     7c6:	bf eb       	ldi	r27, 0xBF	; 191
     7c8:	8d 87       	std	Y+13, r24	; 0x0d
     7ca:	9e 87       	std	Y+14, r25	; 0x0e
     7cc:	af 87       	std	Y+15, r26	; 0x0f
     7ce:	b8 8b       	std	Y+16, r27	; 0x10
		_delay_ms(100);
		hero->dx = -1;
     7d0:	19 8a       	std	Y+17, r1	; 0x11
     7d2:	1a 8a       	std	Y+18, r1	; 0x12
     7d4:	1b 8a       	std	Y+19, r1	; 0x13
     7d6:	1c 8a       	std	Y+20, r1	; 0x14
     7d8:	8f ef       	ldi	r24, 0xFF	; 255
     7da:	9f ef       	ldi	r25, 0xFF	; 255
     7dc:	90 93 03 01 	sts	0x0103, r25
		hero->dy = 0;
     7e0:	80 93 02 01 	sts	0x0102, r24
     7e4:	10 92 4b 01 	sts	0x014B, r1
		px = -1;
     7e8:	10 92 4a 01 	sts	0x014A, r1
     7ec:	2d 85       	ldd	r18, Y+13	; 0x0d
     7ee:	3e 85       	ldd	r19, Y+14	; 0x0e
     7f0:	4f 85       	ldd	r20, Y+15	; 0x0f
     7f2:	58 89       	ldd	r21, Y+16	; 0x10
		py = 0;
     7f4:	68 81       	ld	r22, Y
     7f6:	79 81       	ldd	r23, Y+1	; 0x01
     7f8:	8a 81       	ldd	r24, Y+2	; 0x02
     7fa:	9b 81       	ldd	r25, Y+3	; 0x03
	}

	hero->x += hero->dx;
     7fc:	ee d1       	rcall	.+988    	; 0xbda <__addsf3>
     7fe:	5b 01       	movw	r10, r22
     800:	6c 01       	movw	r12, r24
     802:	86 2f       	mov	r24, r22
     804:	9b 2d       	mov	r25, r11
     806:	ac 2d       	mov	r26, r12
     808:	bd 2d       	mov	r27, r13
     80a:	88 83       	st	Y, r24
     80c:	99 83       	std	Y+1, r25	; 0x01
     80e:	aa 83       	std	Y+2, r26	; 0x02
     810:	bb 83       	std	Y+3, r27	; 0x03
     812:	29 89       	ldd	r18, Y+17	; 0x11
     814:	3a 89       	ldd	r19, Y+18	; 0x12
     816:	4b 89       	ldd	r20, Y+19	; 0x13
     818:	5c 89       	ldd	r21, Y+20	; 0x14
     81a:	6c 81       	ldd	r22, Y+4	; 0x04
     81c:	7d 81       	ldd	r23, Y+5	; 0x05
     81e:	8e 81       	ldd	r24, Y+6	; 0x06
     820:	9f 81       	ldd	r25, Y+7	; 0x07
     822:	db d1       	rcall	.+950    	; 0xbda <__addsf3>
	hero->y += hero->dy;
     824:	7b 01       	movw	r14, r22
     826:	8c 01       	movw	r16, r24
     828:	98 2f       	mov	r25, r24
     82a:	4e 2d       	mov	r20, r14
     82c:	5f 2d       	mov	r21, r15
     82e:	69 2f       	mov	r22, r25
     830:	71 2f       	mov	r23, r17
     832:	4c 83       	std	Y+4, r20	; 0x04
     834:	5d 83       	std	Y+5, r21	; 0x05
     836:	6e 83       	std	Y+6, r22	; 0x06
     838:	7f 83       	std	Y+7, r23	; 0x07
     83a:	88 85       	ldd	r24, Y+8	; 0x08
     83c:	63 e5       	ldi	r22, 0x53	; 83
     83e:	70 e0       	ldi	r23, 0x00	; 0
     840:	68 1b       	sub	r22, r24
     842:	71 09       	sbc	r23, r1
     844:	88 27       	eor	r24, r24
     846:	77 fd       	sbrc	r23, 7
     848:	80 95       	com	r24
     84a:	98 2f       	mov	r25, r24
     84c:	30 d2       	rcall	.+1120   	; 0xcae <__floatsisf>

	if ( hero->x >= (LCD_X - 1) - hero->width || hero->x < 2 ) {
     84e:	9b 01       	movw	r18, r22
     850:	ac 01       	movw	r20, r24
     852:	6a 2d       	mov	r22, r10
     854:	7b 2d       	mov	r23, r11
     856:	8c 2d       	mov	r24, r12
     858:	9d 2d       	mov	r25, r13
     85a:	d9 d2       	rcall	.+1458   	; 0xe0e <__gesf2>
     85c:	87 ff       	sbrs	r24, 7
     85e:	0b c0       	rjmp	.+22     	; 0x876 <move_hero+0x360>
     860:	20 e0       	ldi	r18, 0x00	; 0
     862:	30 e0       	ldi	r19, 0x00	; 0
     864:	40 e0       	ldi	r20, 0x00	; 0
     866:	50 e4       	ldi	r21, 0x40	; 64
     868:	6a 2d       	mov	r22, r10
     86a:	7b 2d       	mov	r23, r11
     86c:	8c 2d       	mov	r24, r12
     86e:	9d 2d       	mov	r25, r13
     870:	18 d2       	rcall	.+1072   	; 0xca2 <__cmpsf2>
     872:	87 ff       	sbrs	r24, 7
     874:	04 c0       	rjmp	.+8      	; 0x87e <move_hero+0x368>
     876:	1d 86       	std	Y+13, r1	; 0x0d
     878:	1e 86       	std	Y+14, r1	; 0x0e
     87a:	1f 86       	std	Y+15, r1	; 0x0f
     87c:	18 8a       	std	Y+16, r1	; 0x10
     87e:	89 85       	ldd	r24, Y+9	; 0x09
     880:	6f e2       	ldi	r22, 0x2F	; 47
     882:	70 e0       	ldi	r23, 0x00	; 0
     884:	68 1b       	sub	r22, r24
     886:	71 09       	sbc	r23, r1
     888:	88 27       	eor	r24, r24
     88a:	77 fd       	sbrc	r23, 7
     88c:	80 95       	com	r24
     88e:	98 2f       	mov	r25, r24
		hero->dx = 0;
     890:	0e d2       	rcall	.+1052   	; 0xcae <__floatsisf>
     892:	9b 01       	movw	r18, r22
     894:	ac 01       	movw	r20, r24
     896:	6e 2d       	mov	r22, r14
	}

	if ( hero->y >= (LCD_Y - 1) - hero->height || hero->y < 14 ) {
     898:	7f 2d       	mov	r23, r15
     89a:	80 2f       	mov	r24, r16
     89c:	91 2f       	mov	r25, r17
     89e:	b7 d2       	rcall	.+1390   	; 0xe0e <__gesf2>
     8a0:	87 ff       	sbrs	r24, 7
     8a2:	0b c0       	rjmp	.+22     	; 0x8ba <move_hero+0x3a4>
     8a4:	20 e0       	ldi	r18, 0x00	; 0
     8a6:	30 e0       	ldi	r19, 0x00	; 0
     8a8:	40 e6       	ldi	r20, 0x60	; 96
     8aa:	51 e4       	ldi	r21, 0x41	; 65
     8ac:	6e 2d       	mov	r22, r14
     8ae:	7f 2d       	mov	r23, r15
     8b0:	80 2f       	mov	r24, r16
     8b2:	91 2f       	mov	r25, r17
     8b4:	f6 d1       	rcall	.+1004   	; 0xca2 <__cmpsf2>
     8b6:	87 ff       	sbrs	r24, 7
     8b8:	04 c0       	rjmp	.+8      	; 0x8c2 <move_hero+0x3ac>
     8ba:	19 8a       	std	Y+17, r1	; 0x11
     8bc:	1a 8a       	std	Y+18, r1	; 0x12
     8be:	1b 8a       	std	Y+19, r1	; 0x13
     8c0:	1c 8a       	std	Y+20, r1	; 0x14
     8c2:	df 91       	pop	r29
     8c4:	cf 91       	pop	r28
     8c6:	1f 91       	pop	r17
     8c8:	0f 91       	pop	r16
     8ca:	ff 90       	pop	r15
     8cc:	ef 90       	pop	r14
     8ce:	df 90       	pop	r13
     8d0:	cf 90       	pop	r12
     8d2:	bf 90       	pop	r11
     8d4:	af 90       	pop	r10
     8d6:	08 95       	ret

000008d8 <start_hero>:
     8d8:	cf 93       	push	r28
		hero->dy = 0;
     8da:	df 93       	push	r29
     8dc:	cd b7       	in	r28, 0x3d	; 61
     8de:	de b7       	in	r29, 0x3e	; 62
     8e0:	68 97       	sbiw	r28, 0x18	; 24
	}

}
     8e2:	0f b6       	in	r0, 0x3f	; 63
     8e4:	f8 94       	cli
     8e6:	de bf       	out	0x3e, r29	; 62
     8e8:	0f be       	out	0x3f, r0	; 63
     8ea:	cd bf       	out	0x3d, r28	; 61
     8ec:	80 ee       	ldi	r24, 0xE0	; 224
     8ee:	8e 8b       	std	Y+22, r24	; 0x16
     8f0:	90 e4       	ldi	r25, 0x40	; 64
     8f2:	9f 8b       	std	Y+23, r25	; 0x17
     8f4:	88 8f       	std	Y+24, r24	; 0x18
     8f6:	86 e1       	ldi	r24, 0x16	; 22
	const int hero_width = 3; // Maybe 4
	const int hero_height = 3;

	Sprite hero;

	init_sprite( &hero, 38,28,hero_width,hero_height, bitmap_hero );
     8f8:	e8 2e       	mov	r14, r24
     8fa:	f1 2c       	mov	r15, r1
     8fc:	ec 0e       	add	r14, r28
     8fe:	fd 1e       	adc	r15, r29
     900:	03 e0       	ldi	r16, 0x03	; 3
     902:	23 e0       	ldi	r18, 0x03	; 3
     904:	4c e1       	ldi	r20, 0x1C	; 28
     906:	66 e2       	ldi	r22, 0x26	; 38
     908:	cc 24       	eor	r12, r12
     90a:	c3 94       	inc	r12
     90c:	d1 2c       	mov	r13, r1
     90e:	cc 0e       	add	r12, r28
     910:	dd 1e       	adc	r13, r29
     912:	c6 01       	movw	r24, r12
     914:	71 d5       	rcall	.+2786   	; 0x13f8 <init_sprite>
     916:	40 e0       	ldi	r20, 0x00	; 0
	hero.dx = 1;
     918:	50 e0       	ldi	r21, 0x00	; 0
     91a:	60 e8       	ldi	r22, 0x80	; 128
     91c:	7f e3       	ldi	r23, 0x3F	; 63
     91e:	4e 87       	std	Y+14, r20	; 0x0e
     920:	5f 87       	std	Y+15, r21	; 0x0f
     922:	68 8b       	std	Y+16, r22	; 0x10
     924:	79 8b       	std	Y+17, r23	; 0x11
     926:	1a 8a       	std	Y+18, r1	; 0x12
	hero.dy = 0;
     928:	1b 8a       	std	Y+19, r1	; 0x13
     92a:	1c 8a       	std	Y+20, r1	; 0x14
     92c:	1d 8a       	std	Y+21, r1	; 0x15
     92e:	c6 01       	movw	r24, r12

	draw_sprite( &hero );
     930:	93 d5       	rcall	.+2854   	; 0x1458 <draw_sprite>
     932:	00 e0       	ldi	r16, 0x00	; 0
     934:	10 e0       	ldi	r17, 0x00	; 0
	int zombie_update = 0;
	int score_update = 0;
     936:	e1 2c       	mov	r14, r1
     938:	f1 2c       	mov	r15, r1
	init_sprite( &hero, 38,28,hero_width,hero_height, bitmap_hero );
	hero.dx = 1;
	hero.dy = 0;

	draw_sprite( &hero );
	int zombie_update = 0;
     93a:	7e d2       	rcall	.+1276   	; 0xe38 <clear>
     93c:	49 dd       	rcall	.-1390   	; 0x3d0 <screen_lines>
	int score_update = 0;
	while (1) {
		clear();
     93e:	99 dd       	rcall	.-1230   	; 0x472 <lives_setup>
     940:	bc dd       	rcall	.-1160   	; 0x4ba <score_setup>
		screen_lines();
     942:	c6 01       	movw	r24, r12
     944:	e8 dd       	rcall	.-1072   	; 0x516 <move_hero>
    	lives_setup();
     946:	c6 01       	movw	r24, r12
     948:	87 d5       	rcall	.+2830   	; 0x1458 <draw_sprite>
    	score_setup();
     94a:	2a e0       	ldi	r18, 0x0A	; 10
     94c:	e2 16       	cp	r14, r18

//    	start_pit();
//    	sword_setup();
//    	grenades_setup();

		move_hero( &hero );
     94e:	f1 04       	cpc	r15, r1
     950:	19 f4       	brne	.+6      	; 0x958 <start_hero+0x80>
     952:	3c d1       	rcall	.+632    	; 0xbcc <new_zombies_pos>
		draw_sprite (&hero );
     954:	e1 2c       	mov	r14, r1
     956:	f1 2c       	mov	r15, r1
     958:	02 33       	cpi	r16, 0x32	; 50
		if ( zombie_update == 10 ) {
     95a:	11 05       	cpc	r17, r1
     95c:	19 f4       	brne	.+6      	; 0x964 <start_hero+0x8c>
     95e:	d1 dd       	rcall	.-1118   	; 0x502 <update_score_time>
     960:	00 e0       	ldi	r16, 0x00	; 0
			new_zombies_pos();
     962:	10 e0       	ldi	r17, 0x00	; 0
     964:	58 d2       	rcall	.+1200   	; 0xe16 <refresh>
//			start_zombies();
			zombie_update = 0;
     966:	8f ef       	ldi	r24, 0xFF	; 255
     968:	e8 1a       	sub	r14, r24
		}
		if ( score_update == 50 ) {
     96a:	f8 0a       	sbc	r15, r24
     96c:	0f 5f       	subi	r16, 0xFF	; 255
     96e:	1f 4f       	sbci	r17, 0xFF	; 255
			update_score_time();
     970:	9f ef       	ldi	r25, 0xFF	; 255
     972:	20 e7       	ldi	r18, 0x70	; 112
			score_update = 0;
     974:	82 e0       	ldi	r24, 0x02	; 2
     976:	91 50       	subi	r25, 0x01	; 1
		}
		refresh();
     978:	20 40       	sbci	r18, 0x00	; 0
     97a:	80 40       	sbci	r24, 0x00	; 0
		zombie_update++;
     97c:	e1 f7       	brne	.-8      	; 0x976 <start_hero+0x9e>
     97e:	00 c0       	rjmp	.+0      	; 0x980 <start_hero+0xa8>
     980:	00 00       	nop
		score_update++;
     982:	db cf       	rjmp	.-74     	; 0x93a <start_hero+0x62>

00000984 <section_selector>:
void new_zombies_pos() {
	update_zombies ( zombies );
	draw_zombies ( zombies );
}

void section_selector( int picker ) {
     984:	cf 93       	push	r28
     986:	df 93       	push	r29
	if ( picker == 1 ) { // Left Section
     988:	81 30       	cpi	r24, 0x01	; 1
     98a:	91 05       	cpc	r25, r1
     98c:	69 f4       	brne	.+26     	; 0x9a8 <section_selector+0x24>
		randx = (rand()%25)+1; // 1 - 28
     98e:	a3 d7       	rcall	.+3910   	; 0x18d6 <rand>
     990:	69 e1       	ldi	r22, 0x19	; 25
     992:	70 e0       	ldi	r23, 0x00	; 0
     994:	36 d6       	rcall	.+3180   	; 0x1602 <__divmodhi4>
     996:	01 96       	adiw	r24, 0x01	; 1
     998:	90 93 6d 01 	sts	0x016D, r25
     99c:	80 93 6c 01 	sts	0x016C, r24
     9a0:	9a d7       	rcall	.+3892   	; 0x18d6 <rand>
     9a2:	6e e1       	ldi	r22, 0x1E	; 30
		randy = (rand()%30)+14; // 14 - 47
     9a4:	70 e0       	ldi	r23, 0x00	; 0
     9a6:	0e c0       	rjmp	.+28     	; 0x9c4 <section_selector+0x40>
     9a8:	02 97       	sbiw	r24, 0x02	; 2
     9aa:	91 f4       	brne	.+36     	; 0x9d0 <section_selector+0x4c>
     9ac:	94 d7       	rcall	.+3880   	; 0x18d6 <rand>
	}
	else if ( picker == 2 ) { // Right Section
     9ae:	ce e1       	ldi	r28, 0x1E	; 30
     9b0:	d0 e0       	ldi	r29, 0x00	; 0
		randx = (rand()%30)+51; // 50 - 81
     9b2:	be 01       	movw	r22, r28
     9b4:	26 d6       	rcall	.+3148   	; 0x1602 <__divmodhi4>
     9b6:	c3 96       	adiw	r24, 0x33	; 51
     9b8:	90 93 6d 01 	sts	0x016D, r25
     9bc:	80 93 6c 01 	sts	0x016C, r24
     9c0:	8a d7       	rcall	.+3860   	; 0x18d6 <rand>
     9c2:	be 01       	movw	r22, r28
     9c4:	1e d6       	rcall	.+3132   	; 0x1602 <__divmodhi4>
     9c6:	0e 96       	adiw	r24, 0x0e	; 14
     9c8:	90 93 6b 01 	sts	0x016B, r25
		randy = (rand()%30)+14; // 14 - 47
     9cc:	80 93 6a 01 	sts	0x016A, r24
     9d0:	df 91       	pop	r29
     9d2:	cf 91       	pop	r28
     9d4:	08 95       	ret

000009d6 <setup_zombies>:
     9d6:	8f 92       	push	r8
     9d8:	9f 92       	push	r9
     9da:	af 92       	push	r10
     9dc:	bf 92       	push	r11
	}
}
     9de:	cf 92       	push	r12
     9e0:	df 92       	push	r13
     9e2:	ef 92       	push	r14
void setup_zombies(
	Sprite zombies[],
	byte *zbitmaps[],
	byte width[],
	byte height[]
	) {
     9e4:	ff 92       	push	r15
     9e6:	0f 93       	push	r16
     9e8:	cf 93       	push	r28
     9ea:	df 93       	push	r29
     9ec:	6c 01       	movw	r12, r24
     9ee:	4b 01       	movw	r8, r22
     9f0:	c0 e0       	ldi	r28, 0x00	; 0
     9f2:	d0 e0       	ldi	r29, 0x00	; 0
	for ( int i = 0; i < 8; i++ ) {
		Sprite * sprite = &zombies[i];

		byte * bitmap = zbitmaps[ i % 1];

		int picker = 1 + rand() % 2; // 1 - 70
     9f4:	82 e0       	ldi	r24, 0x02	; 2
     9f6:	a8 2e       	mov	r10, r24
     9f8:	b1 2c       	mov	r11, r1
	) {

	for ( int i = 0; i < 8; i++ ) {
		Sprite * sprite = &zombies[i];

		byte * bitmap = zbitmaps[ i % 1];
     9fa:	f4 01       	movw	r30, r8
     9fc:	e0 80       	ld	r14, Z
     9fe:	f1 80       	ldd	r15, Z+1	; 0x01

		int picker = 1 + rand() % 2; // 1 - 70
     a00:	6a d7       	rcall	.+3796   	; 0x18d6 <rand>
     a02:	b5 01       	movw	r22, r10
     a04:	fe d5       	rcall	.+3068   	; 0x1602 <__divmodhi4>
     a06:	01 96       	adiw	r24, 0x01	; 1
     a08:	bd df       	rcall	.-134    	; 0x984 <section_selector>
		section_selector ( picker );
     a0a:	03 e0       	ldi	r16, 0x03	; 3
     a0c:	24 e0       	ldi	r18, 0x04	; 4
     a0e:	40 91 6a 01 	lds	r20, 0x016A

		init_sprite ( sprite, randx, randy, 4, 3, bitmap );
     a12:	60 91 6c 01 	lds	r22, 0x016C
     a16:	c6 01       	movw	r24, r12
     a18:	8c 0f       	add	r24, r28
     a1a:	9d 1f       	adc	r25, r29
     a1c:	ed d4       	rcall	.+2522   	; 0x13f8 <init_sprite>
     a1e:	65 96       	adiw	r28, 0x15	; 21
     a20:	c8 3a       	cpi	r28, 0xA8	; 168
     a22:	d1 05       	cpc	r29, r1
     a24:	51 f7       	brne	.-44     	; 0x9fa <setup_zombies+0x24>
     a26:	df 91       	pop	r29
	byte *zbitmaps[],
	byte width[],
	byte height[]
	) {

	for ( int i = 0; i < 8; i++ ) {
     a28:	cf 91       	pop	r28
     a2a:	0f 91       	pop	r16
     a2c:	ff 90       	pop	r15

		init_sprite ( sprite, randx, randy, 4, 3, bitmap );


	}
}
     a2e:	ef 90       	pop	r14
     a30:	df 90       	pop	r13
     a32:	cf 90       	pop	r12
     a34:	bf 90       	pop	r11
     a36:	af 90       	pop	r10
     a38:	9f 90       	pop	r9
     a3a:	8f 90       	pop	r8
     a3c:	08 95       	ret

00000a3e <draw_zombies>:
     a3e:	0f 93       	push	r16
     a40:	1f 93       	push	r17
     a42:	cf 93       	push	r28
     a44:	df 93       	push	r29
		randx = (rand()%30)+51; // 50 - 81
		randy = (rand()%30)+14; // 14 - 47
	}
}

void draw_zombies ( Sprite * sprites ) {
     a46:	8c 01       	movw	r16, r24
     a48:	c0 e0       	ldi	r28, 0x00	; 0
     a4a:	d0 e0       	ldi	r29, 0x00	; 0
	for ( int i = 0; i < zombie_count; i++ ) {
		draw_sprite ( sprites + i );
     a4c:	c8 01       	movw	r24, r16
     a4e:	8c 0f       	add	r24, r28
     a50:	9d 1f       	adc	r25, r29
     a52:	02 d5       	rcall	.+2564   	; 0x1458 <draw_sprite>
     a54:	65 96       	adiw	r28, 0x15	; 21
     a56:	c8 3a       	cpi	r28, 0xA8	; 168
		randy = (rand()%30)+14; // 14 - 47
	}
}

void draw_zombies ( Sprite * sprites ) {
	for ( int i = 0; i < zombie_count; i++ ) {
     a58:	d1 05       	cpc	r29, r1
     a5a:	c1 f7       	brne	.-16     	; 0xa4c <draw_zombies+0xe>
     a5c:	df 91       	pop	r29
		draw_sprite ( sprites + i );
	}
}
     a5e:	cf 91       	pop	r28
     a60:	1f 91       	pop	r17
     a62:	0f 91       	pop	r16
     a64:	08 95       	ret

00000a66 <start_zombies>:
     a66:	cf 93       	push	r28

#define zombie_count (8)

Sprite zombies[zombie_count];

void start_zombies() {
     a68:	df 93       	push	r29
     a6a:	cd b7       	in	r28, 0x3d	; 61
     a6c:	de b7       	in	r29, 0x3e	; 62
     a6e:	cf 5a       	subi	r28, 0xAF	; 175
     a70:	d1 09       	sbc	r29, r1
     a72:	0f b6       	in	r0, 0x3f	; 63
     a74:	f8 94       	cli
     a76:	de bf       	out	0x3e, r29	; 62
     a78:	0f be       	out	0x3f, r0	; 63
     a7a:	cd bf       	out	0x3d, r28	; 61
	byte bitmap1[] = {
     a7c:	fe 01       	movw	r30, r28
     a7e:	e7 55       	subi	r30, 0x57	; 87
     a80:	ff 4f       	sbci	r31, 0xFF	; 255
     a82:	80 ee       	ldi	r24, 0xE0	; 224
     a84:	80 83       	st	Z, r24
     a86:	80 e4       	ldi	r24, 0x40	; 64
     a88:	81 83       	std	Z+1, r24	; 0x01
     a8a:	80 ea       	ldi	r24, 0xA0	; 160
     a8c:	82 83       	std	Z+2, r24	; 0x02
		BYTE( 11100000 ),
		BYTE( 01000000 ),
		BYTE( 10100000 )
	};

	byte *zbitmaps[1] = { bitmap1 };
     a8e:	c4 55       	subi	r28, 0x54	; 84
     a90:	df 4f       	sbci	r29, 0xFF	; 255
     a92:	f9 83       	std	Y+1, r31	; 0x01
     a94:	e8 83       	st	Y, r30
     a96:	cc 5a       	subi	r28, 0xAC	; 172
     a98:	d0 40       	sbci	r29, 0x00	; 0
	byte width[] = {4};
     a9a:	84 e0       	ldi	r24, 0x04	; 4
     a9c:	c1 55       	subi	r28, 0x51	; 81
     a9e:	df 4f       	sbci	r29, 0xFF	; 255
     aa0:	88 83       	st	Y, r24
     aa2:	cf 5a       	subi	r28, 0xAF	; 175
     aa4:	d0 40       	sbci	r29, 0x00	; 0
	byte height[] = {3};
     aa6:	83 e0       	ldi	r24, 0x03	; 3
     aa8:	c2 55       	subi	r28, 0x52	; 82
     aaa:	df 4f       	sbci	r29, 0xFF	; 255
     aac:	88 83       	st	Y, r24
     aae:	ce 5a       	subi	r28, 0xAE	; 174
     ab0:	d0 40       	sbci	r29, 0x00	; 0

	Sprite zombies[zombie_count];


	setup_zombies ( zombies, zbitmaps, width, height );
     ab2:	9e 01       	movw	r18, r28
     ab4:	22 55       	subi	r18, 0x52	; 82
     ab6:	3f 4f       	sbci	r19, 0xFF	; 255
     ab8:	ae 01       	movw	r20, r28
     aba:	41 55       	subi	r20, 0x51	; 81
     abc:	5f 4f       	sbci	r21, 0xFF	; 255
     abe:	be 01       	movw	r22, r28
     ac0:	64 55       	subi	r22, 0x54	; 84
     ac2:	7f 4f       	sbci	r23, 0xFF	; 255
     ac4:	ce 01       	movw	r24, r28
     ac6:	01 96       	adiw	r24, 0x01	; 1
     ac8:	86 df       	rcall	.-244    	; 0x9d6 <setup_zombies>
     aca:	ce 01       	movw	r24, r28

	draw_zombies ( zombies );
     acc:	01 96       	adiw	r24, 0x01	; 1
     ace:	b7 df       	rcall	.-146    	; 0xa3e <draw_zombies>
     ad0:	c1 55       	subi	r28, 0x51	; 81
     ad2:	df 4f       	sbci	r29, 0xFF	; 255

}
     ad4:	0f b6       	in	r0, 0x3f	; 63
     ad6:	f8 94       	cli
     ad8:	de bf       	out	0x3e, r29	; 62
     ada:	0f be       	out	0x3f, r0	; 63
     adc:	cd bf       	out	0x3d, r28	; 61
     ade:	df 91       	pop	r29
     ae0:	cf 91       	pop	r28
     ae2:	08 95       	ret

00000ae4 <update_one_zombie>:
     ae4:	8f 92       	push	r8
     ae6:	9f 92       	push	r9
		update_one_zombie( zombies + 1);

	}
}

void update_one_zombie ( Sprite * zombie ) {
     ae8:	af 92       	push	r10
     aea:	bf 92       	push	r11
     aec:	cf 92       	push	r12
     aee:	df 92       	push	r13
     af0:	ef 92       	push	r14
     af2:	ff 92       	push	r15
     af4:	cf 93       	push	r28
     af6:	df 93       	push	r29
     af8:	ec 01       	movw	r28, r24
	zombie->x = zombie->dx;
     afa:	8d 84       	ldd	r8, Y+13	; 0x0d
     afc:	9e 84       	ldd	r9, Y+14	; 0x0e
     afe:	af 84       	ldd	r10, Y+15	; 0x0f
     b00:	b8 88       	ldd	r11, Y+16	; 0x10
     b02:	88 82       	st	Y, r8
     b04:	99 82       	std	Y+1, r9	; 0x01
     b06:	aa 82       	std	Y+2, r10	; 0x02
     b08:	bb 82       	std	Y+3, r11	; 0x03
	zombie->y = zombie->dy;
     b0a:	c9 88       	ldd	r12, Y+17	; 0x11
     b0c:	da 88       	ldd	r13, Y+18	; 0x12
     b0e:	eb 88       	ldd	r14, Y+19	; 0x13
     b10:	fc 88       	ldd	r15, Y+20	; 0x14
     b12:	cc 82       	std	Y+4, r12	; 0x04
     b14:	dd 82       	std	Y+5, r13	; 0x05
     b16:	ee 82       	std	Y+6, r14	; 0x06
     b18:	ff 82       	std	Y+7, r15	; 0x07

	if ( zombie->x >= (LCD_X - 1) - zombie->width || zombie->x < 1 ) {
     b1a:	88 85       	ldd	r24, Y+8	; 0x08
     b1c:	63 e5       	ldi	r22, 0x53	; 83
     b1e:	70 e0       	ldi	r23, 0x00	; 0
     b20:	68 1b       	sub	r22, r24
     b22:	71 09       	sbc	r23, r1
     b24:	88 27       	eor	r24, r24
     b26:	77 fd       	sbrc	r23, 7
     b28:	80 95       	com	r24
     b2a:	98 2f       	mov	r25, r24
     b2c:	c0 d0       	rcall	.+384    	; 0xcae <__floatsisf>
     b2e:	9b 01       	movw	r18, r22
     b30:	ac 01       	movw	r20, r24
     b32:	c5 01       	movw	r24, r10
     b34:	b4 01       	movw	r22, r8
     b36:	6b d1       	rcall	.+726    	; 0xe0e <__gesf2>
     b38:	87 ff       	sbrs	r24, 7
     b3a:	09 c0       	rjmp	.+18     	; 0xb4e <__stack+0x4f>
     b3c:	20 e0       	ldi	r18, 0x00	; 0
     b3e:	30 e0       	ldi	r19, 0x00	; 0
     b40:	40 e8       	ldi	r20, 0x80	; 128
     b42:	5f e3       	ldi	r21, 0x3F	; 63
     b44:	c5 01       	movw	r24, r10
     b46:	b4 01       	movw	r22, r8
     b48:	ac d0       	rcall	.+344    	; 0xca2 <__cmpsf2>
     b4a:	87 ff       	sbrs	r24, 7
     b4c:	04 c0       	rjmp	.+8      	; 0xb56 <__stack+0x57>
     b4e:	1d 86       	std	Y+13, r1	; 0x0d
     b50:	1e 86       	std	Y+14, r1	; 0x0e
     b52:	1f 86       	std	Y+15, r1	; 0x0f
		zombie->dx = 0;
     b54:	18 8a       	std	Y+16, r1	; 0x10
     b56:	89 85       	ldd	r24, Y+9	; 0x09
     b58:	6f e2       	ldi	r22, 0x2F	; 47
     b5a:	70 e0       	ldi	r23, 0x00	; 0
	}

	if ( zombie->y >= (LCD_Y - 1) - zombie->height || zombie->y < 14 ) {
     b5c:	68 1b       	sub	r22, r24
     b5e:	71 09       	sbc	r23, r1
     b60:	88 27       	eor	r24, r24
     b62:	77 fd       	sbrc	r23, 7
     b64:	80 95       	com	r24
     b66:	98 2f       	mov	r25, r24
     b68:	a2 d0       	rcall	.+324    	; 0xcae <__floatsisf>
     b6a:	9b 01       	movw	r18, r22
     b6c:	ac 01       	movw	r20, r24
     b6e:	c7 01       	movw	r24, r14
     b70:	b6 01       	movw	r22, r12
     b72:	4d d1       	rcall	.+666    	; 0xe0e <__gesf2>
     b74:	87 ff       	sbrs	r24, 7
     b76:	09 c0       	rjmp	.+18     	; 0xb8a <__stack+0x8b>
     b78:	20 e0       	ldi	r18, 0x00	; 0
     b7a:	30 e0       	ldi	r19, 0x00	; 0
     b7c:	40 e6       	ldi	r20, 0x60	; 96
     b7e:	51 e4       	ldi	r21, 0x41	; 65
     b80:	c7 01       	movw	r24, r14
     b82:	b6 01       	movw	r22, r12
     b84:	8e d0       	rcall	.+284    	; 0xca2 <__cmpsf2>
     b86:	87 ff       	sbrs	r24, 7
     b88:	04 c0       	rjmp	.+8      	; 0xb92 <__stack+0x93>
     b8a:	19 8a       	std	Y+17, r1	; 0x11
     b8c:	1a 8a       	std	Y+18, r1	; 0x12
     b8e:	1b 8a       	std	Y+19, r1	; 0x13
     b90:	1c 8a       	std	Y+20, r1	; 0x14
     b92:	df 91       	pop	r29
     b94:	cf 91       	pop	r28
		zombie->dy = 0;
     b96:	ff 90       	pop	r15
     b98:	ef 90       	pop	r14
     b9a:	df 90       	pop	r13
     b9c:	cf 90       	pop	r12
	}
}
     b9e:	bf 90       	pop	r11
     ba0:	af 90       	pop	r10
     ba2:	9f 90       	pop	r9
     ba4:	8f 90       	pop	r8
     ba6:	08 95       	ret

00000ba8 <update_zombies>:
     ba8:	0f 93       	push	r16
     baa:	1f 93       	push	r17
     bac:	cf 93       	push	r28
     bae:	df 93       	push	r29
     bb0:	c8 e0       	ldi	r28, 0x08	; 8
     bb2:	d0 e0       	ldi	r29, 0x00	; 0
}

void update_zombies ( Sprite * zombies ) {
	// pick a direction to move in
	for ( int i = 0; i < zombie_count; i++ ) {
		update_one_zombie( zombies + 1);
     bb4:	8c 01       	movw	r16, r24
     bb6:	0b 5e       	subi	r16, 0xEB	; 235
     bb8:	1f 4f       	sbci	r17, 0xFF	; 255
     bba:	c8 01       	movw	r24, r16
     bbc:	93 df       	rcall	.-218    	; 0xae4 <update_one_zombie>
     bbe:	21 97       	sbiw	r28, 0x01	; 1
     bc0:	e1 f7       	brne	.-8      	; 0xbba <update_zombies+0x12>
	}
}

void update_zombies ( Sprite * zombies ) {
	// pick a direction to move in
	for ( int i = 0; i < zombie_count; i++ ) {
     bc2:	df 91       	pop	r29
		update_one_zombie( zombies + 1);

	}
}
     bc4:	cf 91       	pop	r28
     bc6:	1f 91       	pop	r17
     bc8:	0f 91       	pop	r16
     bca:	08 95       	ret

00000bcc <new_zombies_pos>:
     bcc:	8e e6       	ldi	r24, 0x6E	; 110


	}
}
void new_zombies_pos() {
	update_zombies ( zombies );
     bce:	91 e0       	ldi	r25, 0x01	; 1
     bd0:	eb df       	rcall	.-42     	; 0xba8 <update_zombies>
     bd2:	8e e6       	ldi	r24, 0x6E	; 110
	draw_zombies ( zombies );
     bd4:	91 e0       	ldi	r25, 0x01	; 1
     bd6:	33 cf       	rjmp	.-410    	; 0xa3e <draw_zombies>

00000bd8 <__subsf3>:
     bd8:	50 58       	subi	r21, 0x80	; 128

00000bda <__addsf3>:
     bda:	bb 27       	eor	r27, r27
     bdc:	aa 27       	eor	r26, r26
     bde:	0e d0       	rcall	.+28     	; 0xbfc <__addsf3x>
     be0:	dc c0       	rjmp	.+440    	; 0xd9a <__fp_round>
     be2:	cd d0       	rcall	.+410    	; 0xd7e <__fp_pscA>
     be4:	30 f0       	brcs	.+12     	; 0xbf2 <__addsf3+0x18>
     be6:	d2 d0       	rcall	.+420    	; 0xd8c <__fp_pscB>
     be8:	20 f0       	brcs	.+8      	; 0xbf2 <__addsf3+0x18>
     bea:	31 f4       	brne	.+12     	; 0xbf8 <__addsf3+0x1e>
     bec:	9f 3f       	cpi	r25, 0xFF	; 255
     bee:	11 f4       	brne	.+4      	; 0xbf4 <__addsf3+0x1a>
     bf0:	1e f4       	brtc	.+6      	; 0xbf8 <__addsf3+0x1e>
     bf2:	c2 c0       	rjmp	.+388    	; 0xd78 <__fp_nan>
     bf4:	0e f4       	brtc	.+2      	; 0xbf8 <__addsf3+0x1e>
     bf6:	e0 95       	com	r30
     bf8:	e7 fb       	bst	r30, 7
     bfa:	b8 c0       	rjmp	.+368    	; 0xd6c <__fp_inf>

00000bfc <__addsf3x>:
     bfc:	e9 2f       	mov	r30, r25
     bfe:	de d0       	rcall	.+444    	; 0xdbc <__fp_split3>
     c00:	80 f3       	brcs	.-32     	; 0xbe2 <__addsf3+0x8>
     c02:	ba 17       	cp	r27, r26
     c04:	62 07       	cpc	r22, r18
     c06:	73 07       	cpc	r23, r19
     c08:	84 07       	cpc	r24, r20
     c0a:	95 07       	cpc	r25, r21
     c0c:	18 f0       	brcs	.+6      	; 0xc14 <__addsf3x+0x18>
     c0e:	71 f4       	brne	.+28     	; 0xc2c <__addsf3x+0x30>
     c10:	9e f5       	brtc	.+102    	; 0xc78 <__addsf3x+0x7c>
     c12:	f6 c0       	rjmp	.+492    	; 0xe00 <__fp_zero>
     c14:	0e f4       	brtc	.+2      	; 0xc18 <__addsf3x+0x1c>
     c16:	e0 95       	com	r30
     c18:	0b 2e       	mov	r0, r27
     c1a:	ba 2f       	mov	r27, r26
     c1c:	a0 2d       	mov	r26, r0
     c1e:	0b 01       	movw	r0, r22
     c20:	b9 01       	movw	r22, r18
     c22:	90 01       	movw	r18, r0
     c24:	0c 01       	movw	r0, r24
     c26:	ca 01       	movw	r24, r20
     c28:	a0 01       	movw	r20, r0
     c2a:	11 24       	eor	r1, r1
     c2c:	ff 27       	eor	r31, r31
     c2e:	59 1b       	sub	r21, r25
     c30:	99 f0       	breq	.+38     	; 0xc58 <__addsf3x+0x5c>
     c32:	59 3f       	cpi	r21, 0xF9	; 249
     c34:	50 f4       	brcc	.+20     	; 0xc4a <__addsf3x+0x4e>
     c36:	50 3e       	cpi	r21, 0xE0	; 224
     c38:	68 f1       	brcs	.+90     	; 0xc94 <__addsf3x+0x98>
     c3a:	1a 16       	cp	r1, r26
     c3c:	f0 40       	sbci	r31, 0x00	; 0
     c3e:	a2 2f       	mov	r26, r18
     c40:	23 2f       	mov	r18, r19
     c42:	34 2f       	mov	r19, r20
     c44:	44 27       	eor	r20, r20
     c46:	58 5f       	subi	r21, 0xF8	; 248
     c48:	f3 cf       	rjmp	.-26     	; 0xc30 <__addsf3x+0x34>
     c4a:	46 95       	lsr	r20
     c4c:	37 95       	ror	r19
     c4e:	27 95       	ror	r18
     c50:	a7 95       	ror	r26
     c52:	f0 40       	sbci	r31, 0x00	; 0
     c54:	53 95       	inc	r21
     c56:	c9 f7       	brne	.-14     	; 0xc4a <__addsf3x+0x4e>
     c58:	7e f4       	brtc	.+30     	; 0xc78 <__addsf3x+0x7c>
     c5a:	1f 16       	cp	r1, r31
     c5c:	ba 0b       	sbc	r27, r26
     c5e:	62 0b       	sbc	r22, r18
     c60:	73 0b       	sbc	r23, r19
     c62:	84 0b       	sbc	r24, r20
     c64:	ba f0       	brmi	.+46     	; 0xc94 <__addsf3x+0x98>
     c66:	91 50       	subi	r25, 0x01	; 1
     c68:	a1 f0       	breq	.+40     	; 0xc92 <__addsf3x+0x96>
     c6a:	ff 0f       	add	r31, r31
     c6c:	bb 1f       	adc	r27, r27
     c6e:	66 1f       	adc	r22, r22
     c70:	77 1f       	adc	r23, r23
     c72:	88 1f       	adc	r24, r24
     c74:	c2 f7       	brpl	.-16     	; 0xc66 <__addsf3x+0x6a>
     c76:	0e c0       	rjmp	.+28     	; 0xc94 <__addsf3x+0x98>
     c78:	ba 0f       	add	r27, r26
     c7a:	62 1f       	adc	r22, r18
     c7c:	73 1f       	adc	r23, r19
     c7e:	84 1f       	adc	r24, r20
     c80:	48 f4       	brcc	.+18     	; 0xc94 <__addsf3x+0x98>
     c82:	87 95       	ror	r24
     c84:	77 95       	ror	r23
     c86:	67 95       	ror	r22
     c88:	b7 95       	ror	r27
     c8a:	f7 95       	ror	r31
     c8c:	9e 3f       	cpi	r25, 0xFE	; 254
     c8e:	08 f0       	brcs	.+2      	; 0xc92 <__addsf3x+0x96>
     c90:	b3 cf       	rjmp	.-154    	; 0xbf8 <__addsf3+0x1e>
     c92:	93 95       	inc	r25
     c94:	88 0f       	add	r24, r24
     c96:	08 f0       	brcs	.+2      	; 0xc9a <__addsf3x+0x9e>
     c98:	99 27       	eor	r25, r25
     c9a:	ee 0f       	add	r30, r30
     c9c:	97 95       	ror	r25
     c9e:	87 95       	ror	r24
     ca0:	08 95       	ret

00000ca2 <__cmpsf2>:
     ca2:	40 d0       	rcall	.+128    	; 0xd24 <__fp_cmp>
     ca4:	08 f4       	brcc	.+2      	; 0xca8 <__cmpsf2+0x6>
     ca6:	81 e0       	ldi	r24, 0x01	; 1
     ca8:	08 95       	ret

00000caa <__floatunsisf>:
     caa:	e8 94       	clt
     cac:	09 c0       	rjmp	.+18     	; 0xcc0 <__floatsisf+0x12>

00000cae <__floatsisf>:
     cae:	97 fb       	bst	r25, 7
     cb0:	3e f4       	brtc	.+14     	; 0xcc0 <__floatsisf+0x12>
     cb2:	90 95       	com	r25
     cb4:	80 95       	com	r24
     cb6:	70 95       	com	r23
     cb8:	61 95       	neg	r22
     cba:	7f 4f       	sbci	r23, 0xFF	; 255
     cbc:	8f 4f       	sbci	r24, 0xFF	; 255
     cbe:	9f 4f       	sbci	r25, 0xFF	; 255
     cc0:	99 23       	and	r25, r25
     cc2:	a9 f0       	breq	.+42     	; 0xcee <__floatsisf+0x40>
     cc4:	f9 2f       	mov	r31, r25
     cc6:	96 e9       	ldi	r25, 0x96	; 150
     cc8:	bb 27       	eor	r27, r27
     cca:	93 95       	inc	r25
     ccc:	f6 95       	lsr	r31
     cce:	87 95       	ror	r24
     cd0:	77 95       	ror	r23
     cd2:	67 95       	ror	r22
     cd4:	b7 95       	ror	r27
     cd6:	f1 11       	cpse	r31, r1
     cd8:	f8 cf       	rjmp	.-16     	; 0xcca <__floatsisf+0x1c>
     cda:	fa f4       	brpl	.+62     	; 0xd1a <__floatsisf+0x6c>
     cdc:	bb 0f       	add	r27, r27
     cde:	11 f4       	brne	.+4      	; 0xce4 <__floatsisf+0x36>
     ce0:	60 ff       	sbrs	r22, 0
     ce2:	1b c0       	rjmp	.+54     	; 0xd1a <__floatsisf+0x6c>
     ce4:	6f 5f       	subi	r22, 0xFF	; 255
     ce6:	7f 4f       	sbci	r23, 0xFF	; 255
     ce8:	8f 4f       	sbci	r24, 0xFF	; 255
     cea:	9f 4f       	sbci	r25, 0xFF	; 255
     cec:	16 c0       	rjmp	.+44     	; 0xd1a <__floatsisf+0x6c>
     cee:	88 23       	and	r24, r24
     cf0:	11 f0       	breq	.+4      	; 0xcf6 <__floatsisf+0x48>
     cf2:	96 e9       	ldi	r25, 0x96	; 150
     cf4:	11 c0       	rjmp	.+34     	; 0xd18 <__floatsisf+0x6a>
     cf6:	77 23       	and	r23, r23
     cf8:	21 f0       	breq	.+8      	; 0xd02 <__floatsisf+0x54>
     cfa:	9e e8       	ldi	r25, 0x8E	; 142
     cfc:	87 2f       	mov	r24, r23
     cfe:	76 2f       	mov	r23, r22
     d00:	05 c0       	rjmp	.+10     	; 0xd0c <__floatsisf+0x5e>
     d02:	66 23       	and	r22, r22
     d04:	71 f0       	breq	.+28     	; 0xd22 <__floatsisf+0x74>
     d06:	96 e8       	ldi	r25, 0x86	; 134
     d08:	86 2f       	mov	r24, r22
     d0a:	70 e0       	ldi	r23, 0x00	; 0
     d0c:	60 e0       	ldi	r22, 0x00	; 0
     d0e:	2a f0       	brmi	.+10     	; 0xd1a <__floatsisf+0x6c>
     d10:	9a 95       	dec	r25
     d12:	66 0f       	add	r22, r22
     d14:	77 1f       	adc	r23, r23
     d16:	88 1f       	adc	r24, r24
     d18:	da f7       	brpl	.-10     	; 0xd10 <__floatsisf+0x62>
     d1a:	88 0f       	add	r24, r24
     d1c:	96 95       	lsr	r25
     d1e:	87 95       	ror	r24
     d20:	97 f9       	bld	r25, 7
     d22:	08 95       	ret

00000d24 <__fp_cmp>:
     d24:	99 0f       	add	r25, r25
     d26:	00 08       	sbc	r0, r0
     d28:	55 0f       	add	r21, r21
     d2a:	aa 0b       	sbc	r26, r26
     d2c:	e0 e8       	ldi	r30, 0x80	; 128
     d2e:	fe ef       	ldi	r31, 0xFE	; 254
     d30:	16 16       	cp	r1, r22
     d32:	17 06       	cpc	r1, r23
     d34:	e8 07       	cpc	r30, r24
     d36:	f9 07       	cpc	r31, r25
     d38:	c0 f0       	brcs	.+48     	; 0xd6a <__fp_cmp+0x46>
     d3a:	12 16       	cp	r1, r18
     d3c:	13 06       	cpc	r1, r19
     d3e:	e4 07       	cpc	r30, r20
     d40:	f5 07       	cpc	r31, r21
     d42:	98 f0       	brcs	.+38     	; 0xd6a <__fp_cmp+0x46>
     d44:	62 1b       	sub	r22, r18
     d46:	73 0b       	sbc	r23, r19
     d48:	84 0b       	sbc	r24, r20
     d4a:	95 0b       	sbc	r25, r21
     d4c:	39 f4       	brne	.+14     	; 0xd5c <__fp_cmp+0x38>
     d4e:	0a 26       	eor	r0, r26
     d50:	61 f0       	breq	.+24     	; 0xd6a <__fp_cmp+0x46>
     d52:	23 2b       	or	r18, r19
     d54:	24 2b       	or	r18, r20
     d56:	25 2b       	or	r18, r21
     d58:	21 f4       	brne	.+8      	; 0xd62 <__fp_cmp+0x3e>
     d5a:	08 95       	ret
     d5c:	0a 26       	eor	r0, r26
     d5e:	09 f4       	brne	.+2      	; 0xd62 <__fp_cmp+0x3e>
     d60:	a1 40       	sbci	r26, 0x01	; 1
     d62:	a6 95       	lsr	r26
     d64:	8f ef       	ldi	r24, 0xFF	; 255
     d66:	81 1d       	adc	r24, r1
     d68:	81 1d       	adc	r24, r1
     d6a:	08 95       	ret

00000d6c <__fp_inf>:
     d6c:	97 f9       	bld	r25, 7
     d6e:	9f 67       	ori	r25, 0x7F	; 127
     d70:	80 e8       	ldi	r24, 0x80	; 128
     d72:	70 e0       	ldi	r23, 0x00	; 0
     d74:	60 e0       	ldi	r22, 0x00	; 0
     d76:	08 95       	ret

00000d78 <__fp_nan>:
     d78:	9f ef       	ldi	r25, 0xFF	; 255
     d7a:	80 ec       	ldi	r24, 0xC0	; 192
     d7c:	08 95       	ret

00000d7e <__fp_pscA>:
     d7e:	00 24       	eor	r0, r0
     d80:	0a 94       	dec	r0
     d82:	16 16       	cp	r1, r22
     d84:	17 06       	cpc	r1, r23
     d86:	18 06       	cpc	r1, r24
     d88:	09 06       	cpc	r0, r25
     d8a:	08 95       	ret

00000d8c <__fp_pscB>:
     d8c:	00 24       	eor	r0, r0
     d8e:	0a 94       	dec	r0
     d90:	12 16       	cp	r1, r18
     d92:	13 06       	cpc	r1, r19
     d94:	14 06       	cpc	r1, r20
     d96:	05 06       	cpc	r0, r21
     d98:	08 95       	ret

00000d9a <__fp_round>:
     d9a:	09 2e       	mov	r0, r25
     d9c:	03 94       	inc	r0
     d9e:	00 0c       	add	r0, r0
     da0:	11 f4       	brne	.+4      	; 0xda6 <__fp_round+0xc>
     da2:	88 23       	and	r24, r24
     da4:	52 f0       	brmi	.+20     	; 0xdba <__fp_round+0x20>
     da6:	bb 0f       	add	r27, r27
     da8:	40 f4       	brcc	.+16     	; 0xdba <__fp_round+0x20>
     daa:	bf 2b       	or	r27, r31
     dac:	11 f4       	brne	.+4      	; 0xdb2 <__fp_round+0x18>
     dae:	60 ff       	sbrs	r22, 0
     db0:	04 c0       	rjmp	.+8      	; 0xdba <__fp_round+0x20>
     db2:	6f 5f       	subi	r22, 0xFF	; 255
     db4:	7f 4f       	sbci	r23, 0xFF	; 255
     db6:	8f 4f       	sbci	r24, 0xFF	; 255
     db8:	9f 4f       	sbci	r25, 0xFF	; 255
     dba:	08 95       	ret

00000dbc <__fp_split3>:
     dbc:	57 fd       	sbrc	r21, 7
     dbe:	90 58       	subi	r25, 0x80	; 128
     dc0:	44 0f       	add	r20, r20
     dc2:	55 1f       	adc	r21, r21
     dc4:	59 f0       	breq	.+22     	; 0xddc <__fp_splitA+0x10>
     dc6:	5f 3f       	cpi	r21, 0xFF	; 255
     dc8:	71 f0       	breq	.+28     	; 0xde6 <__fp_splitA+0x1a>
     dca:	47 95       	ror	r20

00000dcc <__fp_splitA>:
     dcc:	88 0f       	add	r24, r24
     dce:	97 fb       	bst	r25, 7
     dd0:	99 1f       	adc	r25, r25
     dd2:	61 f0       	breq	.+24     	; 0xdec <__fp_splitA+0x20>
     dd4:	9f 3f       	cpi	r25, 0xFF	; 255
     dd6:	79 f0       	breq	.+30     	; 0xdf6 <__fp_splitA+0x2a>
     dd8:	87 95       	ror	r24
     dda:	08 95       	ret
     ddc:	12 16       	cp	r1, r18
     dde:	13 06       	cpc	r1, r19
     de0:	14 06       	cpc	r1, r20
     de2:	55 1f       	adc	r21, r21
     de4:	f2 cf       	rjmp	.-28     	; 0xdca <__fp_split3+0xe>
     de6:	46 95       	lsr	r20
     de8:	f1 df       	rcall	.-30     	; 0xdcc <__fp_splitA>
     dea:	08 c0       	rjmp	.+16     	; 0xdfc <__fp_splitA+0x30>
     dec:	16 16       	cp	r1, r22
     dee:	17 06       	cpc	r1, r23
     df0:	18 06       	cpc	r1, r24
     df2:	99 1f       	adc	r25, r25
     df4:	f1 cf       	rjmp	.-30     	; 0xdd8 <__fp_splitA+0xc>
     df6:	86 95       	lsr	r24
     df8:	71 05       	cpc	r23, r1
     dfa:	61 05       	cpc	r22, r1
     dfc:	08 94       	sec
     dfe:	08 95       	ret

00000e00 <__fp_zero>:
     e00:	e8 94       	clt

00000e02 <__fp_szero>:
     e02:	bb 27       	eor	r27, r27
     e04:	66 27       	eor	r22, r22
     e06:	77 27       	eor	r23, r23
     e08:	cb 01       	movw	r24, r22
     e0a:	97 f9       	bld	r25, 7
     e0c:	08 95       	ret

00000e0e <__gesf2>:
     e0e:	8a df       	rcall	.-236    	; 0xd24 <__fp_cmp>
     e10:	08 f4       	brcc	.+2      	; 0xe14 <__gesf2+0x6>
     e12:	8f ef       	ldi	r24, 0xFF	; 255
     e14:	08 95       	ret

00000e16 <refresh>:
     e16:	cf 93       	push	r28
     e18:	df 93       	push	r29
     e1a:	60 e0       	ldi	r22, 0x00	; 0
     e1c:	80 e0       	ldi	r24, 0x00	; 0
     e1e:	e2 d2       	rcall	.+1476   	; 0x13e4 <LCDPosition>
     e20:	c6 e1       	ldi	r28, 0x16	; 22
     e22:	d2 e0       	ldi	r29, 0x02	; 2
     e24:	69 91       	ld	r22, Y+
     e26:	81 e0       	ldi	r24, 0x01	; 1
     e28:	98 d2       	rcall	.+1328   	; 0x135a <LCDWrite>
     e2a:	84 e0       	ldi	r24, 0x04	; 4
     e2c:	ce 30       	cpi	r28, 0x0E	; 14
     e2e:	d8 07       	cpc	r29, r24
     e30:	c9 f7       	brne	.-14     	; 0xe24 <refresh+0xe>
     e32:	df 91       	pop	r29
     e34:	cf 91       	pop	r28
     e36:	08 95       	ret

00000e38 <clear>:
     e38:	e6 e1       	ldi	r30, 0x16	; 22
     e3a:	f2 e0       	ldi	r31, 0x02	; 2
     e3c:	11 92       	st	Z+, r1
     e3e:	84 e0       	ldi	r24, 0x04	; 4
     e40:	ee 30       	cpi	r30, 0x0E	; 14
     e42:	f8 07       	cpc	r31, r24
     e44:	d9 f7       	brne	.-10     	; 0xe3c <clear+0x4>
     e46:	08 95       	ret

00000e48 <set_pixel>:
     e48:	84 35       	cpi	r24, 0x54	; 84
     e4a:	00 f5       	brcc	.+64     	; 0xe8c <set_pixel+0x44>
     e4c:	60 33       	cpi	r22, 0x30	; 48
     e4e:	f0 f4       	brcc	.+60     	; 0xe8c <set_pixel+0x44>
     e50:	e6 2f       	mov	r30, r22
     e52:	e6 95       	lsr	r30
     e54:	e6 95       	lsr	r30
     e56:	e6 95       	lsr	r30
     e58:	67 70       	andi	r22, 0x07	; 7
     e5a:	94 e5       	ldi	r25, 0x54	; 84
     e5c:	e9 9f       	mul	r30, r25
     e5e:	f0 01       	movw	r30, r0
     e60:	11 24       	eor	r1, r1
     e62:	90 e0       	ldi	r25, 0x00	; 0
     e64:	e8 0f       	add	r30, r24
     e66:	f9 1f       	adc	r31, r25
     e68:	ea 5e       	subi	r30, 0xEA	; 234
     e6a:	fd 4f       	sbci	r31, 0xFD	; 253
     e6c:	81 e0       	ldi	r24, 0x01	; 1
     e6e:	90 e0       	ldi	r25, 0x00	; 0
     e70:	06 2e       	mov	r0, r22
     e72:	01 c0       	rjmp	.+2      	; 0xe76 <set_pixel+0x2e>
     e74:	88 0f       	add	r24, r24
     e76:	0a 94       	dec	r0
     e78:	ea f7       	brpl	.-6      	; 0xe74 <set_pixel+0x2c>
     e7a:	44 23       	and	r20, r20
     e7c:	19 f0       	breq	.+6      	; 0xe84 <set_pixel+0x3c>
     e7e:	90 81       	ld	r25, Z
     e80:	98 2b       	or	r25, r24
     e82:	03 c0       	rjmp	.+6      	; 0xe8a <set_pixel+0x42>
     e84:	80 95       	com	r24
     e86:	90 81       	ld	r25, Z
     e88:	98 23       	and	r25, r24
     e8a:	90 83       	st	Z, r25
     e8c:	08 95       	ret

00000e8e <draw_line>:
     e8e:	2f 92       	push	r2
     e90:	3f 92       	push	r3
     e92:	4f 92       	push	r4
     e94:	5f 92       	push	r5
     e96:	6f 92       	push	r6
     e98:	7f 92       	push	r7
     e9a:	8f 92       	push	r8
     e9c:	9f 92       	push	r9
     e9e:	af 92       	push	r10
     ea0:	bf 92       	push	r11
     ea2:	cf 92       	push	r12
     ea4:	df 92       	push	r13
     ea6:	ef 92       	push	r14
     ea8:	ff 92       	push	r15
     eaa:	0f 93       	push	r16
     eac:	1f 93       	push	r17
     eae:	cf 93       	push	r28
     eb0:	df 93       	push	r29
     eb2:	cd b7       	in	r28, 0x3d	; 61
     eb4:	de b7       	in	r29, 0x3e	; 62
     eb6:	62 97       	sbiw	r28, 0x12	; 18
     eb8:	0f b6       	in	r0, 0x3f	; 63
     eba:	f8 94       	cli
     ebc:	de bf       	out	0x3e, r29	; 62
     ebe:	0f be       	out	0x3f, r0	; 63
     ec0:	cd bf       	out	0x3d, r28	; 61
     ec2:	a8 2e       	mov	r10, r24
     ec4:	96 2e       	mov	r9, r22
     ec6:	84 2e       	mov	r8, r20
     ec8:	b2 2e       	mov	r11, r18
     eca:	84 13       	cpse	r24, r20
     ecc:	09 c0       	rjmp	.+18     	; 0xee0 <draw_line+0x52>
     ece:	05 c0       	rjmp	.+10     	; 0xeda <draw_line+0x4c>
     ed0:	41 e0       	ldi	r20, 0x01	; 1
     ed2:	69 2d       	mov	r22, r9
     ed4:	8a 2d       	mov	r24, r10
     ed6:	b8 df       	rcall	.-144    	; 0xe48 <set_pixel>
     ed8:	93 94       	inc	r9
     eda:	b9 14       	cp	r11, r9
     edc:	c8 f7       	brcc	.-14     	; 0xed0 <draw_line+0x42>
     ede:	bc c1       	rjmp	.+888    	; 0x1258 <draw_line+0x3ca>
     ee0:	62 13       	cpse	r22, r18
     ee2:	09 c0       	rjmp	.+18     	; 0xef6 <draw_line+0x68>
     ee4:	05 c0       	rjmp	.+10     	; 0xef0 <draw_line+0x62>
     ee6:	41 e0       	ldi	r20, 0x01	; 1
     ee8:	69 2d       	mov	r22, r9
     eea:	8a 2d       	mov	r24, r10
     eec:	ad df       	rcall	.-166    	; 0xe48 <set_pixel>
     eee:	a3 94       	inc	r10
     ef0:	8a 14       	cp	r8, r10
     ef2:	c8 f7       	brcc	.-14     	; 0xee6 <draw_line+0x58>
     ef4:	b1 c1       	rjmp	.+866    	; 0x1258 <draw_line+0x3ca>
     ef6:	62 2f       	mov	r22, r18
     ef8:	70 e0       	ldi	r23, 0x00	; 0
     efa:	80 e0       	ldi	r24, 0x00	; 0
     efc:	90 e0       	ldi	r25, 0x00	; 0
     efe:	d5 de       	rcall	.-598    	; 0xcaa <__floatunsisf>
     f00:	6b 01       	movw	r12, r22
     f02:	7c 01       	movw	r14, r24
     f04:	69 2d       	mov	r22, r9
     f06:	70 e0       	ldi	r23, 0x00	; 0
     f08:	80 e0       	ldi	r24, 0x00	; 0
     f0a:	90 e0       	ldi	r25, 0x00	; 0
     f0c:	d0 de       	rcall	.-608    	; 0xcae <__floatsisf>
     f0e:	9b 01       	movw	r18, r22
     f10:	ac 01       	movw	r20, r24
     f12:	c7 01       	movw	r24, r14
     f14:	b6 01       	movw	r22, r12
     f16:	60 de       	rcall	.-832    	; 0xbd8 <__subsf3>
     f18:	1b 01       	movw	r2, r22
     f1a:	2c 01       	movw	r4, r24
     f1c:	68 2d       	mov	r22, r8
     f1e:	70 e0       	ldi	r23, 0x00	; 0
     f20:	80 e0       	ldi	r24, 0x00	; 0
     f22:	90 e0       	ldi	r25, 0x00	; 0
     f24:	c2 de       	rcall	.-636    	; 0xcaa <__floatunsisf>
     f26:	6b 01       	movw	r12, r22
     f28:	7c 01       	movw	r14, r24
     f2a:	6a 2d       	mov	r22, r10
     f2c:	70 e0       	ldi	r23, 0x00	; 0
     f2e:	80 e0       	ldi	r24, 0x00	; 0
     f30:	90 e0       	ldi	r25, 0x00	; 0
     f32:	bd de       	rcall	.-646    	; 0xcae <__floatsisf>
     f34:	9b 01       	movw	r18, r22
     f36:	ac 01       	movw	r20, r24
     f38:	c7 01       	movw	r24, r14
     f3a:	b6 01       	movw	r22, r12
     f3c:	4d de       	rcall	.-870    	; 0xbd8 <__subsf3>
     f3e:	3b 01       	movw	r6, r22
     f40:	8c 01       	movw	r16, r24
     f42:	76 2f       	mov	r23, r22
     f44:	27 2f       	mov	r18, r23
     f46:	37 2d       	mov	r19, r7
     f48:	40 2f       	mov	r20, r16
     f4a:	51 2f       	mov	r21, r17
     f4c:	62 2d       	mov	r22, r2
     f4e:	73 2d       	mov	r23, r3
     f50:	84 2d       	mov	r24, r4
     f52:	95 2d       	mov	r25, r5
     f54:	7d d3       	rcall	.+1786   	; 0x1650 <__divsf3>
     f56:	6b 01       	movw	r12, r22
     f58:	7c 01       	movw	r14, r24
     f5a:	20 e0       	ldi	r18, 0x00	; 0
     f5c:	30 e0       	ldi	r19, 0x00	; 0
     f5e:	40 e8       	ldi	r20, 0x80	; 128
     f60:	5f e3       	ldi	r21, 0x3F	; 63
     f62:	7d 2d       	mov	r23, r13
     f64:	9f 2d       	mov	r25, r15
     f66:	a8 14       	cp	r10, r8
     f68:	90 f5       	brcc	.+100    	; 0xfce <draw_line+0x140>
     f6a:	51 df       	rcall	.-350    	; 0xe0e <__gesf2>
     f6c:	18 16       	cp	r1, r24
     f6e:	0c f4       	brge	.+2      	; 0xf72 <draw_line+0xe4>
     f70:	4a c1       	rjmp	.+660    	; 0x1206 <draw_line+0x378>
     f72:	20 e0       	ldi	r18, 0x00	; 0
     f74:	30 e0       	ldi	r19, 0x00	; 0
     f76:	40 e8       	ldi	r20, 0x80	; 128
     f78:	5f e3       	ldi	r21, 0x3F	; 63
     f7a:	6c 2d       	mov	r22, r12
     f7c:	7d 2d       	mov	r23, r13
     f7e:	8e 2d       	mov	r24, r14
     f80:	9f 2d       	mov	r25, r15
     f82:	8f de       	rcall	.-738    	; 0xca2 <__cmpsf2>
     f84:	18 16       	cp	r1, r24
     f86:	5c f0       	brlt	.+22     	; 0xf9e <draw_line+0x110>
     f88:	20 e0       	ldi	r18, 0x00	; 0
     f8a:	30 e0       	ldi	r19, 0x00	; 0
     f8c:	a9 01       	movw	r20, r18
     f8e:	6c 2d       	mov	r22, r12
     f90:	7d 2d       	mov	r23, r13
     f92:	8e 2d       	mov	r24, r14
     f94:	9f 2d       	mov	r25, r15
     f96:	3b df       	rcall	.-394    	; 0xe0e <__gesf2>
     f98:	18 16       	cp	r1, r24
     f9a:	0c f4       	brge	.+2      	; 0xf9e <draw_line+0x110>
     f9c:	16 c1       	rjmp	.+556    	; 0x11ca <draw_line+0x33c>
     f9e:	20 e0       	ldi	r18, 0x00	; 0
     fa0:	30 e0       	ldi	r19, 0x00	; 0
     fa2:	a9 01       	movw	r20, r18
     fa4:	6c 2d       	mov	r22, r12
     fa6:	7d 2d       	mov	r23, r13
     fa8:	8e 2d       	mov	r24, r14
     faa:	9f 2d       	mov	r25, r15
     fac:	7a de       	rcall	.-780    	; 0xca2 <__cmpsf2>
     fae:	18 16       	cp	r1, r24
     fb0:	0c f4       	brge	.+2      	; 0xfb4 <draw_line+0x126>
     fb2:	2c c1       	rjmp	.+600    	; 0x120c <draw_line+0x37e>
     fb4:	20 e0       	ldi	r18, 0x00	; 0
     fb6:	30 e0       	ldi	r19, 0x00	; 0
     fb8:	40 e8       	ldi	r20, 0x80	; 128
     fba:	5f eb       	ldi	r21, 0xBF	; 191
     fbc:	6c 2d       	mov	r22, r12
     fbe:	7d 2d       	mov	r23, r13
     fc0:	8e 2d       	mov	r24, r14
     fc2:	9f 2d       	mov	r25, r15
     fc4:	24 df       	rcall	.-440    	; 0xe0e <__gesf2>
     fc6:	18 16       	cp	r1, r24
     fc8:	0c f4       	brge	.+2      	; 0xfcc <draw_line+0x13e>
     fca:	02 c1       	rjmp	.+516    	; 0x11d0 <draw_line+0x342>
     fcc:	1f c1       	rjmp	.+574    	; 0x120c <draw_line+0x37e>
     fce:	1f df       	rcall	.-450    	; 0xe0e <__gesf2>
     fd0:	18 16       	cp	r1, r24
     fd2:	0c f4       	brge	.+2      	; 0xfd6 <draw_line+0x148>
     fd4:	20 c1       	rjmp	.+576    	; 0x1216 <draw_line+0x388>
     fd6:	20 e0       	ldi	r18, 0x00	; 0
     fd8:	30 e0       	ldi	r19, 0x00	; 0
     fda:	40 e8       	ldi	r20, 0x80	; 128
     fdc:	5f e3       	ldi	r21, 0x3F	; 63
     fde:	6c 2d       	mov	r22, r12
     fe0:	7d 2d       	mov	r23, r13
     fe2:	8e 2d       	mov	r24, r14
     fe4:	9f 2d       	mov	r25, r15
     fe6:	5d de       	rcall	.-838    	; 0xca2 <__cmpsf2>
     fe8:	18 16       	cp	r1, r24
     fea:	5c f0       	brlt	.+22     	; 0x1002 <draw_line+0x174>
     fec:	20 e0       	ldi	r18, 0x00	; 0
     fee:	30 e0       	ldi	r19, 0x00	; 0
     ff0:	a9 01       	movw	r20, r18
     ff2:	6c 2d       	mov	r22, r12
     ff4:	7d 2d       	mov	r23, r13
     ff6:	8e 2d       	mov	r24, r14
     ff8:	9f 2d       	mov	r25, r15
     ffa:	09 df       	rcall	.-494    	; 0xe0e <__gesf2>
     ffc:	18 16       	cp	r1, r24
     ffe:	0c f4       	brge	.+2      	; 0x1002 <draw_line+0x174>
    1000:	ec c0       	rjmp	.+472    	; 0x11da <draw_line+0x34c>
    1002:	20 e0       	ldi	r18, 0x00	; 0
    1004:	30 e0       	ldi	r19, 0x00	; 0
    1006:	a9 01       	movw	r20, r18
    1008:	6c 2d       	mov	r22, r12
    100a:	7d 2d       	mov	r23, r13
    100c:	8e 2d       	mov	r24, r14
    100e:	9f 2d       	mov	r25, r15
    1010:	48 de       	rcall	.-880    	; 0xca2 <__cmpsf2>
    1012:	18 16       	cp	r1, r24
    1014:	0c f4       	brge	.+2      	; 0x1018 <draw_line+0x18a>
    1016:	04 c1       	rjmp	.+520    	; 0x1220 <draw_line+0x392>
    1018:	20 e0       	ldi	r18, 0x00	; 0
    101a:	30 e0       	ldi	r19, 0x00	; 0
    101c:	40 e8       	ldi	r20, 0x80	; 128
    101e:	5f eb       	ldi	r21, 0xBF	; 191
    1020:	6c 2d       	mov	r22, r12
    1022:	7d 2d       	mov	r23, r13
    1024:	8e 2d       	mov	r24, r14
    1026:	9f 2d       	mov	r25, r15
    1028:	f2 de       	rcall	.-540    	; 0xe0e <__gesf2>
    102a:	18 16       	cp	r1, r24
    102c:	0c f4       	brge	.+2      	; 0x1030 <draw_line+0x1a2>
    102e:	da c0       	rjmp	.+436    	; 0x11e4 <draw_line+0x356>
    1030:	a2 e0       	ldi	r26, 0x02	; 2
    1032:	b0 e0       	ldi	r27, 0x00	; 0
    1034:	f2 c0       	rjmp	.+484    	; 0x121a <draw_line+0x38c>
    1036:	8d 81       	ldd	r24, Y+5	; 0x05
    1038:	9e 81       	ldd	r25, Y+6	; 0x06
    103a:	03 97       	sbiw	r24, 0x03	; 3
    103c:	04 97       	sbiw	r24, 0x04	; 4
    103e:	20 f0       	brcs	.+8      	; 0x1048 <draw_line+0x1ba>
    1040:	aa 24       	eor	r10, r10
    1042:	a3 94       	inc	r10
    1044:	b1 2c       	mov	r11, r1
    1046:	03 c0       	rjmp	.+6      	; 0x104e <draw_line+0x1c0>
    1048:	aa 24       	eor	r10, r10
    104a:	aa 94       	dec	r10
    104c:	ba 2c       	mov	r11, r10
    104e:	26 01       	movw	r4, r12
    1050:	37 01       	movw	r6, r14
    1052:	77 fa       	bst	r7, 7
    1054:	70 94       	com	r7
    1056:	77 f8       	bld	r7, 7
    1058:	70 94       	com	r7
    105a:	20 e0       	ldi	r18, 0x00	; 0
    105c:	30 e0       	ldi	r19, 0x00	; 0
    105e:	a9 01       	movw	r20, r18
    1060:	c7 01       	movw	r24, r14
    1062:	b6 01       	movw	r22, r12
    1064:	d4 de       	rcall	.-600    	; 0xe0e <__gesf2>
    1066:	87 fd       	sbrc	r24, 7
    1068:	05 c0       	rjmp	.+10     	; 0x1074 <draw_line+0x1e6>
    106a:	cf 82       	std	Y+7, r12	; 0x07
    106c:	d8 86       	std	Y+8, r13	; 0x08
    106e:	e9 86       	std	Y+9, r14	; 0x09
    1070:	fa 86       	std	Y+10, r15	; 0x0a
    1072:	04 c0       	rjmp	.+8      	; 0x107c <draw_line+0x1ee>
    1074:	4f 82       	std	Y+7, r4	; 0x07
    1076:	58 86       	std	Y+8, r5	; 0x08
    1078:	69 86       	std	Y+9, r6	; 0x09
    107a:	7a 86       	std	Y+10, r7	; 0x0a
    107c:	e9 81       	ldd	r30, Y+1	; 0x01
    107e:	fa 81       	ldd	r31, Y+2	; 0x02
    1080:	fa 8b       	std	Y+18, r31	; 0x12
    1082:	e9 8b       	std	Y+17, r30	; 0x11
    1084:	91 2c       	mov	r9, r1
    1086:	81 2c       	mov	r8, r1
    1088:	71 2c       	mov	r7, r1
    108a:	61 2c       	mov	r6, r1
    108c:	c5 01       	movw	r24, r10
    108e:	aa 27       	eor	r26, r26
    1090:	97 fd       	sbrc	r25, 7
    1092:	a0 95       	com	r26
    1094:	ba 2f       	mov	r27, r26
    1096:	8d 87       	std	Y+13, r24	; 0x0d
    1098:	9e 87       	std	Y+14, r25	; 0x0e
    109a:	af 87       	std	Y+15, r26	; 0x0f
    109c:	b8 8b       	std	Y+16, r27	; 0x10
    109e:	82 c0       	rjmp	.+260    	; 0x11a4 <draw_line+0x316>
    10a0:	ab 81       	ldd	r26, Y+3	; 0x03
    10a2:	bc 81       	ldd	r27, Y+4	; 0x04
    10a4:	41 e0       	ldi	r20, 0x01	; 1
    10a6:	ab 2b       	or	r26, r27
    10a8:	19 f0       	breq	.+6      	; 0x10b0 <draw_line+0x222>
    10aa:	60 2f       	mov	r22, r16
    10ac:	89 89       	ldd	r24, Y+17	; 0x11
    10ae:	02 c0       	rjmp	.+4      	; 0x10b4 <draw_line+0x226>
    10b0:	69 89       	ldd	r22, Y+17	; 0x11
    10b2:	80 2f       	mov	r24, r16
    10b4:	c9 de       	rcall	.-622    	; 0xe48 <set_pixel>
    10b6:	7f 81       	ldd	r23, Y+7	; 0x07
    10b8:	68 85       	ldd	r22, Y+8	; 0x08
    10ba:	99 85       	ldd	r25, Y+9	; 0x09
    10bc:	8a 85       	ldd	r24, Y+10	; 0x0a
    10be:	27 2f       	mov	r18, r23
    10c0:	36 2f       	mov	r19, r22
    10c2:	49 2f       	mov	r20, r25
    10c4:	58 2f       	mov	r21, r24
    10c6:	d4 01       	movw	r26, r8
    10c8:	f3 01       	movw	r30, r6
    10ca:	6b 2f       	mov	r22, r27
    10cc:	78 2d       	mov	r23, r8
    10ce:	8f 2f       	mov	r24, r31
    10d0:	96 2d       	mov	r25, r6
    10d2:	83 dd       	rcall	.-1274   	; 0xbda <__addsf3>
    10d4:	6b 87       	std	Y+11, r22	; 0x0b
    10d6:	7c 87       	std	Y+12, r23	; 0x0c
    10d8:	2c 01       	movw	r4, r24
    10da:	96 2e       	mov	r9, r22
    10dc:	87 2e       	mov	r8, r23
    10de:	78 2e       	mov	r7, r24
    10e0:	65 2c       	mov	r6, r5
    10e2:	20 e0       	ldi	r18, 0x00	; 0
    10e4:	30 e0       	ldi	r19, 0x00	; 0
    10e6:	40 e0       	ldi	r20, 0x00	; 0
    10e8:	5f e3       	ldi	r21, 0x3F	; 63
    10ea:	d4 01       	movw	r26, r8
    10ec:	f3 01       	movw	r30, r6
    10ee:	6b 2f       	mov	r22, r27
    10f0:	7a 2f       	mov	r23, r26
    10f2:	8f 2f       	mov	r24, r31
    10f4:	9e 2f       	mov	r25, r30
    10f6:	8b de       	rcall	.-746    	; 0xe0e <__gesf2>
    10f8:	18 16       	cp	r1, r24
    10fa:	0c f0       	brlt	.+2      	; 0x10fe <draw_line+0x270>
    10fc:	43 c0       	rjmp	.+134    	; 0x1184 <draw_line+0x2f6>
    10fe:	6d 85       	ldd	r22, Y+13	; 0x0d
    1100:	7e 85       	ldd	r23, Y+14	; 0x0e
    1102:	8f 85       	ldd	r24, Y+15	; 0x0f
    1104:	98 89       	ldd	r25, Y+16	; 0x10
    1106:	d3 dd       	rcall	.-1114   	; 0xcae <__floatsisf>
    1108:	9b 01       	movw	r18, r22
    110a:	ac 01       	movw	r20, r24
    110c:	c7 01       	movw	r24, r14
    110e:	b6 01       	movw	r22, r12
    1110:	33 d3       	rcall	.+1638   	; 0x1778 <__mulsf3>
    1112:	3b 01       	movw	r6, r22
    1114:	4c 01       	movw	r8, r24
    1116:	e1 e0       	ldi	r30, 0x01	; 1
    1118:	f0 e0       	ldi	r31, 0x00	; 0
    111a:	fe 83       	std	Y+6, r31	; 0x06
    111c:	ed 83       	std	Y+5, r30	; 0x05
    111e:	20 e0       	ldi	r18, 0x00	; 0
    1120:	30 e0       	ldi	r19, 0x00	; 0
    1122:	a9 01       	movw	r20, r18
    1124:	77 2d       	mov	r23, r7
    1126:	99 2d       	mov	r25, r9
    1128:	72 de       	rcall	.-796    	; 0xe0e <__gesf2>
    112a:	18 16       	cp	r1, r24
    112c:	14 f0       	brlt	.+4      	; 0x1132 <draw_line+0x2a4>
    112e:	1e 82       	std	Y+6, r1	; 0x06
    1130:	1d 82       	std	Y+5, r1	; 0x05
    1132:	aa 24       	eor	r10, r10
    1134:	a3 94       	inc	r10
    1136:	b1 2c       	mov	r11, r1
    1138:	20 e0       	ldi	r18, 0x00	; 0
    113a:	30 e0       	ldi	r19, 0x00	; 0
    113c:	a9 01       	movw	r20, r18
    113e:	66 2d       	mov	r22, r6
    1140:	77 2d       	mov	r23, r7
    1142:	88 2d       	mov	r24, r8
    1144:	99 2d       	mov	r25, r9
    1146:	ad dd       	rcall	.-1190   	; 0xca2 <__cmpsf2>
    1148:	87 fd       	sbrc	r24, 7
    114a:	02 c0       	rjmp	.+4      	; 0x1150 <draw_line+0x2c2>
    114c:	a1 2c       	mov	r10, r1
    114e:	b1 2c       	mov	r11, r1
    1150:	8d 81       	ldd	r24, Y+5	; 0x05
    1152:	9e 81       	ldd	r25, Y+6	; 0x06
    1154:	8a 19       	sub	r24, r10
    1156:	9b 09       	sbc	r25, r11
    1158:	01 97       	sbiw	r24, 0x01	; 1
    115a:	19 f4       	brne	.+6      	; 0x1162 <draw_line+0x2d4>
    115c:	0f 5f       	subi	r16, 0xFF	; 255
    115e:	1f 4f       	sbci	r17, 0xFF	; 255
    1160:	02 c0       	rjmp	.+4      	; 0x1166 <draw_line+0x2d8>
    1162:	01 50       	subi	r16, 0x01	; 1
    1164:	11 09       	sbc	r17, r1
    1166:	20 e0       	ldi	r18, 0x00	; 0
    1168:	30 e0       	ldi	r19, 0x00	; 0
    116a:	40 e8       	ldi	r20, 0x80	; 128
    116c:	5f e3       	ldi	r21, 0x3F	; 63
    116e:	bb 85       	ldd	r27, Y+11	; 0x0b
    1170:	ac 85       	ldd	r26, Y+12	; 0x0c
    1172:	6b 2f       	mov	r22, r27
    1174:	7a 2f       	mov	r23, r26
    1176:	84 2d       	mov	r24, r4
    1178:	95 2d       	mov	r25, r5
    117a:	2e dd       	rcall	.-1444   	; 0xbd8 <__subsf3>
    117c:	96 2e       	mov	r9, r22
    117e:	87 2e       	mov	r8, r23
    1180:	78 2e       	mov	r7, r24
    1182:	69 2e       	mov	r6, r25
    1184:	89 81       	ldd	r24, Y+1	; 0x01
    1186:	9a 81       	ldd	r25, Y+2	; 0x02
    1188:	82 15       	cp	r24, r2
    118a:	93 05       	cpc	r25, r3
    118c:	30 f4       	brcc	.+12     	; 0x119a <draw_line+0x30c>
    118e:	a9 89       	ldd	r26, Y+17	; 0x11
    1190:	ba 89       	ldd	r27, Y+18	; 0x12
    1192:	11 96       	adiw	r26, 0x01	; 1
    1194:	ba 8b       	std	Y+18, r27	; 0x12
    1196:	a9 8b       	std	Y+17, r26	; 0x11
    1198:	05 c0       	rjmp	.+10     	; 0x11a4 <draw_line+0x316>
    119a:	e9 89       	ldd	r30, Y+17	; 0x11
    119c:	fa 89       	ldd	r31, Y+18	; 0x12
    119e:	31 97       	sbiw	r30, 0x01	; 1
    11a0:	fa 8b       	std	Y+18, r31	; 0x12
    11a2:	e9 8b       	std	Y+17, r30	; 0x11
    11a4:	89 81       	ldd	r24, Y+1	; 0x01
    11a6:	9a 81       	ldd	r25, Y+2	; 0x02
    11a8:	82 15       	cp	r24, r2
    11aa:	93 05       	cpc	r25, r3
    11ac:	38 f4       	brcc	.+14     	; 0x11bc <draw_line+0x32e>
    11ae:	a9 89       	ldd	r26, Y+17	; 0x11
    11b0:	ba 89       	ldd	r27, Y+18	; 0x12
    11b2:	2a 16       	cp	r2, r26
    11b4:	3b 06       	cpc	r3, r27
    11b6:	08 f0       	brcs	.+2      	; 0x11ba <draw_line+0x32c>
    11b8:	73 cf       	rjmp	.-282    	; 0x10a0 <draw_line+0x212>
    11ba:	4e c0       	rjmp	.+156    	; 0x1258 <draw_line+0x3ca>
    11bc:	e9 89       	ldd	r30, Y+17	; 0x11
    11be:	fa 89       	ldd	r31, Y+18	; 0x12
    11c0:	e2 15       	cp	r30, r2
    11c2:	f3 05       	cpc	r31, r3
    11c4:	08 f0       	brcs	.+2      	; 0x11c8 <draw_line+0x33a>
    11c6:	6c cf       	rjmp	.-296    	; 0x10a0 <draw_line+0x212>
    11c8:	47 c0       	rjmp	.+142    	; 0x1258 <draw_line+0x3ca>
    11ca:	1e 82       	std	Y+6, r1	; 0x06
    11cc:	1d 82       	std	Y+5, r1	; 0x05
    11ce:	0e c0       	rjmp	.+28     	; 0x11ec <draw_line+0x35e>
    11d0:	87 e0       	ldi	r24, 0x07	; 7
    11d2:	90 e0       	ldi	r25, 0x00	; 0
    11d4:	9e 83       	std	Y+6, r25	; 0x06
    11d6:	8d 83       	std	Y+5, r24	; 0x05
    11d8:	09 c0       	rjmp	.+18     	; 0x11ec <draw_line+0x35e>
    11da:	a4 e0       	ldi	r26, 0x04	; 4
    11dc:	b0 e0       	ldi	r27, 0x00	; 0
    11de:	be 83       	std	Y+6, r27	; 0x06
    11e0:	ad 83       	std	Y+5, r26	; 0x05
    11e2:	04 c0       	rjmp	.+8      	; 0x11ec <draw_line+0x35e>
    11e4:	e3 e0       	ldi	r30, 0x03	; 3
    11e6:	f0 e0       	ldi	r31, 0x00	; 0
    11e8:	fe 83       	std	Y+6, r31	; 0x06
    11ea:	ed 83       	std	Y+5, r30	; 0x05
    11ec:	09 2d       	mov	r16, r9
    11ee:	10 e0       	ldi	r17, 0x00	; 0
    11f0:	8a 2d       	mov	r24, r10
    11f2:	90 e0       	ldi	r25, 0x00	; 0
    11f4:	9a 83       	std	Y+2, r25	; 0x02
    11f6:	89 83       	std	Y+1, r24	; 0x01
    11f8:	28 2c       	mov	r2, r8
    11fa:	31 2c       	mov	r3, r1
    11fc:	a1 e0       	ldi	r26, 0x01	; 1
    11fe:	b0 e0       	ldi	r27, 0x00	; 0
    1200:	bc 83       	std	Y+4, r27	; 0x04
    1202:	ab 83       	std	Y+3, r26	; 0x03
    1204:	18 cf       	rjmp	.-464    	; 0x1036 <draw_line+0x1a8>
    1206:	e1 e0       	ldi	r30, 0x01	; 1
    1208:	f0 e0       	ldi	r31, 0x00	; 0
    120a:	0c c0       	rjmp	.+24     	; 0x1224 <draw_line+0x396>
    120c:	86 e0       	ldi	r24, 0x06	; 6
    120e:	90 e0       	ldi	r25, 0x00	; 0
    1210:	9e 83       	std	Y+6, r25	; 0x06
    1212:	8d 83       	std	Y+5, r24	; 0x05
    1214:	09 c0       	rjmp	.+18     	; 0x1228 <draw_line+0x39a>
    1216:	a5 e0       	ldi	r26, 0x05	; 5
    1218:	b0 e0       	ldi	r27, 0x00	; 0
    121a:	be 83       	std	Y+6, r27	; 0x06
    121c:	ad 83       	std	Y+5, r26	; 0x05
    121e:	04 c0       	rjmp	.+8      	; 0x1228 <draw_line+0x39a>
    1220:	e2 e0       	ldi	r30, 0x02	; 2
    1222:	f0 e0       	ldi	r31, 0x00	; 0
    1224:	fe 83       	std	Y+6, r31	; 0x06
    1226:	ed 83       	std	Y+5, r30	; 0x05
    1228:	22 2d       	mov	r18, r2
    122a:	33 2d       	mov	r19, r3
    122c:	44 2d       	mov	r20, r4
    122e:	55 2d       	mov	r21, r5
    1230:	66 2d       	mov	r22, r6
    1232:	77 2d       	mov	r23, r7
    1234:	80 2f       	mov	r24, r16
    1236:	91 2f       	mov	r25, r17
    1238:	0b d2       	rcall	.+1046   	; 0x1650 <__divsf3>
    123a:	c6 2e       	mov	r12, r22
    123c:	d7 2e       	mov	r13, r23
    123e:	e8 2e       	mov	r14, r24
    1240:	f9 2e       	mov	r15, r25
    1242:	0a 2d       	mov	r16, r10
    1244:	10 e0       	ldi	r17, 0x00	; 0
    1246:	89 2d       	mov	r24, r9
    1248:	90 e0       	ldi	r25, 0x00	; 0
    124a:	9a 83       	std	Y+2, r25	; 0x02
    124c:	89 83       	std	Y+1, r24	; 0x01
    124e:	2b 2c       	mov	r2, r11
    1250:	31 2c       	mov	r3, r1
    1252:	1c 82       	std	Y+4, r1	; 0x04
    1254:	1b 82       	std	Y+3, r1	; 0x03
    1256:	ef ce       	rjmp	.-546    	; 0x1036 <draw_line+0x1a8>
    1258:	62 96       	adiw	r28, 0x12	; 18
    125a:	0f b6       	in	r0, 0x3f	; 63
    125c:	f8 94       	cli
    125e:	de bf       	out	0x3e, r29	; 62
    1260:	0f be       	out	0x3f, r0	; 63
    1262:	cd bf       	out	0x3d, r28	; 61
    1264:	df 91       	pop	r29
    1266:	cf 91       	pop	r28
    1268:	1f 91       	pop	r17
    126a:	0f 91       	pop	r16
    126c:	ff 90       	pop	r15
    126e:	ef 90       	pop	r14
    1270:	df 90       	pop	r13
    1272:	cf 90       	pop	r12
    1274:	bf 90       	pop	r11
    1276:	af 90       	pop	r10
    1278:	9f 90       	pop	r9
    127a:	8f 90       	pop	r8
    127c:	7f 90       	pop	r7
    127e:	6f 90       	pop	r6
    1280:	5f 90       	pop	r5
    1282:	4f 90       	pop	r4
    1284:	3f 90       	pop	r3
    1286:	2f 90       	pop	r2
    1288:	08 95       	ret

0000128a <draw_character>:
    128a:	7f 92       	push	r7
    128c:	8f 92       	push	r8
    128e:	9f 92       	push	r9
    1290:	af 92       	push	r10
    1292:	bf 92       	push	r11
    1294:	cf 92       	push	r12
    1296:	df 92       	push	r13
    1298:	ef 92       	push	r14
    129a:	ff 92       	push	r15
    129c:	0f 93       	push	r16
    129e:	1f 93       	push	r17
    12a0:	cf 93       	push	r28
    12a2:	df 93       	push	r29
    12a4:	86 2e       	mov	r8, r22
    12a6:	74 2e       	mov	r7, r20
    12a8:	00 e0       	ldi	r16, 0x00	; 0
    12aa:	10 e0       	ldi	r17, 0x00	; 0
    12ac:	90 e0       	ldi	r25, 0x00	; 0
    12ae:	80 97       	sbiw	r24, 0x20	; 32
    12b0:	25 e0       	ldi	r18, 0x05	; 5
    12b2:	28 9f       	mul	r18, r24
    12b4:	60 01       	movw	r12, r0
    12b6:	29 9f       	mul	r18, r25
    12b8:	d0 0c       	add	r13, r0
    12ba:	11 24       	eor	r1, r1
    12bc:	aa 24       	eor	r10, r10
    12be:	a3 94       	inc	r10
    12c0:	b1 2c       	mov	r11, r1
    12c2:	1c c0       	rjmp	.+56     	; 0x12fc <draw_character+0x72>
    12c4:	a5 01       	movw	r20, r10
    12c6:	0c 2e       	mov	r0, r28
    12c8:	02 c0       	rjmp	.+4      	; 0x12ce <draw_character+0x44>
    12ca:	44 0f       	add	r20, r20
    12cc:	55 1f       	adc	r21, r21
    12ce:	0a 94       	dec	r0
    12d0:	e2 f7       	brpl	.-8      	; 0x12ca <draw_character+0x40>
    12d2:	4e 21       	and	r20, r14
    12d4:	5f 21       	and	r21, r15
    12d6:	0c 2e       	mov	r0, r28
    12d8:	02 c0       	rjmp	.+4      	; 0x12de <draw_character+0x54>
    12da:	55 95       	asr	r21
    12dc:	47 95       	ror	r20
    12de:	0a 94       	dec	r0
    12e0:	e2 f7       	brpl	.-8      	; 0x12da <draw_character+0x50>
    12e2:	6c 2f       	mov	r22, r28
    12e4:	67 0d       	add	r22, r7
    12e6:	89 2d       	mov	r24, r9
    12e8:	af dd       	rcall	.-1186   	; 0xe48 <set_pixel>
    12ea:	21 96       	adiw	r28, 0x01	; 1
    12ec:	c8 30       	cpi	r28, 0x08	; 8
    12ee:	d1 05       	cpc	r29, r1
    12f0:	49 f7       	brne	.-46     	; 0x12c4 <draw_character+0x3a>
    12f2:	0f 5f       	subi	r16, 0xFF	; 255
    12f4:	1f 4f       	sbci	r17, 0xFF	; 255
    12f6:	05 30       	cpi	r16, 0x05	; 5
    12f8:	11 05       	cpc	r17, r1
    12fa:	69 f0       	breq	.+26     	; 0x1316 <draw_character+0x8c>
    12fc:	c0 e0       	ldi	r28, 0x00	; 0
    12fe:	d0 e0       	ldi	r29, 0x00	; 0
    1300:	f8 01       	movw	r30, r16
    1302:	ec 0d       	add	r30, r12
    1304:	fd 1d       	adc	r31, r13
    1306:	e4 55       	subi	r30, 0x54	; 84
    1308:	ff 4f       	sbci	r31, 0xFF	; 255
    130a:	e4 91       	lpm	r30, Z
    130c:	ee 2e       	mov	r14, r30
    130e:	f1 2c       	mov	r15, r1
    1310:	98 2c       	mov	r9, r8
    1312:	90 0e       	add	r9, r16
    1314:	d7 cf       	rjmp	.-82     	; 0x12c4 <draw_character+0x3a>
    1316:	df 91       	pop	r29
    1318:	cf 91       	pop	r28
    131a:	1f 91       	pop	r17
    131c:	0f 91       	pop	r16
    131e:	ff 90       	pop	r15
    1320:	ef 90       	pop	r14
    1322:	df 90       	pop	r13
    1324:	cf 90       	pop	r12
    1326:	bf 90       	pop	r11
    1328:	af 90       	pop	r10
    132a:	9f 90       	pop	r9
    132c:	8f 90       	pop	r8
    132e:	7f 90       	pop	r7
    1330:	08 95       	ret

00001332 <draw_string>:
    1332:	0f 93       	push	r16
    1334:	1f 93       	push	r17
    1336:	cf 93       	push	r28
    1338:	df 93       	push	r29
    133a:	16 2f       	mov	r17, r22
    133c:	04 2f       	mov	r16, r20
    133e:	ec 01       	movw	r28, r24
    1340:	04 c0       	rjmp	.+8      	; 0x134a <draw_string+0x18>
    1342:	40 2f       	mov	r20, r16
    1344:	61 2f       	mov	r22, r17
    1346:	a1 df       	rcall	.-190    	; 0x128a <draw_character>
    1348:	1b 5f       	subi	r17, 0xFB	; 251
    134a:	89 91       	ld	r24, Y+
    134c:	81 11       	cpse	r24, r1
    134e:	f9 cf       	rjmp	.-14     	; 0x1342 <draw_string+0x10>
    1350:	df 91       	pop	r29
    1352:	cf 91       	pop	r28
    1354:	1f 91       	pop	r17
    1356:	0f 91       	pop	r16
    1358:	08 95       	ret

0000135a <LCDWrite>:
    135a:	25 b1       	in	r18, 0x05	; 5
    135c:	30 e2       	ldi	r19, 0x20	; 32
    135e:	83 9f       	mul	r24, r19
    1360:	c0 01       	movw	r24, r0
    1362:	11 24       	eor	r1, r1
    1364:	2f 7d       	andi	r18, 0xDF	; 223
    1366:	28 2b       	or	r18, r24
    1368:	25 b9       	out	0x05, r18	; 5
    136a:	5f 98       	cbi	0x0b, 7	; 11
    136c:	87 e0       	ldi	r24, 0x07	; 7
    136e:	90 e0       	ldi	r25, 0x00	; 0
    1370:	70 e0       	ldi	r23, 0x00	; 0
    1372:	8f 98       	cbi	0x11, 7	; 17
    1374:	9b 01       	movw	r18, r22
    1376:	08 2e       	mov	r0, r24
    1378:	02 c0       	rjmp	.+4      	; 0x137e <LCDWrite+0x24>
    137a:	35 95       	asr	r19
    137c:	27 95       	ror	r18
    137e:	0a 94       	dec	r0
    1380:	e2 f7       	brpl	.-8      	; 0x137a <LCDWrite+0x20>
    1382:	20 ff       	sbrs	r18, 0
    1384:	02 c0       	rjmp	.+4      	; 0x138a <LCDWrite+0x30>
    1386:	2e 9a       	sbi	0x05, 6	; 5
    1388:	01 c0       	rjmp	.+2      	; 0x138c <LCDWrite+0x32>
    138a:	2e 98       	cbi	0x05, 6	; 5
    138c:	8f 9a       	sbi	0x11, 7	; 17
    138e:	01 97       	sbiw	r24, 0x01	; 1
    1390:	80 f7       	brcc	.-32     	; 0x1372 <LCDWrite+0x18>
    1392:	5f 9a       	sbi	0x0b, 7	; 11
    1394:	08 95       	ret

00001396 <LCDInitialise>:
    1396:	cf 93       	push	r28
    1398:	c8 2f       	mov	r28, r24
    139a:	57 9a       	sbi	0x0a, 7	; 10
    139c:	24 9a       	sbi	0x04, 4	; 4
    139e:	25 9a       	sbi	0x04, 5	; 4
    13a0:	26 9a       	sbi	0x04, 6	; 4
    13a2:	87 9a       	sbi	0x10, 7	; 16
    13a4:	2c 98       	cbi	0x05, 4	; 5
    13a6:	5f 9a       	sbi	0x0b, 7	; 11
    13a8:	2c 9a       	sbi	0x05, 4	; 5
    13aa:	61 e2       	ldi	r22, 0x21	; 33
    13ac:	80 e0       	ldi	r24, 0x00	; 0
    13ae:	d5 df       	rcall	.-86     	; 0x135a <LCDWrite>
    13b0:	6c 2f       	mov	r22, r28
    13b2:	60 68       	ori	r22, 0x80	; 128
    13b4:	80 e0       	ldi	r24, 0x00	; 0
    13b6:	d1 df       	rcall	.-94     	; 0x135a <LCDWrite>
    13b8:	64 e0       	ldi	r22, 0x04	; 4
    13ba:	80 e0       	ldi	r24, 0x00	; 0
    13bc:	ce df       	rcall	.-100    	; 0x135a <LCDWrite>
    13be:	63 e1       	ldi	r22, 0x13	; 19
    13c0:	80 e0       	ldi	r24, 0x00	; 0
    13c2:	cb df       	rcall	.-106    	; 0x135a <LCDWrite>
    13c4:	6c e0       	ldi	r22, 0x0C	; 12
    13c6:	80 e0       	ldi	r24, 0x00	; 0
    13c8:	c8 df       	rcall	.-112    	; 0x135a <LCDWrite>
    13ca:	60 e2       	ldi	r22, 0x20	; 32
    13cc:	80 e0       	ldi	r24, 0x00	; 0
    13ce:	c5 df       	rcall	.-118    	; 0x135a <LCDWrite>
    13d0:	6c e0       	ldi	r22, 0x0C	; 12
    13d2:	80 e0       	ldi	r24, 0x00	; 0
    13d4:	c2 df       	rcall	.-124    	; 0x135a <LCDWrite>
    13d6:	60 e4       	ldi	r22, 0x40	; 64
    13d8:	80 e0       	ldi	r24, 0x00	; 0
    13da:	bf df       	rcall	.-130    	; 0x135a <LCDWrite>
    13dc:	60 e8       	ldi	r22, 0x80	; 128
    13de:	80 e0       	ldi	r24, 0x00	; 0
    13e0:	cf 91       	pop	r28
    13e2:	bb cf       	rjmp	.-138    	; 0x135a <LCDWrite>

000013e4 <LCDPosition>:
    13e4:	cf 93       	push	r28
    13e6:	c8 2f       	mov	r28, r24
    13e8:	60 64       	ori	r22, 0x40	; 64
    13ea:	80 e0       	ldi	r24, 0x00	; 0
    13ec:	b6 df       	rcall	.-148    	; 0x135a <LCDWrite>
    13ee:	6c 2f       	mov	r22, r28
    13f0:	60 68       	ori	r22, 0x80	; 128
    13f2:	80 e0       	ldi	r24, 0x00	; 0
    13f4:	cf 91       	pop	r28
    13f6:	b1 cf       	rjmp	.-158    	; 0x135a <LCDWrite>

000013f8 <init_sprite>:
    13f8:	cf 92       	push	r12
    13fa:	df 92       	push	r13
    13fc:	ef 92       	push	r14
    13fe:	ff 92       	push	r15
    1400:	0f 93       	push	r16
    1402:	cf 93       	push	r28
    1404:	df 93       	push	r29
    1406:	00 d0       	rcall	.+0      	; 0x1408 <init_sprite+0x10>
    1408:	cd b7       	in	r28, 0x3d	; 61
    140a:	de b7       	in	r29, 0x3e	; 62
    140c:	6c 01       	movw	r12, r24
    140e:	70 e0       	ldi	r23, 0x00	; 0
    1410:	80 e0       	ldi	r24, 0x00	; 0
    1412:	90 e0       	ldi	r25, 0x00	; 0
    1414:	2a 83       	std	Y+2, r18	; 0x02
    1416:	49 83       	std	Y+1, r20	; 0x01
    1418:	48 dc       	rcall	.-1904   	; 0xcaa <__floatunsisf>
    141a:	f6 01       	movw	r30, r12
    141c:	60 83       	st	Z, r22
    141e:	71 83       	std	Z+1, r23	; 0x01
    1420:	82 83       	std	Z+2, r24	; 0x02
    1422:	93 83       	std	Z+3, r25	; 0x03
    1424:	49 81       	ldd	r20, Y+1	; 0x01
    1426:	64 2f       	mov	r22, r20
    1428:	70 e0       	ldi	r23, 0x00	; 0
    142a:	80 e0       	ldi	r24, 0x00	; 0
    142c:	90 e0       	ldi	r25, 0x00	; 0
    142e:	3d dc       	rcall	.-1926   	; 0xcaa <__floatunsisf>
    1430:	f6 01       	movw	r30, r12
    1432:	64 83       	std	Z+4, r22	; 0x04
    1434:	75 83       	std	Z+5, r23	; 0x05
    1436:	86 83       	std	Z+6, r24	; 0x06
    1438:	97 83       	std	Z+7, r25	; 0x07
    143a:	2a 81       	ldd	r18, Y+2	; 0x02
    143c:	20 87       	std	Z+8, r18	; 0x08
    143e:	01 87       	std	Z+9, r16	; 0x09
    1440:	f4 86       	std	Z+12, r15	; 0x0c
    1442:	e3 86       	std	Z+11, r14	; 0x0b
    1444:	0f 90       	pop	r0
    1446:	0f 90       	pop	r0
    1448:	df 91       	pop	r29
    144a:	cf 91       	pop	r28
    144c:	0f 91       	pop	r16
    144e:	ff 90       	pop	r15
    1450:	ef 90       	pop	r14
    1452:	df 90       	pop	r13
    1454:	cf 90       	pop	r12
    1456:	08 95       	ret

00001458 <draw_sprite>:
    1458:	2f 92       	push	r2
    145a:	3f 92       	push	r3
    145c:	4f 92       	push	r4
    145e:	5f 92       	push	r5
    1460:	6f 92       	push	r6
    1462:	7f 92       	push	r7
    1464:	8f 92       	push	r8
    1466:	9f 92       	push	r9
    1468:	af 92       	push	r10
    146a:	bf 92       	push	r11
    146c:	cf 92       	push	r12
    146e:	df 92       	push	r13
    1470:	ef 92       	push	r14
    1472:	ff 92       	push	r15
    1474:	0f 93       	push	r16
    1476:	1f 93       	push	r17
    1478:	cf 93       	push	r28
    147a:	df 93       	push	r29
    147c:	00 d0       	rcall	.+0      	; 0x147e <draw_sprite+0x26>
    147e:	00 d0       	rcall	.+0      	; 0x1480 <draw_sprite+0x28>
    1480:	cd b7       	in	r28, 0x3d	; 61
    1482:	de b7       	in	r29, 0x3e	; 62
    1484:	9c 83       	std	Y+4, r25	; 0x04
    1486:	8b 83       	std	Y+3, r24	; 0x03
    1488:	dc 01       	movw	r26, r24
    148a:	1a 96       	adiw	r26, 0x0a	; 10
    148c:	8c 91       	ld	r24, X
    148e:	81 11       	cpse	r24, r1
    1490:	95 c0       	rjmp	.+298    	; 0x15bc <draw_sprite+0x164>
    1492:	a0 c0       	rjmp	.+320    	; 0x15d4 <draw_sprite+0x17c>
    1494:	b6 01       	movw	r22, r12
    1496:	88 27       	eor	r24, r24
    1498:	77 fd       	sbrc	r23, 7
    149a:	80 95       	com	r24
    149c:	98 2f       	mov	r25, r24
    149e:	07 dc       	rcall	.-2034   	; 0xcae <__floatsisf>
    14a0:	eb 81       	ldd	r30, Y+3	; 0x03
    14a2:	fc 81       	ldd	r31, Y+4	; 0x04
    14a4:	24 81       	ldd	r18, Z+4	; 0x04
    14a6:	35 81       	ldd	r19, Z+5	; 0x05
    14a8:	46 81       	ldd	r20, Z+6	; 0x06
    14aa:	57 81       	ldd	r21, Z+7	; 0x07
    14ac:	96 db       	rcall	.-2260   	; 0xbda <__addsf3>
    14ae:	96 2e       	mov	r9, r22
    14b0:	87 2e       	mov	r8, r23
    14b2:	78 2e       	mov	r7, r24
    14b4:	69 2e       	mov	r6, r25
    14b6:	20 e0       	ldi	r18, 0x00	; 0
    14b8:	30 e0       	ldi	r19, 0x00	; 0
    14ba:	a9 01       	movw	r20, r18
    14bc:	d4 01       	movw	r26, r8
    14be:	f3 01       	movw	r30, r6
    14c0:	6b 2f       	mov	r22, r27
    14c2:	7a 2f       	mov	r23, r26
    14c4:	8f 2f       	mov	r24, r31
    14c6:	9e 2f       	mov	r25, r30
    14c8:	ec db       	rcall	.-2088   	; 0xca2 <__cmpsf2>
    14ca:	87 fd       	sbrc	r24, 7
    14cc:	73 c0       	rjmp	.+230    	; 0x15b4 <draw_sprite+0x15c>
    14ce:	20 e0       	ldi	r18, 0x00	; 0
    14d0:	30 e0       	ldi	r19, 0x00	; 0
    14d2:	40 e4       	ldi	r20, 0x40	; 64
    14d4:	52 e4       	ldi	r21, 0x42	; 66
    14d6:	d4 01       	movw	r26, r8
    14d8:	f3 01       	movw	r30, r6
    14da:	6b 2f       	mov	r22, r27
    14dc:	7a 2f       	mov	r23, r26
    14de:	8f 2f       	mov	r24, r31
    14e0:	9e 2f       	mov	r25, r30
    14e2:	95 dc       	rcall	.-1750   	; 0xe0e <__gesf2>
    14e4:	87 ff       	sbrs	r24, 7
    14e6:	76 c0       	rjmp	.+236    	; 0x15d4 <draw_sprite+0x17c>
    14e8:	20 e8       	ldi	r18, 0x80	; 128
    14ea:	a2 2e       	mov	r10, r18
    14ec:	b1 2c       	mov	r11, r1
    14ee:	e1 2c       	mov	r14, r1
    14f0:	f1 2c       	mov	r15, r1
    14f2:	52 c0       	rjmp	.+164    	; 0x1598 <draw_sprite+0x140>
    14f4:	ab 81       	ldd	r26, Y+3	; 0x03
    14f6:	bc 81       	ldd	r27, Y+4	; 0x04
    14f8:	1b 96       	adiw	r26, 0x0b	; 11
    14fa:	ed 91       	ld	r30, X+
    14fc:	fc 91       	ld	r31, X
    14fe:	1c 97       	sbiw	r26, 0x0c	; 12
    1500:	e0 0f       	add	r30, r16
    1502:	f1 1f       	adc	r31, r17
    1504:	b0 81       	ld	r27, Z
    1506:	b9 83       	std	Y+1, r27	; 0x01
    1508:	b7 01       	movw	r22, r14
    150a:	88 27       	eor	r24, r24
    150c:	77 fd       	sbrc	r23, 7
    150e:	80 95       	com	r24
    1510:	98 2f       	mov	r25, r24
    1512:	cd db       	rcall	.-2150   	; 0xcae <__floatsisf>
    1514:	eb 81       	ldd	r30, Y+3	; 0x03
    1516:	fc 81       	ldd	r31, Y+4	; 0x04
    1518:	20 81       	ld	r18, Z
    151a:	31 81       	ldd	r19, Z+1	; 0x01
    151c:	42 81       	ldd	r20, Z+2	; 0x02
    151e:	53 81       	ldd	r21, Z+3	; 0x03
    1520:	5c db       	rcall	.-2376   	; 0xbda <__addsf3>
    1522:	1b 01       	movw	r2, r22
    1524:	2c 01       	movw	r4, r24
    1526:	20 e0       	ldi	r18, 0x00	; 0
    1528:	30 e0       	ldi	r19, 0x00	; 0
    152a:	a9 01       	movw	r20, r18
    152c:	73 2d       	mov	r23, r3
    152e:	95 2d       	mov	r25, r5
    1530:	6e dc       	rcall	.-1828   	; 0xe0e <__gesf2>
    1532:	87 fd       	sbrc	r24, 7
    1534:	21 c0       	rjmp	.+66     	; 0x1578 <draw_sprite+0x120>
    1536:	20 e0       	ldi	r18, 0x00	; 0
    1538:	30 e0       	ldi	r19, 0x00	; 0
    153a:	48 ea       	ldi	r20, 0xA8	; 168
    153c:	52 e4       	ldi	r21, 0x42	; 66
    153e:	62 2d       	mov	r22, r2
    1540:	73 2d       	mov	r23, r3
    1542:	84 2d       	mov	r24, r4
    1544:	95 2d       	mov	r25, r5
    1546:	ad db       	rcall	.-2214   	; 0xca2 <__cmpsf2>
    1548:	87 ff       	sbrs	r24, 7
    154a:	16 c0       	rjmp	.+44     	; 0x1578 <draw_sprite+0x120>
    154c:	89 81       	ldd	r24, Y+1	; 0x01
    154e:	8a 21       	and	r24, r10
    1550:	99 f0       	breq	.+38     	; 0x1578 <draw_sprite+0x120>
    1552:	a4 01       	movw	r20, r8
    1554:	93 01       	movw	r18, r6
    1556:	65 2f       	mov	r22, r21
    1558:	78 2d       	mov	r23, r8
    155a:	83 2f       	mov	r24, r19
    155c:	96 2d       	mov	r25, r6
    155e:	e0 d0       	rcall	.+448    	; 0x1720 <__fixunssfsi>
    1560:	26 2f       	mov	r18, r22
    1562:	62 2d       	mov	r22, r2
    1564:	73 2d       	mov	r23, r3
    1566:	84 2d       	mov	r24, r4
    1568:	95 2d       	mov	r25, r5
    156a:	2a 83       	std	Y+2, r18	; 0x02
    156c:	d9 d0       	rcall	.+434    	; 0x1720 <__fixunssfsi>
    156e:	86 2f       	mov	r24, r22
    1570:	41 e0       	ldi	r20, 0x01	; 1
    1572:	2a 81       	ldd	r18, Y+2	; 0x02
    1574:	62 2f       	mov	r22, r18
    1576:	68 dc       	rcall	.-1840   	; 0xe48 <set_pixel>
    1578:	ff ef       	ldi	r31, 0xFF	; 255
    157a:	ef 1a       	sub	r14, r31
    157c:	ff 0a       	sbc	r15, r31
    157e:	c7 01       	movw	r24, r14
    1580:	87 70       	andi	r24, 0x07	; 7
    1582:	99 27       	eor	r25, r25
    1584:	89 2b       	or	r24, r25
    1586:	31 f4       	brne	.+12     	; 0x1594 <draw_sprite+0x13c>
    1588:	0f 5f       	subi	r16, 0xFF	; 255
    158a:	1f 4f       	sbci	r17, 0xFF	; 255
    158c:	90 e8       	ldi	r25, 0x80	; 128
    158e:	a9 2e       	mov	r10, r25
    1590:	b1 2c       	mov	r11, r1
    1592:	02 c0       	rjmp	.+4      	; 0x1598 <draw_sprite+0x140>
    1594:	b5 94       	asr	r11
    1596:	a7 94       	ror	r10
    1598:	ab 81       	ldd	r26, Y+3	; 0x03
    159a:	bc 81       	ldd	r27, Y+4	; 0x04
    159c:	18 96       	adiw	r26, 0x08	; 8
    159e:	2c 91       	ld	r18, X
    15a0:	82 2f       	mov	r24, r18
    15a2:	90 e0       	ldi	r25, 0x00	; 0
    15a4:	e8 16       	cp	r14, r24
    15a6:	f9 06       	cpc	r15, r25
    15a8:	0c f4       	brge	.+2      	; 0x15ac <draw_sprite+0x154>
    15aa:	a4 cf       	rjmp	.-184    	; 0x14f4 <draw_sprite+0x9c>
    15ac:	27 70       	andi	r18, 0x07	; 7
    15ae:	11 f0       	breq	.+4      	; 0x15b4 <draw_sprite+0x15c>
    15b0:	0f 5f       	subi	r16, 0xFF	; 255
    15b2:	1f 4f       	sbci	r17, 0xFF	; 255
    15b4:	bf ef       	ldi	r27, 0xFF	; 255
    15b6:	cb 1a       	sub	r12, r27
    15b8:	db 0a       	sbc	r13, r27
    15ba:	04 c0       	rjmp	.+8      	; 0x15c4 <draw_sprite+0x16c>
    15bc:	c1 2c       	mov	r12, r1
    15be:	d1 2c       	mov	r13, r1
    15c0:	00 e0       	ldi	r16, 0x00	; 0
    15c2:	10 e0       	ldi	r17, 0x00	; 0
    15c4:	eb 81       	ldd	r30, Y+3	; 0x03
    15c6:	fc 81       	ldd	r31, Y+4	; 0x04
    15c8:	81 85       	ldd	r24, Z+9	; 0x09
    15ca:	90 e0       	ldi	r25, 0x00	; 0
    15cc:	c8 16       	cp	r12, r24
    15ce:	d9 06       	cpc	r13, r25
    15d0:	0c f4       	brge	.+2      	; 0x15d4 <draw_sprite+0x17c>
    15d2:	60 cf       	rjmp	.-320    	; 0x1494 <draw_sprite+0x3c>
    15d4:	0f 90       	pop	r0
    15d6:	0f 90       	pop	r0
    15d8:	0f 90       	pop	r0
    15da:	0f 90       	pop	r0
    15dc:	df 91       	pop	r29
    15de:	cf 91       	pop	r28
    15e0:	1f 91       	pop	r17
    15e2:	0f 91       	pop	r16
    15e4:	ff 90       	pop	r15
    15e6:	ef 90       	pop	r14
    15e8:	df 90       	pop	r13
    15ea:	cf 90       	pop	r12
    15ec:	bf 90       	pop	r11
    15ee:	af 90       	pop	r10
    15f0:	9f 90       	pop	r9
    15f2:	8f 90       	pop	r8
    15f4:	7f 90       	pop	r7
    15f6:	6f 90       	pop	r6
    15f8:	5f 90       	pop	r5
    15fa:	4f 90       	pop	r4
    15fc:	3f 90       	pop	r3
    15fe:	2f 90       	pop	r2
    1600:	08 95       	ret

00001602 <__divmodhi4>:
    1602:	97 fb       	bst	r25, 7
    1604:	07 2e       	mov	r0, r23
    1606:	16 f4       	brtc	.+4      	; 0x160c <__divmodhi4+0xa>
    1608:	00 94       	com	r0
    160a:	06 d0       	rcall	.+12     	; 0x1618 <__divmodhi4_neg1>
    160c:	77 fd       	sbrc	r23, 7
    160e:	08 d0       	rcall	.+16     	; 0x1620 <__divmodhi4_neg2>
    1610:	0b d0       	rcall	.+22     	; 0x1628 <__udivmodhi4>
    1612:	07 fc       	sbrc	r0, 7
    1614:	05 d0       	rcall	.+10     	; 0x1620 <__divmodhi4_neg2>
    1616:	3e f4       	brtc	.+14     	; 0x1626 <__divmodhi4_exit>

00001618 <__divmodhi4_neg1>:
    1618:	90 95       	com	r25
    161a:	81 95       	neg	r24
    161c:	9f 4f       	sbci	r25, 0xFF	; 255
    161e:	08 95       	ret

00001620 <__divmodhi4_neg2>:
    1620:	70 95       	com	r23
    1622:	61 95       	neg	r22
    1624:	7f 4f       	sbci	r23, 0xFF	; 255

00001626 <__divmodhi4_exit>:
    1626:	08 95       	ret

00001628 <__udivmodhi4>:
    1628:	aa 1b       	sub	r26, r26
    162a:	bb 1b       	sub	r27, r27
    162c:	51 e1       	ldi	r21, 0x11	; 17
    162e:	07 c0       	rjmp	.+14     	; 0x163e <__udivmodhi4_ep>

00001630 <__udivmodhi4_loop>:
    1630:	aa 1f       	adc	r26, r26
    1632:	bb 1f       	adc	r27, r27
    1634:	a6 17       	cp	r26, r22
    1636:	b7 07       	cpc	r27, r23
    1638:	10 f0       	brcs	.+4      	; 0x163e <__udivmodhi4_ep>
    163a:	a6 1b       	sub	r26, r22
    163c:	b7 0b       	sbc	r27, r23

0000163e <__udivmodhi4_ep>:
    163e:	88 1f       	adc	r24, r24
    1640:	99 1f       	adc	r25, r25
    1642:	5a 95       	dec	r21
    1644:	a9 f7       	brne	.-22     	; 0x1630 <__udivmodhi4_loop>
    1646:	80 95       	com	r24
    1648:	90 95       	com	r25
    164a:	bc 01       	movw	r22, r24
    164c:	cd 01       	movw	r24, r26
    164e:	08 95       	ret

00001650 <__divsf3>:
    1650:	0c d0       	rcall	.+24     	; 0x166a <__divsf3x>
    1652:	a3 cb       	rjmp	.-2234   	; 0xd9a <__fp_round>
    1654:	9b db       	rcall	.-2250   	; 0xd8c <__fp_pscB>
    1656:	40 f0       	brcs	.+16     	; 0x1668 <__divsf3+0x18>
    1658:	92 db       	rcall	.-2268   	; 0xd7e <__fp_pscA>
    165a:	30 f0       	brcs	.+12     	; 0x1668 <__divsf3+0x18>
    165c:	21 f4       	brne	.+8      	; 0x1666 <__divsf3+0x16>
    165e:	5f 3f       	cpi	r21, 0xFF	; 255
    1660:	19 f0       	breq	.+6      	; 0x1668 <__divsf3+0x18>
    1662:	84 cb       	rjmp	.-2296   	; 0xd6c <__fp_inf>
    1664:	51 11       	cpse	r21, r1
    1666:	cd cb       	rjmp	.-2150   	; 0xe02 <__fp_szero>
    1668:	87 cb       	rjmp	.-2290   	; 0xd78 <__fp_nan>

0000166a <__divsf3x>:
    166a:	a8 db       	rcall	.-2224   	; 0xdbc <__fp_split3>
    166c:	98 f3       	brcs	.-26     	; 0x1654 <__divsf3+0x4>

0000166e <__divsf3_pse>:
    166e:	99 23       	and	r25, r25
    1670:	c9 f3       	breq	.-14     	; 0x1664 <__divsf3+0x14>
    1672:	55 23       	and	r21, r21
    1674:	b1 f3       	breq	.-20     	; 0x1662 <__divsf3+0x12>
    1676:	95 1b       	sub	r25, r21
    1678:	55 0b       	sbc	r21, r21
    167a:	bb 27       	eor	r27, r27
    167c:	aa 27       	eor	r26, r26
    167e:	62 17       	cp	r22, r18
    1680:	73 07       	cpc	r23, r19
    1682:	84 07       	cpc	r24, r20
    1684:	38 f0       	brcs	.+14     	; 0x1694 <__divsf3_pse+0x26>
    1686:	9f 5f       	subi	r25, 0xFF	; 255
    1688:	5f 4f       	sbci	r21, 0xFF	; 255
    168a:	22 0f       	add	r18, r18
    168c:	33 1f       	adc	r19, r19
    168e:	44 1f       	adc	r20, r20
    1690:	aa 1f       	adc	r26, r26
    1692:	a9 f3       	breq	.-22     	; 0x167e <__divsf3_pse+0x10>
    1694:	33 d0       	rcall	.+102    	; 0x16fc <__divsf3_pse+0x8e>
    1696:	0e 2e       	mov	r0, r30
    1698:	3a f0       	brmi	.+14     	; 0x16a8 <__divsf3_pse+0x3a>
    169a:	e0 e8       	ldi	r30, 0x80	; 128
    169c:	30 d0       	rcall	.+96     	; 0x16fe <__divsf3_pse+0x90>
    169e:	91 50       	subi	r25, 0x01	; 1
    16a0:	50 40       	sbci	r21, 0x00	; 0
    16a2:	e6 95       	lsr	r30
    16a4:	00 1c       	adc	r0, r0
    16a6:	ca f7       	brpl	.-14     	; 0x169a <__divsf3_pse+0x2c>
    16a8:	29 d0       	rcall	.+82     	; 0x16fc <__divsf3_pse+0x8e>
    16aa:	fe 2f       	mov	r31, r30
    16ac:	27 d0       	rcall	.+78     	; 0x16fc <__divsf3_pse+0x8e>
    16ae:	66 0f       	add	r22, r22
    16b0:	77 1f       	adc	r23, r23
    16b2:	88 1f       	adc	r24, r24
    16b4:	bb 1f       	adc	r27, r27
    16b6:	26 17       	cp	r18, r22
    16b8:	37 07       	cpc	r19, r23
    16ba:	48 07       	cpc	r20, r24
    16bc:	ab 07       	cpc	r26, r27
    16be:	b0 e8       	ldi	r27, 0x80	; 128
    16c0:	09 f0       	breq	.+2      	; 0x16c4 <__divsf3_pse+0x56>
    16c2:	bb 0b       	sbc	r27, r27
    16c4:	80 2d       	mov	r24, r0
    16c6:	bf 01       	movw	r22, r30
    16c8:	ff 27       	eor	r31, r31
    16ca:	93 58       	subi	r25, 0x83	; 131
    16cc:	5f 4f       	sbci	r21, 0xFF	; 255
    16ce:	2a f0       	brmi	.+10     	; 0x16da <__divsf3_pse+0x6c>
    16d0:	9e 3f       	cpi	r25, 0xFE	; 254
    16d2:	51 05       	cpc	r21, r1
    16d4:	68 f0       	brcs	.+26     	; 0x16f0 <__divsf3_pse+0x82>
    16d6:	4a cb       	rjmp	.-2412   	; 0xd6c <__fp_inf>
    16d8:	94 cb       	rjmp	.-2264   	; 0xe02 <__fp_szero>
    16da:	5f 3f       	cpi	r21, 0xFF	; 255
    16dc:	ec f3       	brlt	.-6      	; 0x16d8 <__divsf3_pse+0x6a>
    16de:	98 3e       	cpi	r25, 0xE8	; 232
    16e0:	dc f3       	brlt	.-10     	; 0x16d8 <__divsf3_pse+0x6a>
    16e2:	86 95       	lsr	r24
    16e4:	77 95       	ror	r23
    16e6:	67 95       	ror	r22
    16e8:	b7 95       	ror	r27
    16ea:	f7 95       	ror	r31
    16ec:	9f 5f       	subi	r25, 0xFF	; 255
    16ee:	c9 f7       	brne	.-14     	; 0x16e2 <__divsf3_pse+0x74>
    16f0:	88 0f       	add	r24, r24
    16f2:	91 1d       	adc	r25, r1
    16f4:	96 95       	lsr	r25
    16f6:	87 95       	ror	r24
    16f8:	97 f9       	bld	r25, 7
    16fa:	08 95       	ret
    16fc:	e1 e0       	ldi	r30, 0x01	; 1
    16fe:	66 0f       	add	r22, r22
    1700:	77 1f       	adc	r23, r23
    1702:	88 1f       	adc	r24, r24
    1704:	bb 1f       	adc	r27, r27
    1706:	62 17       	cp	r22, r18
    1708:	73 07       	cpc	r23, r19
    170a:	84 07       	cpc	r24, r20
    170c:	ba 07       	cpc	r27, r26
    170e:	20 f0       	brcs	.+8      	; 0x1718 <__divsf3_pse+0xaa>
    1710:	62 1b       	sub	r22, r18
    1712:	73 0b       	sbc	r23, r19
    1714:	84 0b       	sbc	r24, r20
    1716:	ba 0b       	sbc	r27, r26
    1718:	ee 1f       	adc	r30, r30
    171a:	88 f7       	brcc	.-30     	; 0x16fe <__divsf3_pse+0x90>
    171c:	e0 95       	com	r30
    171e:	08 95       	ret

00001720 <__fixunssfsi>:
    1720:	55 db       	rcall	.-2390   	; 0xdcc <__fp_splitA>
    1722:	88 f0       	brcs	.+34     	; 0x1746 <__fixunssfsi+0x26>
    1724:	9f 57       	subi	r25, 0x7F	; 127
    1726:	90 f0       	brcs	.+36     	; 0x174c <__fixunssfsi+0x2c>
    1728:	b9 2f       	mov	r27, r25
    172a:	99 27       	eor	r25, r25
    172c:	b7 51       	subi	r27, 0x17	; 23
    172e:	a0 f0       	brcs	.+40     	; 0x1758 <__fixunssfsi+0x38>
    1730:	d1 f0       	breq	.+52     	; 0x1766 <__fixunssfsi+0x46>
    1732:	66 0f       	add	r22, r22
    1734:	77 1f       	adc	r23, r23
    1736:	88 1f       	adc	r24, r24
    1738:	99 1f       	adc	r25, r25
    173a:	1a f0       	brmi	.+6      	; 0x1742 <__fixunssfsi+0x22>
    173c:	ba 95       	dec	r27
    173e:	c9 f7       	brne	.-14     	; 0x1732 <__fixunssfsi+0x12>
    1740:	12 c0       	rjmp	.+36     	; 0x1766 <__fixunssfsi+0x46>
    1742:	b1 30       	cpi	r27, 0x01	; 1
    1744:	81 f0       	breq	.+32     	; 0x1766 <__fixunssfsi+0x46>
    1746:	5c db       	rcall	.-2376   	; 0xe00 <__fp_zero>
    1748:	b1 e0       	ldi	r27, 0x01	; 1
    174a:	08 95       	ret
    174c:	59 cb       	rjmp	.-2382   	; 0xe00 <__fp_zero>
    174e:	67 2f       	mov	r22, r23
    1750:	78 2f       	mov	r23, r24
    1752:	88 27       	eor	r24, r24
    1754:	b8 5f       	subi	r27, 0xF8	; 248
    1756:	39 f0       	breq	.+14     	; 0x1766 <__fixunssfsi+0x46>
    1758:	b9 3f       	cpi	r27, 0xF9	; 249
    175a:	cc f3       	brlt	.-14     	; 0x174e <__fixunssfsi+0x2e>
    175c:	86 95       	lsr	r24
    175e:	77 95       	ror	r23
    1760:	67 95       	ror	r22
    1762:	b3 95       	inc	r27
    1764:	d9 f7       	brne	.-10     	; 0x175c <__fixunssfsi+0x3c>
    1766:	3e f4       	brtc	.+14     	; 0x1776 <__fixunssfsi+0x56>
    1768:	90 95       	com	r25
    176a:	80 95       	com	r24
    176c:	70 95       	com	r23
    176e:	61 95       	neg	r22
    1770:	7f 4f       	sbci	r23, 0xFF	; 255
    1772:	8f 4f       	sbci	r24, 0xFF	; 255
    1774:	9f 4f       	sbci	r25, 0xFF	; 255
    1776:	08 95       	ret

00001778 <__mulsf3>:
    1778:	0b d0       	rcall	.+22     	; 0x1790 <__mulsf3x>
    177a:	0f cb       	rjmp	.-2530   	; 0xd9a <__fp_round>
    177c:	00 db       	rcall	.-2560   	; 0xd7e <__fp_pscA>
    177e:	28 f0       	brcs	.+10     	; 0x178a <__mulsf3+0x12>
    1780:	05 db       	rcall	.-2550   	; 0xd8c <__fp_pscB>
    1782:	18 f0       	brcs	.+6      	; 0x178a <__mulsf3+0x12>
    1784:	95 23       	and	r25, r21
    1786:	09 f0       	breq	.+2      	; 0x178a <__mulsf3+0x12>
    1788:	f1 ca       	rjmp	.-2590   	; 0xd6c <__fp_inf>
    178a:	f6 ca       	rjmp	.-2580   	; 0xd78 <__fp_nan>
    178c:	11 24       	eor	r1, r1
    178e:	39 cb       	rjmp	.-2446   	; 0xe02 <__fp_szero>

00001790 <__mulsf3x>:
    1790:	15 db       	rcall	.-2518   	; 0xdbc <__fp_split3>
    1792:	a0 f3       	brcs	.-24     	; 0x177c <__mulsf3+0x4>

00001794 <__mulsf3_pse>:
    1794:	95 9f       	mul	r25, r21
    1796:	d1 f3       	breq	.-12     	; 0x178c <__mulsf3+0x14>
    1798:	95 0f       	add	r25, r21
    179a:	50 e0       	ldi	r21, 0x00	; 0
    179c:	55 1f       	adc	r21, r21
    179e:	62 9f       	mul	r22, r18
    17a0:	f0 01       	movw	r30, r0
    17a2:	72 9f       	mul	r23, r18
    17a4:	bb 27       	eor	r27, r27
    17a6:	f0 0d       	add	r31, r0
    17a8:	b1 1d       	adc	r27, r1
    17aa:	63 9f       	mul	r22, r19
    17ac:	aa 27       	eor	r26, r26
    17ae:	f0 0d       	add	r31, r0
    17b0:	b1 1d       	adc	r27, r1
    17b2:	aa 1f       	adc	r26, r26
    17b4:	64 9f       	mul	r22, r20
    17b6:	66 27       	eor	r22, r22
    17b8:	b0 0d       	add	r27, r0
    17ba:	a1 1d       	adc	r26, r1
    17bc:	66 1f       	adc	r22, r22
    17be:	82 9f       	mul	r24, r18
    17c0:	22 27       	eor	r18, r18
    17c2:	b0 0d       	add	r27, r0
    17c4:	a1 1d       	adc	r26, r1
    17c6:	62 1f       	adc	r22, r18
    17c8:	73 9f       	mul	r23, r19
    17ca:	b0 0d       	add	r27, r0
    17cc:	a1 1d       	adc	r26, r1
    17ce:	62 1f       	adc	r22, r18
    17d0:	83 9f       	mul	r24, r19
    17d2:	a0 0d       	add	r26, r0
    17d4:	61 1d       	adc	r22, r1
    17d6:	22 1f       	adc	r18, r18
    17d8:	74 9f       	mul	r23, r20
    17da:	33 27       	eor	r19, r19
    17dc:	a0 0d       	add	r26, r0
    17de:	61 1d       	adc	r22, r1
    17e0:	23 1f       	adc	r18, r19
    17e2:	84 9f       	mul	r24, r20
    17e4:	60 0d       	add	r22, r0
    17e6:	21 1d       	adc	r18, r1
    17e8:	82 2f       	mov	r24, r18
    17ea:	76 2f       	mov	r23, r22
    17ec:	6a 2f       	mov	r22, r26
    17ee:	11 24       	eor	r1, r1
    17f0:	9f 57       	subi	r25, 0x7F	; 127
    17f2:	50 40       	sbci	r21, 0x00	; 0
    17f4:	8a f0       	brmi	.+34     	; 0x1818 <__mulsf3_pse+0x84>
    17f6:	e1 f0       	breq	.+56     	; 0x1830 <__mulsf3_pse+0x9c>
    17f8:	88 23       	and	r24, r24
    17fa:	4a f0       	brmi	.+18     	; 0x180e <__mulsf3_pse+0x7a>
    17fc:	ee 0f       	add	r30, r30
    17fe:	ff 1f       	adc	r31, r31
    1800:	bb 1f       	adc	r27, r27
    1802:	66 1f       	adc	r22, r22
    1804:	77 1f       	adc	r23, r23
    1806:	88 1f       	adc	r24, r24
    1808:	91 50       	subi	r25, 0x01	; 1
    180a:	50 40       	sbci	r21, 0x00	; 0
    180c:	a9 f7       	brne	.-22     	; 0x17f8 <__mulsf3_pse+0x64>
    180e:	9e 3f       	cpi	r25, 0xFE	; 254
    1810:	51 05       	cpc	r21, r1
    1812:	70 f0       	brcs	.+28     	; 0x1830 <__mulsf3_pse+0x9c>
    1814:	ab ca       	rjmp	.-2730   	; 0xd6c <__fp_inf>
    1816:	f5 ca       	rjmp	.-2582   	; 0xe02 <__fp_szero>
    1818:	5f 3f       	cpi	r21, 0xFF	; 255
    181a:	ec f3       	brlt	.-6      	; 0x1816 <__mulsf3_pse+0x82>
    181c:	98 3e       	cpi	r25, 0xE8	; 232
    181e:	dc f3       	brlt	.-10     	; 0x1816 <__mulsf3_pse+0x82>
    1820:	86 95       	lsr	r24
    1822:	77 95       	ror	r23
    1824:	67 95       	ror	r22
    1826:	b7 95       	ror	r27
    1828:	f7 95       	ror	r31
    182a:	e7 95       	ror	r30
    182c:	9f 5f       	subi	r25, 0xFF	; 255
    182e:	c1 f7       	brne	.-16     	; 0x1820 <__mulsf3_pse+0x8c>
    1830:	fe 2b       	or	r31, r30
    1832:	88 0f       	add	r24, r24
    1834:	91 1d       	adc	r25, r1
    1836:	96 95       	lsr	r25
    1838:	87 95       	ror	r24
    183a:	97 f9       	bld	r25, 7
    183c:	08 95       	ret

0000183e <do_rand>:
    183e:	8f 92       	push	r8
    1840:	9f 92       	push	r9
    1842:	af 92       	push	r10
    1844:	bf 92       	push	r11
    1846:	cf 92       	push	r12
    1848:	df 92       	push	r13
    184a:	ef 92       	push	r14
    184c:	ff 92       	push	r15
    184e:	cf 93       	push	r28
    1850:	df 93       	push	r29
    1852:	ec 01       	movw	r28, r24
    1854:	68 81       	ld	r22, Y
    1856:	79 81       	ldd	r23, Y+1	; 0x01
    1858:	8a 81       	ldd	r24, Y+2	; 0x02
    185a:	9b 81       	ldd	r25, Y+3	; 0x03
    185c:	61 15       	cp	r22, r1
    185e:	71 05       	cpc	r23, r1
    1860:	81 05       	cpc	r24, r1
    1862:	91 05       	cpc	r25, r1
    1864:	21 f4       	brne	.+8      	; 0x186e <do_rand+0x30>
    1866:	64 e2       	ldi	r22, 0x24	; 36
    1868:	79 ed       	ldi	r23, 0xD9	; 217
    186a:	8b e5       	ldi	r24, 0x5B	; 91
    186c:	97 e0       	ldi	r25, 0x07	; 7
    186e:	2d e1       	ldi	r18, 0x1D	; 29
    1870:	33 ef       	ldi	r19, 0xF3	; 243
    1872:	41 e0       	ldi	r20, 0x01	; 1
    1874:	50 e0       	ldi	r21, 0x00	; 0
    1876:	c9 d2       	rcall	.+1426   	; 0x1e0a <__divmodsi4>
    1878:	49 01       	movw	r8, r18
    187a:	5a 01       	movw	r10, r20
    187c:	9b 01       	movw	r18, r22
    187e:	ac 01       	movw	r20, r24
    1880:	a7 ea       	ldi	r26, 0xA7	; 167
    1882:	b1 e4       	ldi	r27, 0x41	; 65
    1884:	dd d2       	rcall	.+1466   	; 0x1e40 <__muluhisi3>
    1886:	6b 01       	movw	r12, r22
    1888:	7c 01       	movw	r14, r24
    188a:	ac ee       	ldi	r26, 0xEC	; 236
    188c:	b4 ef       	ldi	r27, 0xF4	; 244
    188e:	a5 01       	movw	r20, r10
    1890:	94 01       	movw	r18, r8
    1892:	e2 d2       	rcall	.+1476   	; 0x1e58 <__mulohisi3>
    1894:	c6 0e       	add	r12, r22
    1896:	d7 1e       	adc	r13, r23
    1898:	e8 1e       	adc	r14, r24
    189a:	f9 1e       	adc	r15, r25
    189c:	f7 fe       	sbrs	r15, 7
    189e:	06 c0       	rjmp	.+12     	; 0x18ac <do_rand+0x6e>
    18a0:	81 e0       	ldi	r24, 0x01	; 1
    18a2:	c8 1a       	sub	r12, r24
    18a4:	d1 08       	sbc	r13, r1
    18a6:	e1 08       	sbc	r14, r1
    18a8:	80 e8       	ldi	r24, 0x80	; 128
    18aa:	f8 0a       	sbc	r15, r24
    18ac:	c8 82       	st	Y, r12
    18ae:	d9 82       	std	Y+1, r13	; 0x01
    18b0:	ea 82       	std	Y+2, r14	; 0x02
    18b2:	fb 82       	std	Y+3, r15	; 0x03
    18b4:	e8 94       	clt
    18b6:	d7 f8       	bld	r13, 7
    18b8:	ee 24       	eor	r14, r14
    18ba:	ff 24       	eor	r15, r15
    18bc:	c6 01       	movw	r24, r12
    18be:	df 91       	pop	r29
    18c0:	cf 91       	pop	r28
    18c2:	ff 90       	pop	r15
    18c4:	ef 90       	pop	r14
    18c6:	df 90       	pop	r13
    18c8:	cf 90       	pop	r12
    18ca:	bf 90       	pop	r11
    18cc:	af 90       	pop	r10
    18ce:	9f 90       	pop	r9
    18d0:	8f 90       	pop	r8
    18d2:	08 95       	ret

000018d4 <rand_r>:
    18d4:	b4 cf       	rjmp	.-152    	; 0x183e <do_rand>

000018d6 <rand>:
    18d6:	86 e0       	ldi	r24, 0x06	; 6
    18d8:	91 e0       	ldi	r25, 0x01	; 1
    18da:	b1 cf       	rjmp	.-158    	; 0x183e <do_rand>

000018dc <srand>:
    18dc:	a0 e0       	ldi	r26, 0x00	; 0
    18de:	b0 e0       	ldi	r27, 0x00	; 0
    18e0:	80 93 06 01 	sts	0x0106, r24
    18e4:	90 93 07 01 	sts	0x0107, r25
    18e8:	a0 93 08 01 	sts	0x0108, r26
    18ec:	b0 93 09 01 	sts	0x0109, r27
    18f0:	08 95       	ret

000018f2 <sprintf>:
    18f2:	ae e0       	ldi	r26, 0x0E	; 14
    18f4:	b0 e0       	ldi	r27, 0x00	; 0
    18f6:	ee e7       	ldi	r30, 0x7E	; 126
    18f8:	fc e0       	ldi	r31, 0x0C	; 12
    18fa:	c0 c2       	rjmp	.+1408   	; 0x1e7c <__prologue_saves__+0x1c>
    18fc:	0d 89       	ldd	r16, Y+21	; 0x15
    18fe:	1e 89       	ldd	r17, Y+22	; 0x16
    1900:	86 e0       	ldi	r24, 0x06	; 6
    1902:	8c 83       	std	Y+4, r24	; 0x04
    1904:	1a 83       	std	Y+2, r17	; 0x02
    1906:	09 83       	std	Y+1, r16	; 0x01
    1908:	8f ef       	ldi	r24, 0xFF	; 255
    190a:	9f e7       	ldi	r25, 0x7F	; 127
    190c:	9e 83       	std	Y+6, r25	; 0x06
    190e:	8d 83       	std	Y+5, r24	; 0x05
    1910:	ce 01       	movw	r24, r28
    1912:	49 96       	adiw	r24, 0x19	; 25
    1914:	ac 01       	movw	r20, r24
    1916:	6f 89       	ldd	r22, Y+23	; 0x17
    1918:	78 8d       	ldd	r23, Y+24	; 0x18
    191a:	ce 01       	movw	r24, r28
    191c:	01 96       	adiw	r24, 0x01	; 1
    191e:	08 d0       	rcall	.+16     	; 0x1930 <vfprintf>
    1920:	ef 81       	ldd	r30, Y+7	; 0x07
    1922:	f8 85       	ldd	r31, Y+8	; 0x08
    1924:	e0 0f       	add	r30, r16
    1926:	f1 1f       	adc	r31, r17
    1928:	10 82       	st	Z, r1
    192a:	2e 96       	adiw	r28, 0x0e	; 14
    192c:	e4 e0       	ldi	r30, 0x04	; 4
    192e:	c2 c2       	rjmp	.+1412   	; 0x1eb4 <__epilogue_restores__+0x1c>

00001930 <vfprintf>:
    1930:	ac e0       	ldi	r26, 0x0C	; 12
    1932:	b0 e0       	ldi	r27, 0x00	; 0
    1934:	ed e9       	ldi	r30, 0x9D	; 157
    1936:	fc e0       	ldi	r31, 0x0C	; 12
    1938:	93 c2       	rjmp	.+1318   	; 0x1e60 <__prologue_saves__>
    193a:	7c 01       	movw	r14, r24
    193c:	6b 01       	movw	r12, r22
    193e:	8a 01       	movw	r16, r20
    1940:	fc 01       	movw	r30, r24
    1942:	17 82       	std	Z+7, r1	; 0x07
    1944:	16 82       	std	Z+6, r1	; 0x06
    1946:	83 81       	ldd	r24, Z+3	; 0x03
    1948:	81 ff       	sbrs	r24, 1
    194a:	b9 c1       	rjmp	.+882    	; 0x1cbe <vfprintf+0x38e>
    194c:	88 24       	eor	r8, r8
    194e:	83 94       	inc	r8
    1950:	91 2c       	mov	r9, r1
    1952:	8c 0e       	add	r8, r28
    1954:	9d 1e       	adc	r9, r29
    1956:	f7 01       	movw	r30, r14
    1958:	93 81       	ldd	r25, Z+3	; 0x03
    195a:	f6 01       	movw	r30, r12
    195c:	93 fd       	sbrc	r25, 3
    195e:	85 91       	lpm	r24, Z+
    1960:	93 ff       	sbrs	r25, 3
    1962:	81 91       	ld	r24, Z+
    1964:	6f 01       	movw	r12, r30
    1966:	88 23       	and	r24, r24
    1968:	09 f4       	brne	.+2      	; 0x196c <vfprintf+0x3c>
    196a:	a5 c1       	rjmp	.+842    	; 0x1cb6 <vfprintf+0x386>
    196c:	85 32       	cpi	r24, 0x25	; 37
    196e:	39 f4       	brne	.+14     	; 0x197e <vfprintf+0x4e>
    1970:	93 fd       	sbrc	r25, 3
    1972:	85 91       	lpm	r24, Z+
    1974:	93 ff       	sbrs	r25, 3
    1976:	81 91       	ld	r24, Z+
    1978:	6f 01       	movw	r12, r30
    197a:	85 32       	cpi	r24, 0x25	; 37
    197c:	21 f4       	brne	.+8      	; 0x1986 <vfprintf+0x56>
    197e:	b7 01       	movw	r22, r14
    1980:	90 e0       	ldi	r25, 0x00	; 0
    1982:	b9 d1       	rcall	.+882    	; 0x1cf6 <fputc>
    1984:	e8 cf       	rjmp	.-48     	; 0x1956 <vfprintf+0x26>
    1986:	51 2c       	mov	r5, r1
    1988:	31 2c       	mov	r3, r1
    198a:	20 e0       	ldi	r18, 0x00	; 0
    198c:	20 32       	cpi	r18, 0x20	; 32
    198e:	a8 f4       	brcc	.+42     	; 0x19ba <vfprintf+0x8a>
    1990:	8b 32       	cpi	r24, 0x2B	; 43
    1992:	61 f0       	breq	.+24     	; 0x19ac <vfprintf+0x7c>
    1994:	28 f4       	brcc	.+10     	; 0x19a0 <vfprintf+0x70>
    1996:	80 32       	cpi	r24, 0x20	; 32
    1998:	51 f0       	breq	.+20     	; 0x19ae <vfprintf+0x7e>
    199a:	83 32       	cpi	r24, 0x23	; 35
    199c:	71 f4       	brne	.+28     	; 0x19ba <vfprintf+0x8a>
    199e:	0b c0       	rjmp	.+22     	; 0x19b6 <vfprintf+0x86>
    19a0:	8d 32       	cpi	r24, 0x2D	; 45
    19a2:	39 f0       	breq	.+14     	; 0x19b2 <vfprintf+0x82>
    19a4:	80 33       	cpi	r24, 0x30	; 48
    19a6:	49 f4       	brne	.+18     	; 0x19ba <vfprintf+0x8a>
    19a8:	21 60       	ori	r18, 0x01	; 1
    19aa:	28 c0       	rjmp	.+80     	; 0x19fc <vfprintf+0xcc>
    19ac:	22 60       	ori	r18, 0x02	; 2
    19ae:	24 60       	ori	r18, 0x04	; 4
    19b0:	25 c0       	rjmp	.+74     	; 0x19fc <vfprintf+0xcc>
    19b2:	28 60       	ori	r18, 0x08	; 8
    19b4:	23 c0       	rjmp	.+70     	; 0x19fc <vfprintf+0xcc>
    19b6:	20 61       	ori	r18, 0x10	; 16
    19b8:	21 c0       	rjmp	.+66     	; 0x19fc <vfprintf+0xcc>
    19ba:	27 fd       	sbrc	r18, 7
    19bc:	27 c0       	rjmp	.+78     	; 0x1a0c <vfprintf+0xdc>
    19be:	38 2f       	mov	r19, r24
    19c0:	30 53       	subi	r19, 0x30	; 48
    19c2:	3a 30       	cpi	r19, 0x0A	; 10
    19c4:	78 f4       	brcc	.+30     	; 0x19e4 <vfprintf+0xb4>
    19c6:	26 ff       	sbrs	r18, 6
    19c8:	06 c0       	rjmp	.+12     	; 0x19d6 <vfprintf+0xa6>
    19ca:	fa e0       	ldi	r31, 0x0A	; 10
    19cc:	5f 9e       	mul	r5, r31
    19ce:	30 0d       	add	r19, r0
    19d0:	11 24       	eor	r1, r1
    19d2:	53 2e       	mov	r5, r19
    19d4:	13 c0       	rjmp	.+38     	; 0x19fc <vfprintf+0xcc>
    19d6:	8a e0       	ldi	r24, 0x0A	; 10
    19d8:	38 9e       	mul	r3, r24
    19da:	30 0d       	add	r19, r0
    19dc:	11 24       	eor	r1, r1
    19de:	33 2e       	mov	r3, r19
    19e0:	20 62       	ori	r18, 0x20	; 32
    19e2:	0c c0       	rjmp	.+24     	; 0x19fc <vfprintf+0xcc>
    19e4:	8e 32       	cpi	r24, 0x2E	; 46
    19e6:	21 f4       	brne	.+8      	; 0x19f0 <vfprintf+0xc0>
    19e8:	26 fd       	sbrc	r18, 6
    19ea:	65 c1       	rjmp	.+714    	; 0x1cb6 <vfprintf+0x386>
    19ec:	20 64       	ori	r18, 0x40	; 64
    19ee:	06 c0       	rjmp	.+12     	; 0x19fc <vfprintf+0xcc>
    19f0:	8c 36       	cpi	r24, 0x6C	; 108
    19f2:	11 f4       	brne	.+4      	; 0x19f8 <vfprintf+0xc8>
    19f4:	20 68       	ori	r18, 0x80	; 128
    19f6:	02 c0       	rjmp	.+4      	; 0x19fc <vfprintf+0xcc>
    19f8:	88 36       	cpi	r24, 0x68	; 104
    19fa:	41 f4       	brne	.+16     	; 0x1a0c <vfprintf+0xdc>
    19fc:	f6 01       	movw	r30, r12
    19fe:	93 fd       	sbrc	r25, 3
    1a00:	85 91       	lpm	r24, Z+
    1a02:	93 ff       	sbrs	r25, 3
    1a04:	81 91       	ld	r24, Z+
    1a06:	6f 01       	movw	r12, r30
    1a08:	81 11       	cpse	r24, r1
    1a0a:	c0 cf       	rjmp	.-128    	; 0x198c <vfprintf+0x5c>
    1a0c:	98 2f       	mov	r25, r24
    1a0e:	95 54       	subi	r25, 0x45	; 69
    1a10:	93 30       	cpi	r25, 0x03	; 3
    1a12:	18 f0       	brcs	.+6      	; 0x1a1a <vfprintf+0xea>
    1a14:	90 52       	subi	r25, 0x20	; 32
    1a16:	93 30       	cpi	r25, 0x03	; 3
    1a18:	28 f4       	brcc	.+10     	; 0x1a24 <vfprintf+0xf4>
    1a1a:	0c 5f       	subi	r16, 0xFC	; 252
    1a1c:	1f 4f       	sbci	r17, 0xFF	; 255
    1a1e:	ff e3       	ldi	r31, 0x3F	; 63
    1a20:	f9 83       	std	Y+1, r31	; 0x01
    1a22:	0d c0       	rjmp	.+26     	; 0x1a3e <vfprintf+0x10e>
    1a24:	83 36       	cpi	r24, 0x63	; 99
    1a26:	31 f0       	breq	.+12     	; 0x1a34 <vfprintf+0x104>
    1a28:	83 37       	cpi	r24, 0x73	; 115
    1a2a:	71 f0       	breq	.+28     	; 0x1a48 <vfprintf+0x118>
    1a2c:	83 35       	cpi	r24, 0x53	; 83
    1a2e:	09 f0       	breq	.+2      	; 0x1a32 <vfprintf+0x102>
    1a30:	5a c0       	rjmp	.+180    	; 0x1ae6 <vfprintf+0x1b6>
    1a32:	22 c0       	rjmp	.+68     	; 0x1a78 <vfprintf+0x148>
    1a34:	f8 01       	movw	r30, r16
    1a36:	80 81       	ld	r24, Z
    1a38:	89 83       	std	Y+1, r24	; 0x01
    1a3a:	0e 5f       	subi	r16, 0xFE	; 254
    1a3c:	1f 4f       	sbci	r17, 0xFF	; 255
    1a3e:	44 24       	eor	r4, r4
    1a40:	43 94       	inc	r4
    1a42:	51 2c       	mov	r5, r1
    1a44:	54 01       	movw	r10, r8
    1a46:	14 c0       	rjmp	.+40     	; 0x1a70 <vfprintf+0x140>
    1a48:	38 01       	movw	r6, r16
    1a4a:	f2 e0       	ldi	r31, 0x02	; 2
    1a4c:	6f 0e       	add	r6, r31
    1a4e:	71 1c       	adc	r7, r1
    1a50:	f8 01       	movw	r30, r16
    1a52:	a0 80       	ld	r10, Z
    1a54:	b1 80       	ldd	r11, Z+1	; 0x01
    1a56:	26 ff       	sbrs	r18, 6
    1a58:	03 c0       	rjmp	.+6      	; 0x1a60 <vfprintf+0x130>
    1a5a:	65 2d       	mov	r22, r5
    1a5c:	70 e0       	ldi	r23, 0x00	; 0
    1a5e:	02 c0       	rjmp	.+4      	; 0x1a64 <vfprintf+0x134>
    1a60:	6f ef       	ldi	r22, 0xFF	; 255
    1a62:	7f ef       	ldi	r23, 0xFF	; 255
    1a64:	c5 01       	movw	r24, r10
    1a66:	2c 87       	std	Y+12, r18	; 0x0c
    1a68:	3b d1       	rcall	.+630    	; 0x1ce0 <strnlen>
    1a6a:	2c 01       	movw	r4, r24
    1a6c:	83 01       	movw	r16, r6
    1a6e:	2c 85       	ldd	r18, Y+12	; 0x0c
    1a70:	6f e7       	ldi	r22, 0x7F	; 127
    1a72:	26 2e       	mov	r2, r22
    1a74:	22 22       	and	r2, r18
    1a76:	17 c0       	rjmp	.+46     	; 0x1aa6 <vfprintf+0x176>
    1a78:	38 01       	movw	r6, r16
    1a7a:	f2 e0       	ldi	r31, 0x02	; 2
    1a7c:	6f 0e       	add	r6, r31
    1a7e:	71 1c       	adc	r7, r1
    1a80:	f8 01       	movw	r30, r16
    1a82:	a0 80       	ld	r10, Z
    1a84:	b1 80       	ldd	r11, Z+1	; 0x01
    1a86:	26 ff       	sbrs	r18, 6
    1a88:	03 c0       	rjmp	.+6      	; 0x1a90 <vfprintf+0x160>
    1a8a:	65 2d       	mov	r22, r5
    1a8c:	70 e0       	ldi	r23, 0x00	; 0
    1a8e:	02 c0       	rjmp	.+4      	; 0x1a94 <vfprintf+0x164>
    1a90:	6f ef       	ldi	r22, 0xFF	; 255
    1a92:	7f ef       	ldi	r23, 0xFF	; 255
    1a94:	c5 01       	movw	r24, r10
    1a96:	2c 87       	std	Y+12, r18	; 0x0c
    1a98:	18 d1       	rcall	.+560    	; 0x1cca <strnlen_P>
    1a9a:	2c 01       	movw	r4, r24
    1a9c:	2c 85       	ldd	r18, Y+12	; 0x0c
    1a9e:	50 e8       	ldi	r21, 0x80	; 128
    1aa0:	25 2e       	mov	r2, r21
    1aa2:	22 2a       	or	r2, r18
    1aa4:	83 01       	movw	r16, r6
    1aa6:	23 fc       	sbrc	r2, 3
    1aa8:	1a c0       	rjmp	.+52     	; 0x1ade <vfprintf+0x1ae>
    1aaa:	05 c0       	rjmp	.+10     	; 0x1ab6 <vfprintf+0x186>
    1aac:	b7 01       	movw	r22, r14
    1aae:	80 e2       	ldi	r24, 0x20	; 32
    1ab0:	90 e0       	ldi	r25, 0x00	; 0
    1ab2:	21 d1       	rcall	.+578    	; 0x1cf6 <fputc>
    1ab4:	3a 94       	dec	r3
    1ab6:	83 2d       	mov	r24, r3
    1ab8:	90 e0       	ldi	r25, 0x00	; 0
    1aba:	48 16       	cp	r4, r24
    1abc:	59 06       	cpc	r5, r25
    1abe:	b0 f3       	brcs	.-20     	; 0x1aac <vfprintf+0x17c>
    1ac0:	0e c0       	rjmp	.+28     	; 0x1ade <vfprintf+0x1ae>
    1ac2:	f5 01       	movw	r30, r10
    1ac4:	27 fc       	sbrc	r2, 7
    1ac6:	85 91       	lpm	r24, Z+
    1ac8:	27 fe       	sbrs	r2, 7
    1aca:	81 91       	ld	r24, Z+
    1acc:	5f 01       	movw	r10, r30
    1ace:	b7 01       	movw	r22, r14
    1ad0:	90 e0       	ldi	r25, 0x00	; 0
    1ad2:	11 d1       	rcall	.+546    	; 0x1cf6 <fputc>
    1ad4:	31 10       	cpse	r3, r1
    1ad6:	3a 94       	dec	r3
    1ad8:	f1 e0       	ldi	r31, 0x01	; 1
    1ada:	4f 1a       	sub	r4, r31
    1adc:	51 08       	sbc	r5, r1
    1ade:	41 14       	cp	r4, r1
    1ae0:	51 04       	cpc	r5, r1
    1ae2:	79 f7       	brne	.-34     	; 0x1ac2 <vfprintf+0x192>
    1ae4:	e5 c0       	rjmp	.+458    	; 0x1cb0 <vfprintf+0x380>
    1ae6:	84 36       	cpi	r24, 0x64	; 100
    1ae8:	11 f0       	breq	.+4      	; 0x1aee <vfprintf+0x1be>
    1aea:	89 36       	cpi	r24, 0x69	; 105
    1aec:	39 f5       	brne	.+78     	; 0x1b3c <vfprintf+0x20c>
    1aee:	f8 01       	movw	r30, r16
    1af0:	27 ff       	sbrs	r18, 7
    1af2:	07 c0       	rjmp	.+14     	; 0x1b02 <vfprintf+0x1d2>
    1af4:	60 81       	ld	r22, Z
    1af6:	71 81       	ldd	r23, Z+1	; 0x01
    1af8:	82 81       	ldd	r24, Z+2	; 0x02
    1afa:	93 81       	ldd	r25, Z+3	; 0x03
    1afc:	0c 5f       	subi	r16, 0xFC	; 252
    1afe:	1f 4f       	sbci	r17, 0xFF	; 255
    1b00:	08 c0       	rjmp	.+16     	; 0x1b12 <vfprintf+0x1e2>
    1b02:	60 81       	ld	r22, Z
    1b04:	71 81       	ldd	r23, Z+1	; 0x01
    1b06:	88 27       	eor	r24, r24
    1b08:	77 fd       	sbrc	r23, 7
    1b0a:	80 95       	com	r24
    1b0c:	98 2f       	mov	r25, r24
    1b0e:	0e 5f       	subi	r16, 0xFE	; 254
    1b10:	1f 4f       	sbci	r17, 0xFF	; 255
    1b12:	4f e6       	ldi	r20, 0x6F	; 111
    1b14:	b4 2e       	mov	r11, r20
    1b16:	b2 22       	and	r11, r18
    1b18:	97 ff       	sbrs	r25, 7
    1b1a:	09 c0       	rjmp	.+18     	; 0x1b2e <vfprintf+0x1fe>
    1b1c:	90 95       	com	r25
    1b1e:	80 95       	com	r24
    1b20:	70 95       	com	r23
    1b22:	61 95       	neg	r22
    1b24:	7f 4f       	sbci	r23, 0xFF	; 255
    1b26:	8f 4f       	sbci	r24, 0xFF	; 255
    1b28:	9f 4f       	sbci	r25, 0xFF	; 255
    1b2a:	f0 e8       	ldi	r31, 0x80	; 128
    1b2c:	bf 2a       	or	r11, r31
    1b2e:	2a e0       	ldi	r18, 0x0A	; 10
    1b30:	30 e0       	ldi	r19, 0x00	; 0
    1b32:	a4 01       	movw	r20, r8
    1b34:	0c d1       	rcall	.+536    	; 0x1d4e <__ultoa_invert>
    1b36:	a8 2e       	mov	r10, r24
    1b38:	a8 18       	sub	r10, r8
    1b3a:	42 c0       	rjmp	.+132    	; 0x1bc0 <vfprintf+0x290>
    1b3c:	85 37       	cpi	r24, 0x75	; 117
    1b3e:	31 f4       	brne	.+12     	; 0x1b4c <vfprintf+0x21c>
    1b40:	3f ee       	ldi	r19, 0xEF	; 239
    1b42:	b3 2e       	mov	r11, r19
    1b44:	b2 22       	and	r11, r18
    1b46:	2a e0       	ldi	r18, 0x0A	; 10
    1b48:	30 e0       	ldi	r19, 0x00	; 0
    1b4a:	24 c0       	rjmp	.+72     	; 0x1b94 <vfprintf+0x264>
    1b4c:	99 ef       	ldi	r25, 0xF9	; 249
    1b4e:	b9 2e       	mov	r11, r25
    1b50:	b2 22       	and	r11, r18
    1b52:	8f 36       	cpi	r24, 0x6F	; 111
    1b54:	b9 f0       	breq	.+46     	; 0x1b84 <vfprintf+0x254>
    1b56:	20 f4       	brcc	.+8      	; 0x1b60 <vfprintf+0x230>
    1b58:	88 35       	cpi	r24, 0x58	; 88
    1b5a:	09 f0       	breq	.+2      	; 0x1b5e <vfprintf+0x22e>
    1b5c:	ac c0       	rjmp	.+344    	; 0x1cb6 <vfprintf+0x386>
    1b5e:	0d c0       	rjmp	.+26     	; 0x1b7a <vfprintf+0x24a>
    1b60:	80 37       	cpi	r24, 0x70	; 112
    1b62:	21 f0       	breq	.+8      	; 0x1b6c <vfprintf+0x23c>
    1b64:	88 37       	cpi	r24, 0x78	; 120
    1b66:	09 f0       	breq	.+2      	; 0x1b6a <vfprintf+0x23a>
    1b68:	a6 c0       	rjmp	.+332    	; 0x1cb6 <vfprintf+0x386>
    1b6a:	02 c0       	rjmp	.+4      	; 0x1b70 <vfprintf+0x240>
    1b6c:	20 e1       	ldi	r18, 0x10	; 16
    1b6e:	b2 2a       	or	r11, r18
    1b70:	b4 fe       	sbrs	r11, 4
    1b72:	0b c0       	rjmp	.+22     	; 0x1b8a <vfprintf+0x25a>
    1b74:	84 e0       	ldi	r24, 0x04	; 4
    1b76:	b8 2a       	or	r11, r24
    1b78:	08 c0       	rjmp	.+16     	; 0x1b8a <vfprintf+0x25a>
    1b7a:	24 ff       	sbrs	r18, 4
    1b7c:	09 c0       	rjmp	.+18     	; 0x1b90 <vfprintf+0x260>
    1b7e:	e6 e0       	ldi	r30, 0x06	; 6
    1b80:	be 2a       	or	r11, r30
    1b82:	06 c0       	rjmp	.+12     	; 0x1b90 <vfprintf+0x260>
    1b84:	28 e0       	ldi	r18, 0x08	; 8
    1b86:	30 e0       	ldi	r19, 0x00	; 0
    1b88:	05 c0       	rjmp	.+10     	; 0x1b94 <vfprintf+0x264>
    1b8a:	20 e1       	ldi	r18, 0x10	; 16
    1b8c:	30 e0       	ldi	r19, 0x00	; 0
    1b8e:	02 c0       	rjmp	.+4      	; 0x1b94 <vfprintf+0x264>
    1b90:	20 e1       	ldi	r18, 0x10	; 16
    1b92:	32 e0       	ldi	r19, 0x02	; 2
    1b94:	f8 01       	movw	r30, r16
    1b96:	b7 fe       	sbrs	r11, 7
    1b98:	07 c0       	rjmp	.+14     	; 0x1ba8 <vfprintf+0x278>
    1b9a:	60 81       	ld	r22, Z
    1b9c:	71 81       	ldd	r23, Z+1	; 0x01
    1b9e:	82 81       	ldd	r24, Z+2	; 0x02
    1ba0:	93 81       	ldd	r25, Z+3	; 0x03
    1ba2:	0c 5f       	subi	r16, 0xFC	; 252
    1ba4:	1f 4f       	sbci	r17, 0xFF	; 255
    1ba6:	06 c0       	rjmp	.+12     	; 0x1bb4 <vfprintf+0x284>
    1ba8:	60 81       	ld	r22, Z
    1baa:	71 81       	ldd	r23, Z+1	; 0x01
    1bac:	80 e0       	ldi	r24, 0x00	; 0
    1bae:	90 e0       	ldi	r25, 0x00	; 0
    1bb0:	0e 5f       	subi	r16, 0xFE	; 254
    1bb2:	1f 4f       	sbci	r17, 0xFF	; 255
    1bb4:	a4 01       	movw	r20, r8
    1bb6:	cb d0       	rcall	.+406    	; 0x1d4e <__ultoa_invert>
    1bb8:	a8 2e       	mov	r10, r24
    1bba:	a8 18       	sub	r10, r8
    1bbc:	ff e7       	ldi	r31, 0x7F	; 127
    1bbe:	bf 22       	and	r11, r31
    1bc0:	b6 fe       	sbrs	r11, 6
    1bc2:	0b c0       	rjmp	.+22     	; 0x1bda <vfprintf+0x2aa>
    1bc4:	2b 2d       	mov	r18, r11
    1bc6:	2e 7f       	andi	r18, 0xFE	; 254
    1bc8:	a5 14       	cp	r10, r5
    1bca:	50 f4       	brcc	.+20     	; 0x1be0 <vfprintf+0x2b0>
    1bcc:	b4 fe       	sbrs	r11, 4
    1bce:	0a c0       	rjmp	.+20     	; 0x1be4 <vfprintf+0x2b4>
    1bd0:	b2 fc       	sbrc	r11, 2
    1bd2:	08 c0       	rjmp	.+16     	; 0x1be4 <vfprintf+0x2b4>
    1bd4:	2b 2d       	mov	r18, r11
    1bd6:	2e 7e       	andi	r18, 0xEE	; 238
    1bd8:	05 c0       	rjmp	.+10     	; 0x1be4 <vfprintf+0x2b4>
    1bda:	7a 2c       	mov	r7, r10
    1bdc:	2b 2d       	mov	r18, r11
    1bde:	03 c0       	rjmp	.+6      	; 0x1be6 <vfprintf+0x2b6>
    1be0:	7a 2c       	mov	r7, r10
    1be2:	01 c0       	rjmp	.+2      	; 0x1be6 <vfprintf+0x2b6>
    1be4:	75 2c       	mov	r7, r5
    1be6:	24 ff       	sbrs	r18, 4
    1be8:	0d c0       	rjmp	.+26     	; 0x1c04 <vfprintf+0x2d4>
    1bea:	fe 01       	movw	r30, r28
    1bec:	ea 0d       	add	r30, r10
    1bee:	f1 1d       	adc	r31, r1
    1bf0:	80 81       	ld	r24, Z
    1bf2:	80 33       	cpi	r24, 0x30	; 48
    1bf4:	11 f4       	brne	.+4      	; 0x1bfa <vfprintf+0x2ca>
    1bf6:	29 7e       	andi	r18, 0xE9	; 233
    1bf8:	09 c0       	rjmp	.+18     	; 0x1c0c <vfprintf+0x2dc>
    1bfa:	22 ff       	sbrs	r18, 2
    1bfc:	06 c0       	rjmp	.+12     	; 0x1c0a <vfprintf+0x2da>
    1bfe:	73 94       	inc	r7
    1c00:	73 94       	inc	r7
    1c02:	04 c0       	rjmp	.+8      	; 0x1c0c <vfprintf+0x2dc>
    1c04:	82 2f       	mov	r24, r18
    1c06:	86 78       	andi	r24, 0x86	; 134
    1c08:	09 f0       	breq	.+2      	; 0x1c0c <vfprintf+0x2dc>
    1c0a:	73 94       	inc	r7
    1c0c:	23 fd       	sbrc	r18, 3
    1c0e:	13 c0       	rjmp	.+38     	; 0x1c36 <vfprintf+0x306>
    1c10:	20 ff       	sbrs	r18, 0
    1c12:	0e c0       	rjmp	.+28     	; 0x1c30 <vfprintf+0x300>
    1c14:	5a 2c       	mov	r5, r10
    1c16:	73 14       	cp	r7, r3
    1c18:	58 f4       	brcc	.+22     	; 0x1c30 <vfprintf+0x300>
    1c1a:	53 0c       	add	r5, r3
    1c1c:	57 18       	sub	r5, r7
    1c1e:	73 2c       	mov	r7, r3
    1c20:	07 c0       	rjmp	.+14     	; 0x1c30 <vfprintf+0x300>
    1c22:	b7 01       	movw	r22, r14
    1c24:	80 e2       	ldi	r24, 0x20	; 32
    1c26:	90 e0       	ldi	r25, 0x00	; 0
    1c28:	2c 87       	std	Y+12, r18	; 0x0c
    1c2a:	65 d0       	rcall	.+202    	; 0x1cf6 <fputc>
    1c2c:	73 94       	inc	r7
    1c2e:	2c 85       	ldd	r18, Y+12	; 0x0c
    1c30:	73 14       	cp	r7, r3
    1c32:	b8 f3       	brcs	.-18     	; 0x1c22 <vfprintf+0x2f2>
    1c34:	04 c0       	rjmp	.+8      	; 0x1c3e <vfprintf+0x30e>
    1c36:	73 14       	cp	r7, r3
    1c38:	10 f4       	brcc	.+4      	; 0x1c3e <vfprintf+0x30e>
    1c3a:	37 18       	sub	r3, r7
    1c3c:	01 c0       	rjmp	.+2      	; 0x1c40 <vfprintf+0x310>
    1c3e:	31 2c       	mov	r3, r1
    1c40:	24 ff       	sbrs	r18, 4
    1c42:	11 c0       	rjmp	.+34     	; 0x1c66 <vfprintf+0x336>
    1c44:	b7 01       	movw	r22, r14
    1c46:	80 e3       	ldi	r24, 0x30	; 48
    1c48:	90 e0       	ldi	r25, 0x00	; 0
    1c4a:	2c 87       	std	Y+12, r18	; 0x0c
    1c4c:	54 d0       	rcall	.+168    	; 0x1cf6 <fputc>
    1c4e:	2c 85       	ldd	r18, Y+12	; 0x0c
    1c50:	22 ff       	sbrs	r18, 2
    1c52:	1c c0       	rjmp	.+56     	; 0x1c8c <vfprintf+0x35c>
    1c54:	21 ff       	sbrs	r18, 1
    1c56:	03 c0       	rjmp	.+6      	; 0x1c5e <vfprintf+0x32e>
    1c58:	88 e5       	ldi	r24, 0x58	; 88
    1c5a:	90 e0       	ldi	r25, 0x00	; 0
    1c5c:	02 c0       	rjmp	.+4      	; 0x1c62 <vfprintf+0x332>
    1c5e:	88 e7       	ldi	r24, 0x78	; 120
    1c60:	90 e0       	ldi	r25, 0x00	; 0
    1c62:	b7 01       	movw	r22, r14
    1c64:	0c c0       	rjmp	.+24     	; 0x1c7e <vfprintf+0x34e>
    1c66:	82 2f       	mov	r24, r18
    1c68:	86 78       	andi	r24, 0x86	; 134
    1c6a:	81 f0       	breq	.+32     	; 0x1c8c <vfprintf+0x35c>
    1c6c:	21 fd       	sbrc	r18, 1
    1c6e:	02 c0       	rjmp	.+4      	; 0x1c74 <vfprintf+0x344>
    1c70:	80 e2       	ldi	r24, 0x20	; 32
    1c72:	01 c0       	rjmp	.+2      	; 0x1c76 <vfprintf+0x346>
    1c74:	8b e2       	ldi	r24, 0x2B	; 43
    1c76:	27 fd       	sbrc	r18, 7
    1c78:	8d e2       	ldi	r24, 0x2D	; 45
    1c7a:	b7 01       	movw	r22, r14
    1c7c:	90 e0       	ldi	r25, 0x00	; 0
    1c7e:	3b d0       	rcall	.+118    	; 0x1cf6 <fputc>
    1c80:	05 c0       	rjmp	.+10     	; 0x1c8c <vfprintf+0x35c>
    1c82:	b7 01       	movw	r22, r14
    1c84:	80 e3       	ldi	r24, 0x30	; 48
    1c86:	90 e0       	ldi	r25, 0x00	; 0
    1c88:	36 d0       	rcall	.+108    	; 0x1cf6 <fputc>
    1c8a:	5a 94       	dec	r5
    1c8c:	a5 14       	cp	r10, r5
    1c8e:	c8 f3       	brcs	.-14     	; 0x1c82 <vfprintf+0x352>
    1c90:	aa 94       	dec	r10
    1c92:	f4 01       	movw	r30, r8
    1c94:	ea 0d       	add	r30, r10
    1c96:	f1 1d       	adc	r31, r1
    1c98:	b7 01       	movw	r22, r14
    1c9a:	80 81       	ld	r24, Z
    1c9c:	90 e0       	ldi	r25, 0x00	; 0
    1c9e:	2b d0       	rcall	.+86     	; 0x1cf6 <fputc>
    1ca0:	a1 10       	cpse	r10, r1
    1ca2:	f6 cf       	rjmp	.-20     	; 0x1c90 <vfprintf+0x360>
    1ca4:	05 c0       	rjmp	.+10     	; 0x1cb0 <vfprintf+0x380>
    1ca6:	b7 01       	movw	r22, r14
    1ca8:	80 e2       	ldi	r24, 0x20	; 32
    1caa:	90 e0       	ldi	r25, 0x00	; 0
    1cac:	24 d0       	rcall	.+72     	; 0x1cf6 <fputc>
    1cae:	3a 94       	dec	r3
    1cb0:	31 10       	cpse	r3, r1
    1cb2:	f9 cf       	rjmp	.-14     	; 0x1ca6 <vfprintf+0x376>
    1cb4:	50 ce       	rjmp	.-864    	; 0x1956 <vfprintf+0x26>
    1cb6:	f7 01       	movw	r30, r14
    1cb8:	26 81       	ldd	r18, Z+6	; 0x06
    1cba:	37 81       	ldd	r19, Z+7	; 0x07
    1cbc:	02 c0       	rjmp	.+4      	; 0x1cc2 <vfprintf+0x392>
    1cbe:	2f ef       	ldi	r18, 0xFF	; 255
    1cc0:	3f ef       	ldi	r19, 0xFF	; 255
    1cc2:	c9 01       	movw	r24, r18
    1cc4:	2c 96       	adiw	r28, 0x0c	; 12
    1cc6:	e2 e1       	ldi	r30, 0x12	; 18
    1cc8:	e7 c0       	rjmp	.+462    	; 0x1e98 <__epilogue_restores__>

00001cca <strnlen_P>:
    1cca:	fc 01       	movw	r30, r24
    1ccc:	05 90       	lpm	r0, Z+
    1cce:	61 50       	subi	r22, 0x01	; 1
    1cd0:	70 40       	sbci	r23, 0x00	; 0
    1cd2:	01 10       	cpse	r0, r1
    1cd4:	d8 f7       	brcc	.-10     	; 0x1ccc <strnlen_P+0x2>
    1cd6:	80 95       	com	r24
    1cd8:	90 95       	com	r25
    1cda:	8e 0f       	add	r24, r30
    1cdc:	9f 1f       	adc	r25, r31
    1cde:	08 95       	ret

00001ce0 <strnlen>:
    1ce0:	fc 01       	movw	r30, r24
    1ce2:	61 50       	subi	r22, 0x01	; 1
    1ce4:	70 40       	sbci	r23, 0x00	; 0
    1ce6:	01 90       	ld	r0, Z+
    1ce8:	01 10       	cpse	r0, r1
    1cea:	d8 f7       	brcc	.-10     	; 0x1ce2 <strnlen+0x2>
    1cec:	80 95       	com	r24
    1cee:	90 95       	com	r25
    1cf0:	8e 0f       	add	r24, r30
    1cf2:	9f 1f       	adc	r25, r31
    1cf4:	08 95       	ret

00001cf6 <fputc>:
    1cf6:	0f 93       	push	r16
    1cf8:	1f 93       	push	r17
    1cfa:	cf 93       	push	r28
    1cfc:	df 93       	push	r29
    1cfe:	8c 01       	movw	r16, r24
    1d00:	eb 01       	movw	r28, r22
    1d02:	8b 81       	ldd	r24, Y+3	; 0x03
    1d04:	81 fd       	sbrc	r24, 1
    1d06:	03 c0       	rjmp	.+6      	; 0x1d0e <fputc+0x18>
    1d08:	0f ef       	ldi	r16, 0xFF	; 255
    1d0a:	1f ef       	ldi	r17, 0xFF	; 255
    1d0c:	1a c0       	rjmp	.+52     	; 0x1d42 <fputc+0x4c>
    1d0e:	82 ff       	sbrs	r24, 2
    1d10:	0d c0       	rjmp	.+26     	; 0x1d2c <fputc+0x36>
    1d12:	2e 81       	ldd	r18, Y+6	; 0x06
    1d14:	3f 81       	ldd	r19, Y+7	; 0x07
    1d16:	8c 81       	ldd	r24, Y+4	; 0x04
    1d18:	9d 81       	ldd	r25, Y+5	; 0x05
    1d1a:	28 17       	cp	r18, r24
    1d1c:	39 07       	cpc	r19, r25
    1d1e:	64 f4       	brge	.+24     	; 0x1d38 <fputc+0x42>
    1d20:	e8 81       	ld	r30, Y
    1d22:	f9 81       	ldd	r31, Y+1	; 0x01
    1d24:	01 93       	st	Z+, r16
    1d26:	f9 83       	std	Y+1, r31	; 0x01
    1d28:	e8 83       	st	Y, r30
    1d2a:	06 c0       	rjmp	.+12     	; 0x1d38 <fputc+0x42>
    1d2c:	e8 85       	ldd	r30, Y+8	; 0x08
    1d2e:	f9 85       	ldd	r31, Y+9	; 0x09
    1d30:	80 2f       	mov	r24, r16
    1d32:	09 95       	icall
    1d34:	89 2b       	or	r24, r25
    1d36:	41 f7       	brne	.-48     	; 0x1d08 <fputc+0x12>
    1d38:	8e 81       	ldd	r24, Y+6	; 0x06
    1d3a:	9f 81       	ldd	r25, Y+7	; 0x07
    1d3c:	01 96       	adiw	r24, 0x01	; 1
    1d3e:	9f 83       	std	Y+7, r25	; 0x07
    1d40:	8e 83       	std	Y+6, r24	; 0x06
    1d42:	c8 01       	movw	r24, r16
    1d44:	df 91       	pop	r29
    1d46:	cf 91       	pop	r28
    1d48:	1f 91       	pop	r17
    1d4a:	0f 91       	pop	r16
    1d4c:	08 95       	ret

00001d4e <__ultoa_invert>:
    1d4e:	fa 01       	movw	r30, r20
    1d50:	aa 27       	eor	r26, r26
    1d52:	28 30       	cpi	r18, 0x08	; 8
    1d54:	51 f1       	breq	.+84     	; 0x1daa <__ultoa_invert+0x5c>
    1d56:	20 31       	cpi	r18, 0x10	; 16
    1d58:	81 f1       	breq	.+96     	; 0x1dba <__ultoa_invert+0x6c>
    1d5a:	e8 94       	clt
    1d5c:	6f 93       	push	r22
    1d5e:	6e 7f       	andi	r22, 0xFE	; 254
    1d60:	6e 5f       	subi	r22, 0xFE	; 254
    1d62:	7f 4f       	sbci	r23, 0xFF	; 255
    1d64:	8f 4f       	sbci	r24, 0xFF	; 255
    1d66:	9f 4f       	sbci	r25, 0xFF	; 255
    1d68:	af 4f       	sbci	r26, 0xFF	; 255
    1d6a:	b1 e0       	ldi	r27, 0x01	; 1
    1d6c:	3e d0       	rcall	.+124    	; 0x1dea <__ultoa_invert+0x9c>
    1d6e:	b4 e0       	ldi	r27, 0x04	; 4
    1d70:	3c d0       	rcall	.+120    	; 0x1dea <__ultoa_invert+0x9c>
    1d72:	67 0f       	add	r22, r23
    1d74:	78 1f       	adc	r23, r24
    1d76:	89 1f       	adc	r24, r25
    1d78:	9a 1f       	adc	r25, r26
    1d7a:	a1 1d       	adc	r26, r1
    1d7c:	68 0f       	add	r22, r24
    1d7e:	79 1f       	adc	r23, r25
    1d80:	8a 1f       	adc	r24, r26
    1d82:	91 1d       	adc	r25, r1
    1d84:	a1 1d       	adc	r26, r1
    1d86:	6a 0f       	add	r22, r26
    1d88:	71 1d       	adc	r23, r1
    1d8a:	81 1d       	adc	r24, r1
    1d8c:	91 1d       	adc	r25, r1
    1d8e:	a1 1d       	adc	r26, r1
    1d90:	20 d0       	rcall	.+64     	; 0x1dd2 <__ultoa_invert+0x84>
    1d92:	09 f4       	brne	.+2      	; 0x1d96 <__ultoa_invert+0x48>
    1d94:	68 94       	set
    1d96:	3f 91       	pop	r19
    1d98:	2a e0       	ldi	r18, 0x0A	; 10
    1d9a:	26 9f       	mul	r18, r22
    1d9c:	11 24       	eor	r1, r1
    1d9e:	30 19       	sub	r19, r0
    1da0:	30 5d       	subi	r19, 0xD0	; 208
    1da2:	31 93       	st	Z+, r19
    1da4:	de f6       	brtc	.-74     	; 0x1d5c <__ultoa_invert+0xe>
    1da6:	cf 01       	movw	r24, r30
    1da8:	08 95       	ret
    1daa:	46 2f       	mov	r20, r22
    1dac:	47 70       	andi	r20, 0x07	; 7
    1dae:	40 5d       	subi	r20, 0xD0	; 208
    1db0:	41 93       	st	Z+, r20
    1db2:	b3 e0       	ldi	r27, 0x03	; 3
    1db4:	0f d0       	rcall	.+30     	; 0x1dd4 <__ultoa_invert+0x86>
    1db6:	c9 f7       	brne	.-14     	; 0x1daa <__ultoa_invert+0x5c>
    1db8:	f6 cf       	rjmp	.-20     	; 0x1da6 <__ultoa_invert+0x58>
    1dba:	46 2f       	mov	r20, r22
    1dbc:	4f 70       	andi	r20, 0x0F	; 15
    1dbe:	40 5d       	subi	r20, 0xD0	; 208
    1dc0:	4a 33       	cpi	r20, 0x3A	; 58
    1dc2:	18 f0       	brcs	.+6      	; 0x1dca <__ultoa_invert+0x7c>
    1dc4:	49 5d       	subi	r20, 0xD9	; 217
    1dc6:	31 fd       	sbrc	r19, 1
    1dc8:	40 52       	subi	r20, 0x20	; 32
    1dca:	41 93       	st	Z+, r20
    1dcc:	02 d0       	rcall	.+4      	; 0x1dd2 <__ultoa_invert+0x84>
    1dce:	a9 f7       	brne	.-22     	; 0x1dba <__ultoa_invert+0x6c>
    1dd0:	ea cf       	rjmp	.-44     	; 0x1da6 <__ultoa_invert+0x58>
    1dd2:	b4 e0       	ldi	r27, 0x04	; 4
    1dd4:	a6 95       	lsr	r26
    1dd6:	97 95       	ror	r25
    1dd8:	87 95       	ror	r24
    1dda:	77 95       	ror	r23
    1ddc:	67 95       	ror	r22
    1dde:	ba 95       	dec	r27
    1de0:	c9 f7       	brne	.-14     	; 0x1dd4 <__ultoa_invert+0x86>
    1de2:	00 97       	sbiw	r24, 0x00	; 0
    1de4:	61 05       	cpc	r22, r1
    1de6:	71 05       	cpc	r23, r1
    1de8:	08 95       	ret
    1dea:	9b 01       	movw	r18, r22
    1dec:	ac 01       	movw	r20, r24
    1dee:	0a 2e       	mov	r0, r26
    1df0:	06 94       	lsr	r0
    1df2:	57 95       	ror	r21
    1df4:	47 95       	ror	r20
    1df6:	37 95       	ror	r19
    1df8:	27 95       	ror	r18
    1dfa:	ba 95       	dec	r27
    1dfc:	c9 f7       	brne	.-14     	; 0x1df0 <__ultoa_invert+0xa2>
    1dfe:	62 0f       	add	r22, r18
    1e00:	73 1f       	adc	r23, r19
    1e02:	84 1f       	adc	r24, r20
    1e04:	95 1f       	adc	r25, r21
    1e06:	a0 1d       	adc	r26, r0
    1e08:	08 95       	ret

00001e0a <__divmodsi4>:
    1e0a:	05 2e       	mov	r0, r21
    1e0c:	97 fb       	bst	r25, 7
    1e0e:	16 f4       	brtc	.+4      	; 0x1e14 <__divmodsi4+0xa>
    1e10:	00 94       	com	r0
    1e12:	06 d0       	rcall	.+12     	; 0x1e20 <__divmodsi4_neg1>
    1e14:	57 fd       	sbrc	r21, 7
    1e16:	0c d0       	rcall	.+24     	; 0x1e30 <__divmodsi4_neg2>
    1e18:	5a d0       	rcall	.+180    	; 0x1ece <__udivmodsi4>
    1e1a:	07 fc       	sbrc	r0, 7
    1e1c:	09 d0       	rcall	.+18     	; 0x1e30 <__divmodsi4_neg2>
    1e1e:	7e f4       	brtc	.+30     	; 0x1e3e <__divmodsi4_exit>

00001e20 <__divmodsi4_neg1>:
    1e20:	90 95       	com	r25
    1e22:	80 95       	com	r24
    1e24:	70 95       	com	r23
    1e26:	61 95       	neg	r22
    1e28:	7f 4f       	sbci	r23, 0xFF	; 255
    1e2a:	8f 4f       	sbci	r24, 0xFF	; 255
    1e2c:	9f 4f       	sbci	r25, 0xFF	; 255
    1e2e:	08 95       	ret

00001e30 <__divmodsi4_neg2>:
    1e30:	50 95       	com	r21
    1e32:	40 95       	com	r20
    1e34:	30 95       	com	r19
    1e36:	21 95       	neg	r18
    1e38:	3f 4f       	sbci	r19, 0xFF	; 255
    1e3a:	4f 4f       	sbci	r20, 0xFF	; 255
    1e3c:	5f 4f       	sbci	r21, 0xFF	; 255

00001e3e <__divmodsi4_exit>:
    1e3e:	08 95       	ret

00001e40 <__muluhisi3>:
    1e40:	68 d0       	rcall	.+208    	; 0x1f12 <__umulhisi3>
    1e42:	a5 9f       	mul	r26, r21
    1e44:	90 0d       	add	r25, r0
    1e46:	b4 9f       	mul	r27, r20
    1e48:	90 0d       	add	r25, r0
    1e4a:	a4 9f       	mul	r26, r20
    1e4c:	80 0d       	add	r24, r0
    1e4e:	91 1d       	adc	r25, r1
    1e50:	11 24       	eor	r1, r1
    1e52:	08 95       	ret

00001e54 <__mulshisi3>:
    1e54:	b7 ff       	sbrs	r27, 7
    1e56:	f4 cf       	rjmp	.-24     	; 0x1e40 <__muluhisi3>

00001e58 <__mulohisi3>:
    1e58:	f3 df       	rcall	.-26     	; 0x1e40 <__muluhisi3>
    1e5a:	82 1b       	sub	r24, r18
    1e5c:	93 0b       	sbc	r25, r19
    1e5e:	08 95       	ret

00001e60 <__prologue_saves__>:
    1e60:	2f 92       	push	r2
    1e62:	3f 92       	push	r3
    1e64:	4f 92       	push	r4
    1e66:	5f 92       	push	r5
    1e68:	6f 92       	push	r6
    1e6a:	7f 92       	push	r7
    1e6c:	8f 92       	push	r8
    1e6e:	9f 92       	push	r9
    1e70:	af 92       	push	r10
    1e72:	bf 92       	push	r11
    1e74:	cf 92       	push	r12
    1e76:	df 92       	push	r13
    1e78:	ef 92       	push	r14
    1e7a:	ff 92       	push	r15
    1e7c:	0f 93       	push	r16
    1e7e:	1f 93       	push	r17
    1e80:	cf 93       	push	r28
    1e82:	df 93       	push	r29
    1e84:	cd b7       	in	r28, 0x3d	; 61
    1e86:	de b7       	in	r29, 0x3e	; 62
    1e88:	ca 1b       	sub	r28, r26
    1e8a:	db 0b       	sbc	r29, r27
    1e8c:	0f b6       	in	r0, 0x3f	; 63
    1e8e:	f8 94       	cli
    1e90:	de bf       	out	0x3e, r29	; 62
    1e92:	0f be       	out	0x3f, r0	; 63
    1e94:	cd bf       	out	0x3d, r28	; 61
    1e96:	09 94       	ijmp

00001e98 <__epilogue_restores__>:
    1e98:	2a 88       	ldd	r2, Y+18	; 0x12
    1e9a:	39 88       	ldd	r3, Y+17	; 0x11
    1e9c:	48 88       	ldd	r4, Y+16	; 0x10
    1e9e:	5f 84       	ldd	r5, Y+15	; 0x0f
    1ea0:	6e 84       	ldd	r6, Y+14	; 0x0e
    1ea2:	7d 84       	ldd	r7, Y+13	; 0x0d
    1ea4:	8c 84       	ldd	r8, Y+12	; 0x0c
    1ea6:	9b 84       	ldd	r9, Y+11	; 0x0b
    1ea8:	aa 84       	ldd	r10, Y+10	; 0x0a
    1eaa:	b9 84       	ldd	r11, Y+9	; 0x09
    1eac:	c8 84       	ldd	r12, Y+8	; 0x08
    1eae:	df 80       	ldd	r13, Y+7	; 0x07
    1eb0:	ee 80       	ldd	r14, Y+6	; 0x06
    1eb2:	fd 80       	ldd	r15, Y+5	; 0x05
    1eb4:	0c 81       	ldd	r16, Y+4	; 0x04
    1eb6:	1b 81       	ldd	r17, Y+3	; 0x03
    1eb8:	aa 81       	ldd	r26, Y+2	; 0x02
    1eba:	b9 81       	ldd	r27, Y+1	; 0x01
    1ebc:	ce 0f       	add	r28, r30
    1ebe:	d1 1d       	adc	r29, r1
    1ec0:	0f b6       	in	r0, 0x3f	; 63
    1ec2:	f8 94       	cli
    1ec4:	de bf       	out	0x3e, r29	; 62
    1ec6:	0f be       	out	0x3f, r0	; 63
    1ec8:	cd bf       	out	0x3d, r28	; 61
    1eca:	ed 01       	movw	r28, r26
    1ecc:	08 95       	ret

00001ece <__udivmodsi4>:
    1ece:	a1 e2       	ldi	r26, 0x21	; 33
    1ed0:	1a 2e       	mov	r1, r26
    1ed2:	aa 1b       	sub	r26, r26
    1ed4:	bb 1b       	sub	r27, r27
    1ed6:	fd 01       	movw	r30, r26
    1ed8:	0d c0       	rjmp	.+26     	; 0x1ef4 <__udivmodsi4_ep>

00001eda <__udivmodsi4_loop>:
    1eda:	aa 1f       	adc	r26, r26
    1edc:	bb 1f       	adc	r27, r27
    1ede:	ee 1f       	adc	r30, r30
    1ee0:	ff 1f       	adc	r31, r31
    1ee2:	a2 17       	cp	r26, r18
    1ee4:	b3 07       	cpc	r27, r19
    1ee6:	e4 07       	cpc	r30, r20
    1ee8:	f5 07       	cpc	r31, r21
    1eea:	20 f0       	brcs	.+8      	; 0x1ef4 <__udivmodsi4_ep>
    1eec:	a2 1b       	sub	r26, r18
    1eee:	b3 0b       	sbc	r27, r19
    1ef0:	e4 0b       	sbc	r30, r20
    1ef2:	f5 0b       	sbc	r31, r21

00001ef4 <__udivmodsi4_ep>:
    1ef4:	66 1f       	adc	r22, r22
    1ef6:	77 1f       	adc	r23, r23
    1ef8:	88 1f       	adc	r24, r24
    1efa:	99 1f       	adc	r25, r25
    1efc:	1a 94       	dec	r1
    1efe:	69 f7       	brne	.-38     	; 0x1eda <__udivmodsi4_loop>
    1f00:	60 95       	com	r22
    1f02:	70 95       	com	r23
    1f04:	80 95       	com	r24
    1f06:	90 95       	com	r25
    1f08:	9b 01       	movw	r18, r22
    1f0a:	ac 01       	movw	r20, r24
    1f0c:	bd 01       	movw	r22, r26
    1f0e:	cf 01       	movw	r24, r30
    1f10:	08 95       	ret

00001f12 <__umulhisi3>:
    1f12:	a2 9f       	mul	r26, r18
    1f14:	b0 01       	movw	r22, r0
    1f16:	b3 9f       	mul	r27, r19
    1f18:	c0 01       	movw	r24, r0
    1f1a:	a3 9f       	mul	r26, r19
    1f1c:	01 d0       	rcall	.+2      	; 0x1f20 <__umulhisi3+0xe>
    1f1e:	b2 9f       	mul	r27, r18
    1f20:	70 0d       	add	r23, r0
    1f22:	81 1d       	adc	r24, r1
    1f24:	11 24       	eor	r1, r1
    1f26:	91 1d       	adc	r25, r1
    1f28:	08 95       	ret

00001f2a <_exit>:
    1f2a:	f8 94       	cli

00001f2c <__stop_program>:
    1f2c:	ff cf       	rjmp	.-2      	; 0x1f2c <__stop_program>
