   1               		.file	"start_screen.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.rodata.str1.1,"aMS",@progbits,1
  11               	.LC0:
  12 0000 3300      		.string	"3"
  13               	.LC1:
  14 0002 3200      		.string	"2"
  15               	.LC2:
  16 0004 3100      		.string	"1"
  17               		.section	.text.game_countdown,"ax",@progbits
  18               	.global	game_countdown
  20               	game_countdown:
  21               	.LFB7:
  22               		.file 1 "start_screen.c"
   1:start_screen.c **** /*
   2:start_screen.c ****  * start_screen.c
   3:start_screen.c ****  *
   4:start_screen.c ****  *  Created on: 8 May 2015
   5:start_screen.c ****  *      Author: Jai Spicer
   6:start_screen.c ****  */
   7:start_screen.c **** 
   8:start_screen.c **** #include <util/delay.h>
   9:start_screen.c **** 
  10:start_screen.c **** #include "start_screen.h"
  11:start_screen.c **** #include "friendly_ports.h"
  12:start_screen.c **** 
  13:start_screen.c **** void setup_start_screen() { // Write the different strings at the correct locations on the screen
  14:start_screen.c **** 	clear();
  15:start_screen.c **** 	draw_string("ZombieDash",15,0);
  16:start_screen.c **** 	draw_string("Teensy Edition",7,9);
  17:start_screen.c **** 	draw_string("n9378880",19,27);
  18:start_screen.c **** 	draw_string("Jai Spicer",15,36);
  19:start_screen.c **** 	refresh();
  20:start_screen.c **** 	random_seed();
  21:start_screen.c **** 	wait_until( pressed( SW1 ) );
  22:start_screen.c **** 	wait_until( !pressed( SW1 ) );
  23:start_screen.c **** 
  24:start_screen.c **** 	game_countdown();
  25:start_screen.c **** 	refresh();
  26:start_screen.c **** }
  27:start_screen.c **** 
  28:start_screen.c **** void game_countdown() {
  23               		.loc 1 28 0
  24               		.cfi_startproc
  25               	/* prologue: function */
  26               	/* frame size = 0 */
  27               	/* stack size = 0 */
  28               	.L__stack_usage = 0
  29:start_screen.c **** 	clear();
  29               		.loc 1 29 0
  30 0000 0E94 0000 		call clear
  31               	.LVL0:
  30:start_screen.c **** 	int timer = 3;
  31:start_screen.c **** //	while ( timer > 0) {
  32:start_screen.c **** 
  33:start_screen.c **** 		draw_string( "3", 40, 22 );
  32               		.loc 1 33 0
  33 0004 46E1      		ldi r20,lo8(22)
  34 0006 50E0      		ldi r21,0
  35 0008 68E2      		ldi r22,lo8(40)
  36 000a 70E0      		ldi r23,0
  37 000c 80E0      		ldi r24,lo8(.LC0)
  38 000e 90E0      		ldi r25,hi8(.LC0)
  39 0010 0E94 0000 		call draw_string
  40               	.LVL1:
  34:start_screen.c **** 		turn_on(LED0);
  41               		.loc 1 34 0
  42 0014 2A9A      		sbi 0x5,2
  35:start_screen.c **** 		turn_on(LED1);
  43               		.loc 1 35 0
  44 0016 2B9A      		sbi 0x5,3
  36:start_screen.c **** 		turn_on(LED2);
  45               		.loc 1 36 0
  46 0018 5E9A      		sbi 0xb,6
  37:start_screen.c **** 		refresh();
  47               		.loc 1 37 0
  48 001a 0E94 0000 		call refresh
  49               	.LVL2:
  50               	.LBB8:
  51               	.LBB9:
  52               		.file 2 "/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h"
   1:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****    All rights reserved.
   5:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 
   6:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 
   9:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 
  12:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****      distribution.
  16:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 
  17:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 
  21:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 
  33:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** /* $Id: delay.h.in 2251 2011-09-14 08:20:33Z joerg_wunsch $ */
  34:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 
  35:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 
  38:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** #ifndef __HAS_DELAY_CYCLES
  39:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** #define __HAS_DELAY_CYCLES 1
  40:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** #endif
  41:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 
  42:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** #include <inttypes.h>
  43:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** #include <util/delay_basic.h>
  44:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** #include <math.h>
  45:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 
  46:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** /** \file */
  47:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  48:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****     \code
  49:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  50:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  51:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****     #include <util/delay.h>
  52:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****     \endcode
  53:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 
  54:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  55:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  56:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  57:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****     used.
  58:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 
  59:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  60:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  61:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  62:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  63:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  64:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  65:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  66:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  67:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 
  68:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  69:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  70:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  71:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  72:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  73:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  74:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  75:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****     routines linked into the application.
  76:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 
  77:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  78:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  79:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  80:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 
  81:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** */
  82:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 
  83:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  84:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** static inline void _delay_us(double __us) __attribute__((always_inline));
  85:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** static inline void _delay_ms(double __ms) __attribute__((always_inline));
  86:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** #endif
  87:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 
  88:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** #ifndef F_CPU
  89:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  90:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  91:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** # define F_CPU 1000000UL
  92:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** #endif
  93:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 
  94:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** #ifndef __OPTIMIZE__
  95:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
  96:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** #endif
  97:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 
  98:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
  99:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 100:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****   __STDC_HOSTED__
 101:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** #  include <math.h>
 102:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** #endif
 103:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 
 104:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** /**
 105:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****    \ingroup util_delay
 106:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 
 107:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 108:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 
 109:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 110:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 111:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 
 112:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 113:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 
 114:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 115:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 116:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 117:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 118:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 119:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 
 120:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles(unsigned long)
 121:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 122:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 123:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****    no delay i.e., 0ms.
 124:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 
 125:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****    Conversion of __us into clock cycles may not always result in integer.
 126:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****    By default, the clock cycles rounded up to next integer. This ensures that
 127:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****    the user gets atleast __us microseconds of delay.
 128:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 
 129:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****    Alternatively, user can define __DELAY_ROUND_DOWN__ and __DELAY_ROUND_CLOSEST__
 130:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****    to round down and round to closest integer.
 131:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 
 132:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****    Note: The new implementation of _delay_ms(double __ms) with 
 133:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****     __builtin_avr_delay_cycles(unsigned long) support is not backward compatible. 
 134:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****    User can define __DELAY_BACKWARD_COMPATIBLE__ to get a backward compatible delay.
 135:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****    Also, the backward compatible
 136:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****    algorithm will be chosen if the code is compiled in a <em>freestanding
 137:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****    environment</em> (GCC option \c -ffreestanding), as the math functions
 138:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****    required for rounding are not available to the compiler then.
 139:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 
 140:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****  */
 141:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** void
 142:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** _delay_ms(double __ms)
 143:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** {
 144:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 	uint16_t __ticks;
 145:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 	double __tmp ; 
 146:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 147:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 148:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h ****   __STDC_HOSTED__
 149:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 150:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 151:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 152:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 
 153:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 154:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 155:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 
 156:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 157:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 158:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 
 159:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 	#else
 160:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 		//round up by default
 161:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 162:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 	#endif
 163:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 
 164:/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
  53               		.loc 2 164 0
  54 001e 2FEF      		ldi r18,lo8(1599999)
  55 0020 89E6      		ldi r24,hi8(1599999)
  56 0022 98E1      		ldi r25,hlo8(1599999)
  57 0024 2150      		1: subi r18,1
  58 0026 8040      		sbci r24,0
  59 0028 9040      		sbci r25,0
  60 002a 01F4      		brne 1b
  61 002c 00C0      		rjmp .
  62 002e 0000      		nop
  63               	.LBE9:
  64               	.LBE8:
  38:start_screen.c **** 		_delay_ms(1000);
  39:start_screen.c **** 		turn_off(LED0);
  65               		.loc 1 39 0
  66 0030 2A98      		cbi 0x5,2
  40:start_screen.c **** 		turn_off(LED1);
  67               		.loc 1 40 0
  68 0032 2B98      		cbi 0x5,3
  41:start_screen.c **** 		turn_off(LED2);
  69               		.loc 1 41 0
  70 0034 5E98      		cbi 0xb,6
  42:start_screen.c **** 		clear();
  71               		.loc 1 42 0
  72 0036 0E94 0000 		call clear
  73               	.LVL3:
  43:start_screen.c **** 		draw_string( "2", 40, 22 );
  74               		.loc 1 43 0
  75 003a 46E1      		ldi r20,lo8(22)
  76 003c 50E0      		ldi r21,0
  77 003e 68E2      		ldi r22,lo8(40)
  78 0040 70E0      		ldi r23,0
  79 0042 80E0      		ldi r24,lo8(.LC1)
  80 0044 90E0      		ldi r25,hi8(.LC1)
  81 0046 0E94 0000 		call draw_string
  82               	.LVL4:
  44:start_screen.c **** 		turn_on(LED0);
  83               		.loc 1 44 0
  84 004a 2A9A      		sbi 0x5,2
  45:start_screen.c **** 		turn_on(LED1);
  85               		.loc 1 45 0
  86 004c 2B9A      		sbi 0x5,3
  46:start_screen.c **** 		refresh();
  87               		.loc 1 46 0
  88 004e 0E94 0000 		call refresh
  89               	.LVL5:
  90               	.LBB10:
  91               	.LBB11:
  92               		.loc 2 164 0
  93 0052 2FEF      		ldi r18,lo8(1599999)
  94 0054 89E6      		ldi r24,hi8(1599999)
  95 0056 98E1      		ldi r25,hlo8(1599999)
  96 0058 2150      		1: subi r18,1
  97 005a 8040      		sbci r24,0
  98 005c 9040      		sbci r25,0
  99 005e 01F4      		brne 1b
 100 0060 00C0      		rjmp .
 101 0062 0000      		nop
 102               	.LBE11:
 103               	.LBE10:
  47:start_screen.c **** 		_delay_ms(1000);
  48:start_screen.c **** 		turn_off(LED0);
 104               		.loc 1 48 0
 105 0064 2A98      		cbi 0x5,2
  49:start_screen.c **** 		turn_off(LED1);
 106               		.loc 1 49 0
 107 0066 2B98      		cbi 0x5,3
  50:start_screen.c **** 		clear();
 108               		.loc 1 50 0
 109 0068 0E94 0000 		call clear
 110               	.LVL6:
  51:start_screen.c **** 		draw_string( "1", 40, 22 );
 111               		.loc 1 51 0
 112 006c 46E1      		ldi r20,lo8(22)
 113 006e 50E0      		ldi r21,0
 114 0070 68E2      		ldi r22,lo8(40)
 115 0072 70E0      		ldi r23,0
 116 0074 80E0      		ldi r24,lo8(.LC2)
 117 0076 90E0      		ldi r25,hi8(.LC2)
 118 0078 0E94 0000 		call draw_string
 119               	.LVL7:
  52:start_screen.c **** 		turn_on(LED1);
 120               		.loc 1 52 0
 121 007c 2B9A      		sbi 0x5,3
  53:start_screen.c **** 		refresh();
 122               		.loc 1 53 0
 123 007e 0E94 0000 		call refresh
 124               	.LVL8:
 125               	.LBB12:
 126               	.LBB13:
 127               		.loc 2 164 0
 128 0082 2FEF      		ldi r18,lo8(1599999)
 129 0084 89E6      		ldi r24,hi8(1599999)
 130 0086 98E1      		ldi r25,hlo8(1599999)
 131 0088 2150      		1: subi r18,1
 132 008a 8040      		sbci r24,0
 133 008c 9040      		sbci r25,0
 134 008e 01F4      		brne 1b
 135 0090 00C0      		rjmp .
 136 0092 0000      		nop
 137               	.LBE13:
 138               	.LBE12:
  54:start_screen.c **** 		_delay_ms(1000);
  55:start_screen.c **** 		turn_off(LED0);
 139               		.loc 1 55 0
 140 0094 2A98      		cbi 0x5,2
  56:start_screen.c **** 		turn_off(LED1);
 141               		.loc 1 56 0
 142 0096 2B98      		cbi 0x5,3
  57:start_screen.c **** 		clear();
 143               		.loc 1 57 0
 144 0098 0E94 0000 		call clear
 145               	.LVL9:
  58:start_screen.c **** 
  59:start_screen.c **** //	}
  60:start_screen.c **** 	clear();
 146               		.loc 1 60 0
 147 009c 0C94 0000 		jmp clear
 148               	.LVL10:
 149               		.cfi_endproc
 150               	.LFE7:
 152               		.section	.rodata.str1.1
 153               	.LC3:
 154 0006 5A6F 6D62 		.string	"ZombieDash"
 154      6965 4461 
 154      7368 00
 155               	.LC4:
 156 0011 5465 656E 		.string	"Teensy Edition"
 156      7379 2045 
 156      6469 7469 
 156      6F6E 00
 157               	.LC5:
 158 0020 6E39 3337 		.string	"n9378880"
 158      3838 3830 
 158      00
 159               	.LC6:
 160 0029 4A61 6920 		.string	"Jai Spicer"
 160      5370 6963 
 160      6572 00
 161               		.section	.text.setup_start_screen,"ax",@progbits
 162               	.global	setup_start_screen
 164               	setup_start_screen:
 165               	.LFB6:
  13:start_screen.c **** void setup_start_screen() { // Write the different strings at the correct locations on the screen
 166               		.loc 1 13 0
 167               		.cfi_startproc
 168               	/* prologue: function */
 169               	/* frame size = 0 */
 170               	/* stack size = 0 */
 171               	.L__stack_usage = 0
  14:start_screen.c **** 	clear();
 172               		.loc 1 14 0
 173 0000 0E94 0000 		call clear
 174               	.LVL11:
  15:start_screen.c **** 	draw_string("ZombieDash",15,0);
 175               		.loc 1 15 0
 176 0004 40E0      		ldi r20,0
 177 0006 50E0      		ldi r21,0
 178 0008 6FE0      		ldi r22,lo8(15)
 179 000a 70E0      		ldi r23,0
 180 000c 80E0      		ldi r24,lo8(.LC3)
 181 000e 90E0      		ldi r25,hi8(.LC3)
 182 0010 0E94 0000 		call draw_string
 183               	.LVL12:
  16:start_screen.c **** 	draw_string("Teensy Edition",7,9);
 184               		.loc 1 16 0
 185 0014 49E0      		ldi r20,lo8(9)
 186 0016 50E0      		ldi r21,0
 187 0018 67E0      		ldi r22,lo8(7)
 188 001a 70E0      		ldi r23,0
 189 001c 80E0      		ldi r24,lo8(.LC4)
 190 001e 90E0      		ldi r25,hi8(.LC4)
 191 0020 0E94 0000 		call draw_string
 192               	.LVL13:
  17:start_screen.c **** 	draw_string("n9378880",19,27);
 193               		.loc 1 17 0
 194 0024 4BE1      		ldi r20,lo8(27)
 195 0026 50E0      		ldi r21,0
 196 0028 63E1      		ldi r22,lo8(19)
 197 002a 70E0      		ldi r23,0
 198 002c 80E0      		ldi r24,lo8(.LC5)
 199 002e 90E0      		ldi r25,hi8(.LC5)
 200 0030 0E94 0000 		call draw_string
 201               	.LVL14:
  18:start_screen.c **** 	draw_string("Jai Spicer",15,36);
 202               		.loc 1 18 0
 203 0034 44E2      		ldi r20,lo8(36)
 204 0036 50E0      		ldi r21,0
 205 0038 6FE0      		ldi r22,lo8(15)
 206 003a 70E0      		ldi r23,0
 207 003c 80E0      		ldi r24,lo8(.LC6)
 208 003e 90E0      		ldi r25,hi8(.LC6)
 209 0040 0E94 0000 		call draw_string
 210               	.LVL15:
  19:start_screen.c **** 	refresh();
 211               		.loc 1 19 0
 212 0044 0E94 0000 		call refresh
 213               	.LVL16:
  20:start_screen.c **** 	random_seed();
 214               		.loc 1 20 0
 215 0048 0E94 0000 		call random_seed
 216               	.LVL17:
 217               	.L3:
  21:start_screen.c **** 	wait_until( pressed( SW1 ) );
 218               		.loc 1 21 0 discriminator 1
 219 004c 199B      		sbis 0x3,1
 220 004e 00C0      		rjmp .L3
 221               	.L7:
  22:start_screen.c **** 	wait_until( !pressed( SW1 ) );
 222               		.loc 1 22 0
 223 0050 1999      		sbic 0x3,1
 224 0052 00C0      		rjmp .L7
  24:start_screen.c **** 	game_countdown();
 225               		.loc 1 24 0
 226 0054 0E94 0000 		call game_countdown
 227               	.LVL18:
  25:start_screen.c **** 	refresh();
 228               		.loc 1 25 0
 229 0058 0C94 0000 		jmp refresh
 230               	.LVL19:
 231               		.cfi_endproc
 232               	.LFE6:
 234               		.text
 235               	.Letext0:
 236               		.file 3 "/usr/local/bin/../lib/gcc/avr/4.7.2/../../../../avr/include/stdint.h"
DEFINED SYMBOLS
                            *ABS*:00000000 start_screen.c
/var/folders/dz/7l40hrmj72997lgmj3pdxb_m0000gn/T//ccPFRk2U.s:2      *ABS*:0000003e __SP_H__
/var/folders/dz/7l40hrmj72997lgmj3pdxb_m0000gn/T//ccPFRk2U.s:3      *ABS*:0000003d __SP_L__
/var/folders/dz/7l40hrmj72997lgmj3pdxb_m0000gn/T//ccPFRk2U.s:4      *ABS*:0000003f __SREG__
/var/folders/dz/7l40hrmj72997lgmj3pdxb_m0000gn/T//ccPFRk2U.s:5      *ABS*:00000000 __tmp_reg__
/var/folders/dz/7l40hrmj72997lgmj3pdxb_m0000gn/T//ccPFRk2U.s:6      *ABS*:00000001 __zero_reg__
/var/folders/dz/7l40hrmj72997lgmj3pdxb_m0000gn/T//ccPFRk2U.s:20     .text.game_countdown:00000000 game_countdown
/var/folders/dz/7l40hrmj72997lgmj3pdxb_m0000gn/T//ccPFRk2U.s:164    .text.setup_start_screen:00000000 setup_start_screen

UNDEFINED SYMBOLS
clear
draw_string
refresh
random_seed
__do_copy_data
