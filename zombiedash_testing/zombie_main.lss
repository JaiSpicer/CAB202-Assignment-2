
zombie_main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00800100  00000ae2  00000b76  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000ae2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000001fc  00800104  00800104  00000b7a  2**0
                  ALLOC
  3 .stab         000023dc  00000000  00000000  00000b7c  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000006e6  00000000  00000000  00002f58  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000011  00000000  00000000  0000363e  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 00000280  00000000  00000000  00003650  2**3
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   0000196e  00000000  00000000  000038d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000007ea  00000000  00000000  0000523e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000009d8  00000000  00000000  00005a28  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000004dc  00000000  00000000  00006400  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000003b2  00000000  00000000  000068dc  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    0000155b  00000000  00000000  00006c8e  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000120  00000000  00000000  000081e9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	55 c0       	rjmp	.+170    	; 0xac <__ctors_end>
   2:	00 00       	nop
   4:	6e c0       	rjmp	.+220    	; 0xe2 <__bad_interrupt>
   6:	00 00       	nop
   8:	6c c0       	rjmp	.+216    	; 0xe2 <__bad_interrupt>
   a:	00 00       	nop
   c:	6a c0       	rjmp	.+212    	; 0xe2 <__bad_interrupt>
   e:	00 00       	nop
  10:	68 c0       	rjmp	.+208    	; 0xe2 <__bad_interrupt>
  12:	00 00       	nop
  14:	66 c0       	rjmp	.+204    	; 0xe2 <__bad_interrupt>
  16:	00 00       	nop
  18:	64 c0       	rjmp	.+200    	; 0xe2 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	62 c0       	rjmp	.+196    	; 0xe2 <__bad_interrupt>
  1e:	00 00       	nop
  20:	60 c0       	rjmp	.+192    	; 0xe2 <__bad_interrupt>
  22:	00 00       	nop
  24:	5e c0       	rjmp	.+188    	; 0xe2 <__bad_interrupt>
  26:	00 00       	nop
  28:	5c c0       	rjmp	.+184    	; 0xe2 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	5a c0       	rjmp	.+180    	; 0xe2 <__bad_interrupt>
  2e:	00 00       	nop
  30:	58 c0       	rjmp	.+176    	; 0xe2 <__bad_interrupt>
  32:	00 00       	nop
  34:	56 c0       	rjmp	.+172    	; 0xe2 <__bad_interrupt>
  36:	00 00       	nop
  38:	54 c0       	rjmp	.+168    	; 0xe2 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	52 c0       	rjmp	.+164    	; 0xe2 <__bad_interrupt>
  3e:	00 00       	nop
  40:	50 c0       	rjmp	.+160    	; 0xe2 <__bad_interrupt>
  42:	00 00       	nop
  44:	4e c0       	rjmp	.+156    	; 0xe2 <__bad_interrupt>
  46:	00 00       	nop
  48:	4c c0       	rjmp	.+152    	; 0xe2 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	4a c0       	rjmp	.+148    	; 0xe2 <__bad_interrupt>
  4e:	00 00       	nop
  50:	48 c0       	rjmp	.+144    	; 0xe2 <__bad_interrupt>
  52:	00 00       	nop
  54:	46 c0       	rjmp	.+140    	; 0xe2 <__bad_interrupt>
  56:	00 00       	nop
  58:	44 c0       	rjmp	.+136    	; 0xe2 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	42 c0       	rjmp	.+132    	; 0xe2 <__bad_interrupt>
  5e:	00 00       	nop
  60:	40 c0       	rjmp	.+128    	; 0xe2 <__bad_interrupt>
  62:	00 00       	nop
  64:	3e c0       	rjmp	.+124    	; 0xe2 <__bad_interrupt>
  66:	00 00       	nop
  68:	3c c0       	rjmp	.+120    	; 0xe2 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	3a c0       	rjmp	.+116    	; 0xe2 <__bad_interrupt>
  6e:	00 00       	nop
  70:	38 c0       	rjmp	.+112    	; 0xe2 <__bad_interrupt>
  72:	00 00       	nop
  74:	36 c0       	rjmp	.+108    	; 0xe2 <__bad_interrupt>
  76:	00 00       	nop
  78:	34 c0       	rjmp	.+104    	; 0xe2 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	32 c0       	rjmp	.+100    	; 0xe2 <__bad_interrupt>
  7e:	00 00       	nop
  80:	30 c0       	rjmp	.+96     	; 0xe2 <__bad_interrupt>
  82:	00 00       	nop
  84:	2e c0       	rjmp	.+92     	; 0xe2 <__bad_interrupt>
  86:	00 00       	nop
  88:	2c c0       	rjmp	.+88     	; 0xe2 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	2a c0       	rjmp	.+84     	; 0xe2 <__bad_interrupt>
  8e:	00 00       	nop
  90:	28 c0       	rjmp	.+80     	; 0xe2 <__bad_interrupt>
  92:	00 00       	nop
  94:	26 c0       	rjmp	.+76     	; 0xe2 <__bad_interrupt>
  96:	00 00       	nop
  98:	24 c0       	rjmp	.+72     	; 0xe2 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	22 c0       	rjmp	.+68     	; 0xe2 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	20 c0       	rjmp	.+64     	; 0xe2 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	1e c0       	rjmp	.+60     	; 0xe2 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	1c c0       	rjmp	.+56     	; 0xe2 <__bad_interrupt>
  aa:	00 00       	nop

000000ac <__ctors_end>:
  ac:	11 24       	eor	r1, r1
  ae:	1f be       	out	0x3f, r1	; 63
  b0:	cf ef       	ldi	r28, 0xFF	; 255
  b2:	da e0       	ldi	r29, 0x0A	; 10
  b4:	de bf       	out	0x3e, r29	; 62
  b6:	cd bf       	out	0x3d, r28	; 61

000000b8 <__do_clear_bss>:
  b8:	23 e0       	ldi	r18, 0x03	; 3
  ba:	a4 e0       	ldi	r26, 0x04	; 4
  bc:	b1 e0       	ldi	r27, 0x01	; 1
  be:	01 c0       	rjmp	.+2      	; 0xc2 <.do_clear_bss_start>

000000c0 <.do_clear_bss_loop>:
  c0:	1d 92       	st	X+, r1

000000c2 <.do_clear_bss_start>:
  c2:	a0 30       	cpi	r26, 0x00	; 0
  c4:	b2 07       	cpc	r27, r18
  c6:	e1 f7       	brne	.-8      	; 0xc0 <.do_clear_bss_loop>

000000c8 <__do_copy_data>:
  c8:	11 e0       	ldi	r17, 0x01	; 1
  ca:	a0 e0       	ldi	r26, 0x00	; 0
  cc:	b1 e0       	ldi	r27, 0x01	; 1
  ce:	e2 ee       	ldi	r30, 0xE2	; 226
  d0:	fa e0       	ldi	r31, 0x0A	; 10
  d2:	02 c0       	rjmp	.+4      	; 0xd8 <__do_copy_data+0x10>
  d4:	05 90       	lpm	r0, Z+
  d6:	0d 92       	st	X+, r0
  d8:	a4 30       	cpi	r26, 0x04	; 4
  da:	b1 07       	cpc	r27, r17
  dc:	d9 f7       	brne	.-10     	; 0xd4 <__do_copy_data+0xc>
  de:	0e d1       	rcall	.+540    	; 0x2fc <main>
  e0:	fe c4       	rjmp	.+2556   	; 0xade <_exit>

000000e2 <__bad_interrupt>:
  e2:	8e cf       	rjmp	.-228    	; 0x0 <__vectors>

000000e4 <section_selector>:
		sprite->dx = 1;
		sprite->dy = 0;
	}
}

void section_selector( int picker ) {
  e4:	cf 93       	push	r28
  e6:	df 93       	push	r29
	if ( picker == 1 ) { // Left Section
  e8:	81 30       	cpi	r24, 0x01	; 1
  ea:	91 05       	cpc	r25, r1
  ec:	69 f4       	brne	.+26     	; 0x108 <section_selector+0x24>
		randx = (rand()%25)+1; // 1 - 28
  ee:	90 d4       	rcall	.+2336   	; 0xa10 <rand>
  f0:	69 e1       	ldi	r22, 0x19	; 25
  f2:	70 e0       	ldi	r23, 0x00	; 0
  f4:	38 d3       	rcall	.+1648   	; 0x766 <__divmodhi4>
  f6:	01 96       	adiw	r24, 0x01	; 1
  f8:	90 93 07 01 	sts	0x0107, r25
  fc:	80 93 06 01 	sts	0x0106, r24
 100:	87 d4       	rcall	.+2318   	; 0xa10 <rand>
 102:	6e e1       	ldi	r22, 0x1E	; 30
		randy = (rand()%30)+14; // 14 - 47
 104:	70 e0       	ldi	r23, 0x00	; 0
 106:	0e c0       	rjmp	.+28     	; 0x124 <section_selector+0x40>
 108:	02 97       	sbiw	r24, 0x02	; 2
 10a:	91 f4       	brne	.+36     	; 0x130 <section_selector+0x4c>
 10c:	81 d4       	rcall	.+2306   	; 0xa10 <rand>
	}
	else if ( picker == 2 ) { // Right Section
 10e:	ce e1       	ldi	r28, 0x1E	; 30
 110:	d0 e0       	ldi	r29, 0x00	; 0
		randx = (rand()%30)+51; // 50 - 81
 112:	be 01       	movw	r22, r28
 114:	28 d3       	rcall	.+1616   	; 0x766 <__divmodhi4>
 116:	c3 96       	adiw	r24, 0x33	; 51
 118:	90 93 07 01 	sts	0x0107, r25
 11c:	80 93 06 01 	sts	0x0106, r24
 120:	77 d4       	rcall	.+2286   	; 0xa10 <rand>
 122:	be 01       	movw	r22, r28
 124:	20 d3       	rcall	.+1600   	; 0x766 <__divmodhi4>
 126:	0e 96       	adiw	r24, 0x0e	; 14
 128:	90 93 05 01 	sts	0x0105, r25
		randy = (rand()%30)+14; // 14 - 47
 12c:	80 93 04 01 	sts	0x0104, r24
 130:	df 91       	pop	r29
 132:	cf 91       	pop	r28
 134:	08 95       	ret

00000136 <setup_zombies>:
 136:	4f 92       	push	r4
 138:	5f 92       	push	r5
 13a:	6f 92       	push	r6
 13c:	7f 92       	push	r7
	}
}
 13e:	8f 92       	push	r8
 140:	9f 92       	push	r9
 142:	af 92       	push	r10
void setup_zombies(
	Sprite zombies[],
	byte *zbitmaps[],
	byte width[],
	byte height[]
	) {
 144:	bf 92       	push	r11
 146:	cf 92       	push	r12
 148:	df 92       	push	r13
 14a:	ef 92       	push	r14
 14c:	ff 92       	push	r15
 14e:	0f 93       	push	r16
 150:	cf 93       	push	r28
 152:	df 93       	push	r29
 154:	4b 01       	movw	r8, r22
 156:	ec 01       	movw	r28, r24
 158:	88 e0       	ldi	r24, 0x08	; 8
 15a:	c8 2e       	mov	r12, r24
 15c:	d1 2c       	mov	r13, r1
	for ( int i = 0; i < 8; i++ ) {
		Sprite * sprite = &zombies[i];

		byte * bitmap = zbitmaps[ i % 1];

		int picker = 1 + rand() % 2; // 1 - 70
 15e:	92 e0       	ldi	r25, 0x02	; 2
 160:	a9 2e       	mov	r10, r25
 162:	b1 2c       	mov	r11, r1
		section_selector ( picker );

		init_sprite ( sprite, randx, randy, 4, 3, bitmap );

		sprite->dx = 1;
 164:	41 2c       	mov	r4, r1
 166:	51 2c       	mov	r5, r1
 168:	20 e8       	ldi	r18, 0x80	; 128
 16a:	62 2e       	mov	r6, r18
 16c:	2f e3       	ldi	r18, 0x3F	; 63
 16e:	72 2e       	mov	r7, r18
	) {

	for ( int i = 0; i < 8; i++ ) {
		Sprite * sprite = &zombies[i];

		byte * bitmap = zbitmaps[ i % 1];
 170:	f4 01       	movw	r30, r8
 172:	e0 80       	ld	r14, Z
 174:	f1 80       	ldd	r15, Z+1	; 0x01

		int picker = 1 + rand() % 2; // 1 - 70
 176:	4c d4       	rcall	.+2200   	; 0xa10 <rand>
 178:	b5 01       	movw	r22, r10
 17a:	f5 d2       	rcall	.+1514   	; 0x766 <__divmodhi4>
 17c:	01 96       	adiw	r24, 0x01	; 1
 17e:	b2 df       	rcall	.-156    	; 0xe4 <section_selector>
		section_selector ( picker );
 180:	03 e0       	ldi	r16, 0x03	; 3
 182:	24 e0       	ldi	r18, 0x04	; 4
 184:	40 91 04 01 	lds	r20, 0x0104

		init_sprite ( sprite, randx, randy, 4, 3, bitmap );
 188:	60 91 06 01 	lds	r22, 0x0106
 18c:	ce 01       	movw	r24, r28
 18e:	e6 d1       	rcall	.+972    	; 0x55c <init_sprite>
 190:	4d 86       	std	Y+13, r4	; 0x0d
 192:	5e 86       	std	Y+14, r5	; 0x0e
 194:	6f 86       	std	Y+15, r6	; 0x0f
 196:	78 8a       	std	Y+16, r7	; 0x10

		sprite->dx = 1;
 198:	19 8a       	std	Y+17, r1	; 0x11
 19a:	1a 8a       	std	Y+18, r1	; 0x12
 19c:	1b 8a       	std	Y+19, r1	; 0x13
 19e:	1c 8a       	std	Y+20, r1	; 0x14
		sprite->dy = 0;
 1a0:	f1 e0       	ldi	r31, 0x01	; 1
 1a2:	cf 1a       	sub	r12, r31
 1a4:	d1 08       	sbc	r13, r1
 1a6:	65 96       	adiw	r28, 0x15	; 21
 1a8:	c1 14       	cp	r12, r1
 1aa:	d1 04       	cpc	r13, r1
 1ac:	09 f7       	brne	.-62     	; 0x170 <setup_zombies+0x3a>
 1ae:	df 91       	pop	r29
	byte *zbitmaps[],
	byte width[],
	byte height[]
	) {

	for ( int i = 0; i < 8; i++ ) {
 1b0:	cf 91       	pop	r28
 1b2:	0f 91       	pop	r16
 1b4:	ff 90       	pop	r15
		init_sprite ( sprite, randx, randy, 4, 3, bitmap );

		sprite->dx = 1;
		sprite->dy = 0;
	}
}
 1b6:	ef 90       	pop	r14
 1b8:	df 90       	pop	r13
 1ba:	cf 90       	pop	r12
 1bc:	bf 90       	pop	r11
 1be:	af 90       	pop	r10
 1c0:	9f 90       	pop	r9
 1c2:	8f 90       	pop	r8
 1c4:	7f 90       	pop	r7
 1c6:	6f 90       	pop	r6
 1c8:	5f 90       	pop	r5
 1ca:	4f 90       	pop	r4
 1cc:	08 95       	ret

000001ce <draw_zombies>:
 1ce:	0f 93       	push	r16
 1d0:	1f 93       	push	r17
 1d2:	cf 93       	push	r28
 1d4:	df 93       	push	r29
		randx = (rand()%30)+51; // 50 - 81
		randy = (rand()%30)+14; // 14 - 47
	}
}

void draw_zombies ( Sprite * sprites ) {
 1d6:	8c 01       	movw	r16, r24
 1d8:	c0 e0       	ldi	r28, 0x00	; 0
 1da:	d0 e0       	ldi	r29, 0x00	; 0
	for ( int i = 0; i < zombie_count; i++ ) {
		draw_sprite ( sprites + i );
 1dc:	c8 01       	movw	r24, r16
 1de:	8c 0f       	add	r24, r28
 1e0:	9d 1f       	adc	r25, r29
 1e2:	ec d1       	rcall	.+984    	; 0x5bc <draw_sprite>
 1e4:	65 96       	adiw	r28, 0x15	; 21
 1e6:	c8 3a       	cpi	r28, 0xA8	; 168
		randy = (rand()%30)+14; // 14 - 47
	}
}

void draw_zombies ( Sprite * sprites ) {
	for ( int i = 0; i < zombie_count; i++ ) {
 1e8:	d1 05       	cpc	r29, r1
 1ea:	c1 f7       	brne	.-16     	; 0x1dc <draw_zombies+0xe>
 1ec:	df 91       	pop	r29
		draw_sprite ( sprites + i );
	}
}
 1ee:	cf 91       	pop	r28
 1f0:	1f 91       	pop	r17
 1f2:	0f 91       	pop	r16
 1f4:	08 95       	ret

000001f6 <update_one_zombie>:
 1f6:	8f 92       	push	r8
		update_one_zombie( zombies + 1);

	}
}

void update_one_zombie ( Sprite * zombie ) {
 1f8:	9f 92       	push	r9
 1fa:	af 92       	push	r10
 1fc:	bf 92       	push	r11
 1fe:	cf 92       	push	r12
 200:	df 92       	push	r13
 202:	ef 92       	push	r14
 204:	ff 92       	push	r15
 206:	cf 93       	push	r28
 208:	df 93       	push	r29
 20a:	ec 01       	movw	r28, r24
	zombie->x = zombie->dx;
 20c:	8d 84       	ldd	r8, Y+13	; 0x0d
 20e:	9e 84       	ldd	r9, Y+14	; 0x0e
 210:	af 84       	ldd	r10, Y+15	; 0x0f
 212:	b8 88       	ldd	r11, Y+16	; 0x10
 214:	88 82       	st	Y, r8
 216:	99 82       	std	Y+1, r9	; 0x01
 218:	aa 82       	std	Y+2, r10	; 0x02
 21a:	bb 82       	std	Y+3, r11	; 0x03
	zombie->y = zombie->dy;
 21c:	c9 88       	ldd	r12, Y+17	; 0x11
 21e:	da 88       	ldd	r13, Y+18	; 0x12
 220:	eb 88       	ldd	r14, Y+19	; 0x13
 222:	fc 88       	ldd	r15, Y+20	; 0x14
 224:	cc 82       	std	Y+4, r12	; 0x04
 226:	dd 82       	std	Y+5, r13	; 0x05
 228:	ee 82       	std	Y+6, r14	; 0x06
 22a:	ff 82       	std	Y+7, r15	; 0x07



	if ( zombie->x >= (LCD_X - 1) - zombie->width || zombie->x < 1 ) {
 22c:	88 85       	ldd	r24, Y+8	; 0x08
 22e:	63 e5       	ldi	r22, 0x53	; 83
 230:	70 e0       	ldi	r23, 0x00	; 0
 232:	68 1b       	sub	r22, r24
 234:	71 09       	sbc	r23, r1
 236:	88 27       	eor	r24, r24
 238:	77 fd       	sbrc	r23, 7
 23a:	80 95       	com	r24
 23c:	98 2f       	mov	r25, r24
 23e:	a0 d0       	rcall	.+320    	; 0x380 <__floatsisf>
 240:	9b 01       	movw	r18, r22
 242:	ac 01       	movw	r20, r24
 244:	c5 01       	movw	r24, r10
 246:	b4 01       	movw	r22, r8
 248:	fa d0       	rcall	.+500    	; 0x43e <__gesf2>
 24a:	87 ff       	sbrs	r24, 7
 24c:	09 c0       	rjmp	.+18     	; 0x260 <update_one_zombie+0x6a>
 24e:	20 e0       	ldi	r18, 0x00	; 0
 250:	30 e0       	ldi	r19, 0x00	; 0
 252:	40 e8       	ldi	r20, 0x80	; 128
 254:	5f e3       	ldi	r21, 0x3F	; 63
 256:	c5 01       	movw	r24, r10
 258:	b4 01       	movw	r22, r8
 25a:	8c d0       	rcall	.+280    	; 0x374 <__cmpsf2>
 25c:	87 ff       	sbrs	r24, 7
 25e:	04 c0       	rjmp	.+8      	; 0x268 <update_one_zombie+0x72>
 260:	1d 86       	std	Y+13, r1	; 0x0d
 262:	1e 86       	std	Y+14, r1	; 0x0e
 264:	1f 86       	std	Y+15, r1	; 0x0f
		zombie->dx = 0;
 266:	18 8a       	std	Y+16, r1	; 0x10
 268:	89 85       	ldd	r24, Y+9	; 0x09
 26a:	6f e2       	ldi	r22, 0x2F	; 47
 26c:	70 e0       	ldi	r23, 0x00	; 0
	}

	if ( zombie->y >= (LCD_Y - 1) - zombie->height || zombie->y < 14 ) {
 26e:	68 1b       	sub	r22, r24
 270:	71 09       	sbc	r23, r1
 272:	88 27       	eor	r24, r24
 274:	77 fd       	sbrc	r23, 7
 276:	80 95       	com	r24
 278:	98 2f       	mov	r25, r24
 27a:	82 d0       	rcall	.+260    	; 0x380 <__floatsisf>
 27c:	9b 01       	movw	r18, r22
 27e:	ac 01       	movw	r20, r24
 280:	c7 01       	movw	r24, r14
 282:	b6 01       	movw	r22, r12
 284:	dc d0       	rcall	.+440    	; 0x43e <__gesf2>
 286:	87 ff       	sbrs	r24, 7
 288:	09 c0       	rjmp	.+18     	; 0x29c <update_one_zombie+0xa6>
 28a:	20 e0       	ldi	r18, 0x00	; 0
 28c:	30 e0       	ldi	r19, 0x00	; 0
 28e:	40 e6       	ldi	r20, 0x60	; 96
 290:	51 e4       	ldi	r21, 0x41	; 65
 292:	c7 01       	movw	r24, r14
 294:	b6 01       	movw	r22, r12
 296:	6e d0       	rcall	.+220    	; 0x374 <__cmpsf2>
 298:	87 ff       	sbrs	r24, 7
 29a:	04 c0       	rjmp	.+8      	; 0x2a4 <update_one_zombie+0xae>
 29c:	19 8a       	std	Y+17, r1	; 0x11
 29e:	1a 8a       	std	Y+18, r1	; 0x12
 2a0:	1b 8a       	std	Y+19, r1	; 0x13
 2a2:	1c 8a       	std	Y+20, r1	; 0x14
 2a4:	df 91       	pop	r29
 2a6:	cf 91       	pop	r28
		zombie->dy = 0;
 2a8:	ff 90       	pop	r15
 2aa:	ef 90       	pop	r14
 2ac:	df 90       	pop	r13
 2ae:	cf 90       	pop	r12
	}
}
 2b0:	bf 90       	pop	r11
 2b2:	af 90       	pop	r10
 2b4:	9f 90       	pop	r9
 2b6:	8f 90       	pop	r8
 2b8:	08 95       	ret

000002ba <update_zombies>:
 2ba:	0f 93       	push	r16
 2bc:	1f 93       	push	r17
 2be:	cf 93       	push	r28
 2c0:	df 93       	push	r29
 2c2:	c8 e0       	ldi	r28, 0x08	; 8
 2c4:	d0 e0       	ldi	r29, 0x00	; 0
}

void update_zombies ( Sprite * zombies ) {
	// pick a direction to move in
	for ( int i = 0; i < zombie_count; i++ ) {
		update_one_zombie( zombies + 1);
 2c6:	8c 01       	movw	r16, r24
 2c8:	0b 5e       	subi	r16, 0xEB	; 235
 2ca:	1f 4f       	sbci	r17, 0xFF	; 255
 2cc:	c8 01       	movw	r24, r16
 2ce:	93 df       	rcall	.-218    	; 0x1f6 <update_one_zombie>
 2d0:	21 97       	sbiw	r28, 0x01	; 1
 2d2:	e1 f7       	brne	.-8      	; 0x2cc <update_zombies+0x12>
	}
}

void update_zombies ( Sprite * zombies ) {
	// pick a direction to move in
	for ( int i = 0; i < zombie_count; i++ ) {
 2d4:	df 91       	pop	r29
		update_one_zombie( zombies + 1);

	}
}
 2d6:	cf 91       	pop	r28
 2d8:	1f 91       	pop	r17
 2da:	0f 91       	pop	r16
 2dc:	08 95       	ret

000002de <setup_device>:
 2de:	e1 e6       	ldi	r30, 0x61	; 97
		zombie->dy = 0;
	}
}

void setup_device() {
	CPU_PRESCALE(CPU_8MHz);
 2e0:	f0 e0       	ldi	r31, 0x00	; 0
 2e2:	80 e8       	ldi	r24, 0x80	; 128
 2e4:	80 83       	st	Z, r24
 2e6:	81 e0       	ldi	r24, 0x01	; 1
 2e8:	80 83       	st	Z, r24

	DDRB = ( LED0 | LED1 ) & ~( SW0 | SW1 ); // Output to LEDs, input from switches.
 2ea:	8c e0       	ldi	r24, 0x0C	; 12
 2ec:	84 b9       	out	0x04, r24	; 4
	DDRD = LED2; // Turn on the little yellow LED.
 2ee:	80 e4       	ldi	r24, 0x40	; 64
 2f0:	8a b9       	out	0x0a, r24	; 10

	// Turn everything off to start with
	PORTB = 0x00;
 2f2:	15 b8       	out	0x05, r1	; 5
	PORTD = 0x00;
 2f4:	1b b8       	out	0x0b, r1	; 11

	LCDInitialise(LCD_DEFAULT_CONTRAST);
 2f6:	8f e3       	ldi	r24, 0x3F	; 63
 2f8:	00 d1       	rcall	.+512    	; 0x4fa <LCDInitialise>
 2fa:	b6 c0       	rjmp	.+364    	; 0x468 <clear>

000002fc <main>:
	clear();
 2fc:	cf 93       	push	r28
 2fe:	df 93       	push	r29
void setup_device( void );

int randx;
int randy;

void main( void ) {
 300:	cd b7       	in	r28, 0x3d	; 61
 302:	de b7       	in	r29, 0x3e	; 62
 304:	cf 5a       	subi	r28, 0xAF	; 175
 306:	d1 09       	sbc	r29, r1
 308:	0f b6       	in	r0, 0x3f	; 63
 30a:	f8 94       	cli
 30c:	de bf       	out	0x3e, r29	; 62
 30e:	0f be       	out	0x3f, r0	; 63
 310:	cd bf       	out	0x3d, r28	; 61
	setup_device();
 312:	e5 df       	rcall	.-54     	; 0x2de <setup_device>
 314:	fe 01       	movw	r30, r28

	byte bitmap1[] = {
 316:	e7 55       	subi	r30, 0x57	; 87
 318:	ff 4f       	sbci	r31, 0xFF	; 255
 31a:	80 ee       	ldi	r24, 0xE0	; 224
 31c:	80 83       	st	Z, r24
 31e:	80 e4       	ldi	r24, 0x40	; 64
 320:	81 83       	std	Z+1, r24	; 0x01
 322:	80 ea       	ldi	r24, 0xA0	; 160
 324:	82 83       	std	Z+2, r24	; 0x02
 326:	c4 55       	subi	r28, 0x54	; 84
		BYTE( 11100000 ),
		BYTE( 01000000 ),
		BYTE( 10100000 )
	};

	byte *zbitmaps[1] = { bitmap1 };
 328:	df 4f       	sbci	r29, 0xFF	; 255
 32a:	f9 83       	std	Y+1, r31	; 0x01
 32c:	e8 83       	st	Y, r30
 32e:	cc 5a       	subi	r28, 0xAC	; 172
 330:	d0 40       	sbci	r29, 0x00	; 0
 332:	84 e0       	ldi	r24, 0x04	; 4
	byte width[] = {4};
 334:	c1 55       	subi	r28, 0x51	; 81
 336:	df 4f       	sbci	r29, 0xFF	; 255
 338:	88 83       	st	Y, r24
 33a:	cf 5a       	subi	r28, 0xAF	; 175
 33c:	d0 40       	sbci	r29, 0x00	; 0
 33e:	83 e0       	ldi	r24, 0x03	; 3
	byte height[] = {3};
 340:	c2 55       	subi	r28, 0x52	; 82
 342:	df 4f       	sbci	r29, 0xFF	; 255
 344:	88 83       	st	Y, r24
 346:	ce 5a       	subi	r28, 0xAE	; 174
 348:	d0 40       	sbci	r29, 0x00	; 0
 34a:	9e 01       	movw	r18, r28
#define zombie_count (8)

	Sprite zombies[zombie_count];


	setup_zombies ( zombies, zbitmaps, width, height );
 34c:	22 55       	subi	r18, 0x52	; 82
 34e:	3f 4f       	sbci	r19, 0xFF	; 255
 350:	ae 01       	movw	r20, r28
 352:	41 55       	subi	r20, 0x51	; 81
 354:	5f 4f       	sbci	r21, 0xFF	; 255
 356:	be 01       	movw	r22, r28
 358:	64 55       	subi	r22, 0x54	; 84
 35a:	7f 4f       	sbci	r23, 0xFF	; 255
 35c:	8e 01       	movw	r16, r28
 35e:	0f 5f       	subi	r16, 0xFF	; 255
 360:	1f 4f       	sbci	r17, 0xFF	; 255
 362:	c8 01       	movw	r24, r16
 364:	e8 de       	rcall	.-560    	; 0x136 <setup_zombies>
 366:	80 d0       	rcall	.+256    	; 0x468 <clear>
 368:	c8 01       	movw	r24, r16

	while (1) {
		clear();
 36a:	a7 df       	rcall	.-178    	; 0x2ba <update_zombies>
 36c:	c8 01       	movw	r24, r16
		update_zombies( zombies );
 36e:	2f df       	rcall	.-418    	; 0x1ce <draw_zombies>
 370:	6a d0       	rcall	.+212    	; 0x446 <refresh>
 372:	f9 cf       	rjmp	.-14     	; 0x366 <main+0x6a>

00000374 <__cmpsf2>:
		draw_zombies( zombies );
 374:	40 d0       	rcall	.+128    	; 0x3f6 <__fp_cmp>
 376:	08 f4       	brcc	.+2      	; 0x37a <__cmpsf2+0x6>
 378:	81 e0       	ldi	r24, 0x01	; 1
		refresh();
 37a:	08 95       	ret

0000037c <__floatunsisf>:
 37c:	e8 94       	clt
 37e:	09 c0       	rjmp	.+18     	; 0x392 <__floatsisf+0x12>

00000380 <__floatsisf>:
 380:	97 fb       	bst	r25, 7
 382:	3e f4       	brtc	.+14     	; 0x392 <__floatsisf+0x12>
 384:	90 95       	com	r25
 386:	80 95       	com	r24
 388:	70 95       	com	r23
 38a:	61 95       	neg	r22
 38c:	7f 4f       	sbci	r23, 0xFF	; 255
 38e:	8f 4f       	sbci	r24, 0xFF	; 255
 390:	9f 4f       	sbci	r25, 0xFF	; 255
 392:	99 23       	and	r25, r25
 394:	a9 f0       	breq	.+42     	; 0x3c0 <__floatsisf+0x40>
 396:	f9 2f       	mov	r31, r25
 398:	96 e9       	ldi	r25, 0x96	; 150
 39a:	bb 27       	eor	r27, r27
 39c:	93 95       	inc	r25
 39e:	f6 95       	lsr	r31
 3a0:	87 95       	ror	r24
 3a2:	77 95       	ror	r23
 3a4:	67 95       	ror	r22
 3a6:	b7 95       	ror	r27
 3a8:	f1 11       	cpse	r31, r1
 3aa:	f8 cf       	rjmp	.-16     	; 0x39c <__floatsisf+0x1c>
 3ac:	fa f4       	brpl	.+62     	; 0x3ec <__floatsisf+0x6c>
 3ae:	bb 0f       	add	r27, r27
 3b0:	11 f4       	brne	.+4      	; 0x3b6 <__floatsisf+0x36>
 3b2:	60 ff       	sbrs	r22, 0
 3b4:	1b c0       	rjmp	.+54     	; 0x3ec <__floatsisf+0x6c>
 3b6:	6f 5f       	subi	r22, 0xFF	; 255
 3b8:	7f 4f       	sbci	r23, 0xFF	; 255
 3ba:	8f 4f       	sbci	r24, 0xFF	; 255
 3bc:	9f 4f       	sbci	r25, 0xFF	; 255
 3be:	16 c0       	rjmp	.+44     	; 0x3ec <__floatsisf+0x6c>
 3c0:	88 23       	and	r24, r24
 3c2:	11 f0       	breq	.+4      	; 0x3c8 <__floatsisf+0x48>
 3c4:	96 e9       	ldi	r25, 0x96	; 150
 3c6:	11 c0       	rjmp	.+34     	; 0x3ea <__floatsisf+0x6a>
 3c8:	77 23       	and	r23, r23
 3ca:	21 f0       	breq	.+8      	; 0x3d4 <__floatsisf+0x54>
 3cc:	9e e8       	ldi	r25, 0x8E	; 142
 3ce:	87 2f       	mov	r24, r23
 3d0:	76 2f       	mov	r23, r22
 3d2:	05 c0       	rjmp	.+10     	; 0x3de <__floatsisf+0x5e>
 3d4:	66 23       	and	r22, r22
 3d6:	71 f0       	breq	.+28     	; 0x3f4 <__floatsisf+0x74>
 3d8:	96 e8       	ldi	r25, 0x86	; 134
 3da:	86 2f       	mov	r24, r22
 3dc:	70 e0       	ldi	r23, 0x00	; 0
 3de:	60 e0       	ldi	r22, 0x00	; 0
 3e0:	2a f0       	brmi	.+10     	; 0x3ec <__floatsisf+0x6c>
 3e2:	9a 95       	dec	r25
 3e4:	66 0f       	add	r22, r22
 3e6:	77 1f       	adc	r23, r23
 3e8:	88 1f       	adc	r24, r24
 3ea:	da f7       	brpl	.-10     	; 0x3e2 <__floatsisf+0x62>
 3ec:	88 0f       	add	r24, r24
 3ee:	96 95       	lsr	r25
 3f0:	87 95       	ror	r24
 3f2:	97 f9       	bld	r25, 7
 3f4:	08 95       	ret

000003f6 <__fp_cmp>:
 3f6:	99 0f       	add	r25, r25
 3f8:	00 08       	sbc	r0, r0
 3fa:	55 0f       	add	r21, r21
 3fc:	aa 0b       	sbc	r26, r26
 3fe:	e0 e8       	ldi	r30, 0x80	; 128
 400:	fe ef       	ldi	r31, 0xFE	; 254
 402:	16 16       	cp	r1, r22
 404:	17 06       	cpc	r1, r23
 406:	e8 07       	cpc	r30, r24
 408:	f9 07       	cpc	r31, r25
 40a:	c0 f0       	brcs	.+48     	; 0x43c <__fp_cmp+0x46>
 40c:	12 16       	cp	r1, r18
 40e:	13 06       	cpc	r1, r19
 410:	e4 07       	cpc	r30, r20
 412:	f5 07       	cpc	r31, r21
 414:	98 f0       	brcs	.+38     	; 0x43c <__fp_cmp+0x46>
 416:	62 1b       	sub	r22, r18
 418:	73 0b       	sbc	r23, r19
 41a:	84 0b       	sbc	r24, r20
 41c:	95 0b       	sbc	r25, r21
 41e:	39 f4       	brne	.+14     	; 0x42e <__fp_cmp+0x38>
 420:	0a 26       	eor	r0, r26
 422:	61 f0       	breq	.+24     	; 0x43c <__fp_cmp+0x46>
 424:	23 2b       	or	r18, r19
 426:	24 2b       	or	r18, r20
 428:	25 2b       	or	r18, r21
 42a:	21 f4       	brne	.+8      	; 0x434 <__fp_cmp+0x3e>
 42c:	08 95       	ret
 42e:	0a 26       	eor	r0, r26
 430:	09 f4       	brne	.+2      	; 0x434 <__fp_cmp+0x3e>
 432:	a1 40       	sbci	r26, 0x01	; 1
 434:	a6 95       	lsr	r26
 436:	8f ef       	ldi	r24, 0xFF	; 255
 438:	81 1d       	adc	r24, r1
 43a:	81 1d       	adc	r24, r1
 43c:	08 95       	ret

0000043e <__gesf2>:
 43e:	db df       	rcall	.-74     	; 0x3f6 <__fp_cmp>
 440:	08 f4       	brcc	.+2      	; 0x444 <__gesf2+0x6>
 442:	8f ef       	ldi	r24, 0xFF	; 255
 444:	08 95       	ret

00000446 <refresh>:
 446:	cf 93       	push	r28
 448:	df 93       	push	r29
 44a:	60 e0       	ldi	r22, 0x00	; 0
 44c:	80 e0       	ldi	r24, 0x00	; 0
 44e:	7c d0       	rcall	.+248    	; 0x548 <LCDPosition>
 450:	c8 e0       	ldi	r28, 0x08	; 8
 452:	d1 e0       	ldi	r29, 0x01	; 1
 454:	69 91       	ld	r22, Y+
 456:	81 e0       	ldi	r24, 0x01	; 1
 458:	32 d0       	rcall	.+100    	; 0x4be <LCDWrite>
 45a:	83 e0       	ldi	r24, 0x03	; 3
 45c:	c0 30       	cpi	r28, 0x00	; 0
 45e:	d8 07       	cpc	r29, r24
 460:	c9 f7       	brne	.-14     	; 0x454 <refresh+0xe>
 462:	df 91       	pop	r29
 464:	cf 91       	pop	r28
 466:	08 95       	ret

00000468 <clear>:
 468:	e8 e0       	ldi	r30, 0x08	; 8
 46a:	f1 e0       	ldi	r31, 0x01	; 1
 46c:	11 92       	st	Z+, r1
 46e:	83 e0       	ldi	r24, 0x03	; 3
 470:	e0 30       	cpi	r30, 0x00	; 0
 472:	f8 07       	cpc	r31, r24
 474:	d9 f7       	brne	.-10     	; 0x46c <clear+0x4>
 476:	08 95       	ret

00000478 <set_pixel>:
 478:	84 35       	cpi	r24, 0x54	; 84
 47a:	00 f5       	brcc	.+64     	; 0x4bc <set_pixel+0x44>
 47c:	60 33       	cpi	r22, 0x30	; 48
 47e:	f0 f4       	brcc	.+60     	; 0x4bc <set_pixel+0x44>
 480:	e6 2f       	mov	r30, r22
 482:	e6 95       	lsr	r30
 484:	e6 95       	lsr	r30
 486:	e6 95       	lsr	r30
 488:	67 70       	andi	r22, 0x07	; 7
 48a:	94 e5       	ldi	r25, 0x54	; 84
 48c:	e9 9f       	mul	r30, r25
 48e:	f0 01       	movw	r30, r0
 490:	11 24       	eor	r1, r1
 492:	90 e0       	ldi	r25, 0x00	; 0
 494:	e8 0f       	add	r30, r24
 496:	f9 1f       	adc	r31, r25
 498:	e8 5f       	subi	r30, 0xF8	; 248
 49a:	fe 4f       	sbci	r31, 0xFE	; 254
 49c:	81 e0       	ldi	r24, 0x01	; 1
 49e:	90 e0       	ldi	r25, 0x00	; 0
 4a0:	06 2e       	mov	r0, r22
 4a2:	01 c0       	rjmp	.+2      	; 0x4a6 <set_pixel+0x2e>
 4a4:	88 0f       	add	r24, r24
 4a6:	0a 94       	dec	r0
 4a8:	ea f7       	brpl	.-6      	; 0x4a4 <set_pixel+0x2c>
 4aa:	44 23       	and	r20, r20
 4ac:	19 f0       	breq	.+6      	; 0x4b4 <set_pixel+0x3c>
 4ae:	90 81       	ld	r25, Z
 4b0:	98 2b       	or	r25, r24
 4b2:	03 c0       	rjmp	.+6      	; 0x4ba <set_pixel+0x42>
 4b4:	80 95       	com	r24
 4b6:	90 81       	ld	r25, Z
 4b8:	98 23       	and	r25, r24
 4ba:	90 83       	st	Z, r25
 4bc:	08 95       	ret

000004be <LCDWrite>:
 4be:	25 b1       	in	r18, 0x05	; 5
 4c0:	30 e2       	ldi	r19, 0x20	; 32
 4c2:	83 9f       	mul	r24, r19
 4c4:	c0 01       	movw	r24, r0
 4c6:	11 24       	eor	r1, r1
 4c8:	2f 7d       	andi	r18, 0xDF	; 223
 4ca:	28 2b       	or	r18, r24
 4cc:	25 b9       	out	0x05, r18	; 5
 4ce:	5f 98       	cbi	0x0b, 7	; 11
 4d0:	87 e0       	ldi	r24, 0x07	; 7
 4d2:	90 e0       	ldi	r25, 0x00	; 0
 4d4:	70 e0       	ldi	r23, 0x00	; 0
 4d6:	8f 98       	cbi	0x11, 7	; 17
 4d8:	9b 01       	movw	r18, r22
 4da:	08 2e       	mov	r0, r24
 4dc:	02 c0       	rjmp	.+4      	; 0x4e2 <LCDWrite+0x24>
 4de:	35 95       	asr	r19
 4e0:	27 95       	ror	r18
 4e2:	0a 94       	dec	r0
 4e4:	e2 f7       	brpl	.-8      	; 0x4de <LCDWrite+0x20>
 4e6:	20 ff       	sbrs	r18, 0
 4e8:	02 c0       	rjmp	.+4      	; 0x4ee <LCDWrite+0x30>
 4ea:	2e 9a       	sbi	0x05, 6	; 5
 4ec:	01 c0       	rjmp	.+2      	; 0x4f0 <LCDWrite+0x32>
 4ee:	2e 98       	cbi	0x05, 6	; 5
 4f0:	8f 9a       	sbi	0x11, 7	; 17
 4f2:	01 97       	sbiw	r24, 0x01	; 1
 4f4:	80 f7       	brcc	.-32     	; 0x4d6 <LCDWrite+0x18>
 4f6:	5f 9a       	sbi	0x0b, 7	; 11
 4f8:	08 95       	ret

000004fa <LCDInitialise>:
 4fa:	cf 93       	push	r28
 4fc:	c8 2f       	mov	r28, r24
 4fe:	57 9a       	sbi	0x0a, 7	; 10
 500:	24 9a       	sbi	0x04, 4	; 4
 502:	25 9a       	sbi	0x04, 5	; 4
 504:	26 9a       	sbi	0x04, 6	; 4
 506:	87 9a       	sbi	0x10, 7	; 16
 508:	2c 98       	cbi	0x05, 4	; 5
 50a:	5f 9a       	sbi	0x0b, 7	; 11
 50c:	2c 9a       	sbi	0x05, 4	; 5
 50e:	61 e2       	ldi	r22, 0x21	; 33
 510:	80 e0       	ldi	r24, 0x00	; 0
 512:	d5 df       	rcall	.-86     	; 0x4be <LCDWrite>
 514:	6c 2f       	mov	r22, r28
 516:	60 68       	ori	r22, 0x80	; 128
 518:	80 e0       	ldi	r24, 0x00	; 0
 51a:	d1 df       	rcall	.-94     	; 0x4be <LCDWrite>
 51c:	64 e0       	ldi	r22, 0x04	; 4
 51e:	80 e0       	ldi	r24, 0x00	; 0
 520:	ce df       	rcall	.-100    	; 0x4be <LCDWrite>
 522:	63 e1       	ldi	r22, 0x13	; 19
 524:	80 e0       	ldi	r24, 0x00	; 0
 526:	cb df       	rcall	.-106    	; 0x4be <LCDWrite>
 528:	6c e0       	ldi	r22, 0x0C	; 12
 52a:	80 e0       	ldi	r24, 0x00	; 0
 52c:	c8 df       	rcall	.-112    	; 0x4be <LCDWrite>
 52e:	60 e2       	ldi	r22, 0x20	; 32
 530:	80 e0       	ldi	r24, 0x00	; 0
 532:	c5 df       	rcall	.-118    	; 0x4be <LCDWrite>
 534:	6c e0       	ldi	r22, 0x0C	; 12
 536:	80 e0       	ldi	r24, 0x00	; 0
 538:	c2 df       	rcall	.-124    	; 0x4be <LCDWrite>
 53a:	60 e4       	ldi	r22, 0x40	; 64
 53c:	80 e0       	ldi	r24, 0x00	; 0
 53e:	bf df       	rcall	.-130    	; 0x4be <LCDWrite>
 540:	60 e8       	ldi	r22, 0x80	; 128
 542:	80 e0       	ldi	r24, 0x00	; 0
 544:	cf 91       	pop	r28
 546:	bb cf       	rjmp	.-138    	; 0x4be <LCDWrite>

00000548 <LCDPosition>:
 548:	cf 93       	push	r28
 54a:	c8 2f       	mov	r28, r24
 54c:	60 64       	ori	r22, 0x40	; 64
 54e:	80 e0       	ldi	r24, 0x00	; 0
 550:	b6 df       	rcall	.-148    	; 0x4be <LCDWrite>
 552:	6c 2f       	mov	r22, r28
 554:	60 68       	ori	r22, 0x80	; 128
 556:	80 e0       	ldi	r24, 0x00	; 0
 558:	cf 91       	pop	r28
 55a:	b1 cf       	rjmp	.-158    	; 0x4be <LCDWrite>

0000055c <init_sprite>:
 55c:	cf 92       	push	r12
 55e:	df 92       	push	r13
 560:	ef 92       	push	r14
 562:	ff 92       	push	r15
 564:	0f 93       	push	r16
 566:	cf 93       	push	r28
 568:	df 93       	push	r29
 56a:	00 d0       	rcall	.+0      	; 0x56c <init_sprite+0x10>
 56c:	cd b7       	in	r28, 0x3d	; 61
 56e:	de b7       	in	r29, 0x3e	; 62
 570:	6c 01       	movw	r12, r24
 572:	70 e0       	ldi	r23, 0x00	; 0
 574:	80 e0       	ldi	r24, 0x00	; 0
 576:	90 e0       	ldi	r25, 0x00	; 0
 578:	2a 83       	std	Y+2, r18	; 0x02
 57a:	49 83       	std	Y+1, r20	; 0x01
 57c:	ff de       	rcall	.-514    	; 0x37c <__floatunsisf>
 57e:	f6 01       	movw	r30, r12
 580:	60 83       	st	Z, r22
 582:	71 83       	std	Z+1, r23	; 0x01
 584:	82 83       	std	Z+2, r24	; 0x02
 586:	93 83       	std	Z+3, r25	; 0x03
 588:	49 81       	ldd	r20, Y+1	; 0x01
 58a:	64 2f       	mov	r22, r20
 58c:	70 e0       	ldi	r23, 0x00	; 0
 58e:	80 e0       	ldi	r24, 0x00	; 0
 590:	90 e0       	ldi	r25, 0x00	; 0
 592:	f4 de       	rcall	.-536    	; 0x37c <__floatunsisf>
 594:	f6 01       	movw	r30, r12
 596:	64 83       	std	Z+4, r22	; 0x04
 598:	75 83       	std	Z+5, r23	; 0x05
 59a:	86 83       	std	Z+6, r24	; 0x06
 59c:	97 83       	std	Z+7, r25	; 0x07
 59e:	2a 81       	ldd	r18, Y+2	; 0x02
 5a0:	20 87       	std	Z+8, r18	; 0x08
 5a2:	01 87       	std	Z+9, r16	; 0x09
 5a4:	f4 86       	std	Z+12, r15	; 0x0c
 5a6:	e3 86       	std	Z+11, r14	; 0x0b
 5a8:	0f 90       	pop	r0
 5aa:	0f 90       	pop	r0
 5ac:	df 91       	pop	r29
 5ae:	cf 91       	pop	r28
 5b0:	0f 91       	pop	r16
 5b2:	ff 90       	pop	r15
 5b4:	ef 90       	pop	r14
 5b6:	df 90       	pop	r13
 5b8:	cf 90       	pop	r12
 5ba:	08 95       	ret

000005bc <draw_sprite>:
 5bc:	2f 92       	push	r2
 5be:	3f 92       	push	r3
 5c0:	4f 92       	push	r4
 5c2:	5f 92       	push	r5
 5c4:	6f 92       	push	r6
 5c6:	7f 92       	push	r7
 5c8:	8f 92       	push	r8
 5ca:	9f 92       	push	r9
 5cc:	af 92       	push	r10
 5ce:	bf 92       	push	r11
 5d0:	cf 92       	push	r12
 5d2:	df 92       	push	r13
 5d4:	ef 92       	push	r14
 5d6:	ff 92       	push	r15
 5d8:	0f 93       	push	r16
 5da:	1f 93       	push	r17
 5dc:	cf 93       	push	r28
 5de:	df 93       	push	r29
 5e0:	00 d0       	rcall	.+0      	; 0x5e2 <draw_sprite+0x26>
 5e2:	00 d0       	rcall	.+0      	; 0x5e4 <draw_sprite+0x28>
 5e4:	cd b7       	in	r28, 0x3d	; 61
 5e6:	de b7       	in	r29, 0x3e	; 62
 5e8:	9c 83       	std	Y+4, r25	; 0x04
 5ea:	8b 83       	std	Y+3, r24	; 0x03
 5ec:	dc 01       	movw	r26, r24
 5ee:	1a 96       	adiw	r26, 0x0a	; 10
 5f0:	8c 91       	ld	r24, X
 5f2:	81 11       	cpse	r24, r1
 5f4:	95 c0       	rjmp	.+298    	; 0x720 <draw_sprite+0x164>
 5f6:	a0 c0       	rjmp	.+320    	; 0x738 <draw_sprite+0x17c>
 5f8:	b6 01       	movw	r22, r12
 5fa:	88 27       	eor	r24, r24
 5fc:	77 fd       	sbrc	r23, 7
 5fe:	80 95       	com	r24
 600:	98 2f       	mov	r25, r24
 602:	be de       	rcall	.-644    	; 0x380 <__floatsisf>
 604:	eb 81       	ldd	r30, Y+3	; 0x03
 606:	fc 81       	ldd	r31, Y+4	; 0x04
 608:	24 81       	ldd	r18, Z+4	; 0x04
 60a:	35 81       	ldd	r19, Z+5	; 0x05
 60c:	46 81       	ldd	r20, Z+6	; 0x06
 60e:	57 81       	ldd	r21, Z+7	; 0x07
 610:	d2 d0       	rcall	.+420    	; 0x7b6 <__addsf3>
 612:	96 2e       	mov	r9, r22
 614:	87 2e       	mov	r8, r23
 616:	78 2e       	mov	r7, r24
 618:	69 2e       	mov	r6, r25
 61a:	20 e0       	ldi	r18, 0x00	; 0
 61c:	30 e0       	ldi	r19, 0x00	; 0
 61e:	a9 01       	movw	r20, r18
 620:	d4 01       	movw	r26, r8
 622:	f3 01       	movw	r30, r6
 624:	6b 2f       	mov	r22, r27
 626:	7a 2f       	mov	r23, r26
 628:	8f 2f       	mov	r24, r31
 62a:	9e 2f       	mov	r25, r30
 62c:	a3 de       	rcall	.-698    	; 0x374 <__cmpsf2>
 62e:	87 fd       	sbrc	r24, 7
 630:	73 c0       	rjmp	.+230    	; 0x718 <draw_sprite+0x15c>
 632:	20 e0       	ldi	r18, 0x00	; 0
 634:	30 e0       	ldi	r19, 0x00	; 0
 636:	40 e4       	ldi	r20, 0x40	; 64
 638:	52 e4       	ldi	r21, 0x42	; 66
 63a:	d4 01       	movw	r26, r8
 63c:	f3 01       	movw	r30, r6
 63e:	6b 2f       	mov	r22, r27
 640:	7a 2f       	mov	r23, r26
 642:	8f 2f       	mov	r24, r31
 644:	9e 2f       	mov	r25, r30
 646:	fb de       	rcall	.-522    	; 0x43e <__gesf2>
 648:	87 ff       	sbrs	r24, 7
 64a:	76 c0       	rjmp	.+236    	; 0x738 <draw_sprite+0x17c>
 64c:	20 e8       	ldi	r18, 0x80	; 128
 64e:	a2 2e       	mov	r10, r18
 650:	b1 2c       	mov	r11, r1
 652:	e1 2c       	mov	r14, r1
 654:	f1 2c       	mov	r15, r1
 656:	52 c0       	rjmp	.+164    	; 0x6fc <draw_sprite+0x140>
 658:	ab 81       	ldd	r26, Y+3	; 0x03
 65a:	bc 81       	ldd	r27, Y+4	; 0x04
 65c:	1b 96       	adiw	r26, 0x0b	; 11
 65e:	ed 91       	ld	r30, X+
 660:	fc 91       	ld	r31, X
 662:	1c 97       	sbiw	r26, 0x0c	; 12
 664:	e0 0f       	add	r30, r16
 666:	f1 1f       	adc	r31, r17
 668:	b0 81       	ld	r27, Z
 66a:	b9 83       	std	Y+1, r27	; 0x01
 66c:	b7 01       	movw	r22, r14
 66e:	88 27       	eor	r24, r24
 670:	77 fd       	sbrc	r23, 7
 672:	80 95       	com	r24
 674:	98 2f       	mov	r25, r24
 676:	84 de       	rcall	.-760    	; 0x380 <__floatsisf>
 678:	eb 81       	ldd	r30, Y+3	; 0x03
 67a:	fc 81       	ldd	r31, Y+4	; 0x04
 67c:	20 81       	ld	r18, Z
 67e:	31 81       	ldd	r19, Z+1	; 0x01
 680:	42 81       	ldd	r20, Z+2	; 0x02
 682:	53 81       	ldd	r21, Z+3	; 0x03
 684:	98 d0       	rcall	.+304    	; 0x7b6 <__addsf3>
 686:	1b 01       	movw	r2, r22
 688:	2c 01       	movw	r4, r24
 68a:	20 e0       	ldi	r18, 0x00	; 0
 68c:	30 e0       	ldi	r19, 0x00	; 0
 68e:	a9 01       	movw	r20, r18
 690:	73 2d       	mov	r23, r3
 692:	95 2d       	mov	r25, r5
 694:	d4 de       	rcall	.-600    	; 0x43e <__gesf2>
 696:	87 fd       	sbrc	r24, 7
 698:	21 c0       	rjmp	.+66     	; 0x6dc <draw_sprite+0x120>
 69a:	20 e0       	ldi	r18, 0x00	; 0
 69c:	30 e0       	ldi	r19, 0x00	; 0
 69e:	48 ea       	ldi	r20, 0xA8	; 168
 6a0:	52 e4       	ldi	r21, 0x42	; 66
 6a2:	62 2d       	mov	r22, r2
 6a4:	73 2d       	mov	r23, r3
 6a6:	84 2d       	mov	r24, r4
 6a8:	95 2d       	mov	r25, r5
 6aa:	64 de       	rcall	.-824    	; 0x374 <__cmpsf2>
 6ac:	87 ff       	sbrs	r24, 7
 6ae:	16 c0       	rjmp	.+44     	; 0x6dc <draw_sprite+0x120>
 6b0:	89 81       	ldd	r24, Y+1	; 0x01
 6b2:	8a 21       	and	r24, r10
 6b4:	99 f0       	breq	.+38     	; 0x6dc <draw_sprite+0x120>
 6b6:	a4 01       	movw	r20, r8
 6b8:	93 01       	movw	r18, r6
 6ba:	65 2f       	mov	r22, r21
 6bc:	78 2d       	mov	r23, r8
 6be:	83 2f       	mov	r24, r19
 6c0:	96 2d       	mov	r25, r6
 6c2:	dd d0       	rcall	.+442    	; 0x87e <__fixunssfsi>
 6c4:	26 2f       	mov	r18, r22
 6c6:	62 2d       	mov	r22, r2
 6c8:	73 2d       	mov	r23, r3
 6ca:	84 2d       	mov	r24, r4
 6cc:	95 2d       	mov	r25, r5
 6ce:	2a 83       	std	Y+2, r18	; 0x02
 6d0:	d6 d0       	rcall	.+428    	; 0x87e <__fixunssfsi>
 6d2:	86 2f       	mov	r24, r22
 6d4:	41 e0       	ldi	r20, 0x01	; 1
 6d6:	2a 81       	ldd	r18, Y+2	; 0x02
 6d8:	62 2f       	mov	r22, r18
 6da:	ce de       	rcall	.-612    	; 0x478 <set_pixel>
 6dc:	ff ef       	ldi	r31, 0xFF	; 255
 6de:	ef 1a       	sub	r14, r31
 6e0:	ff 0a       	sbc	r15, r31
 6e2:	c7 01       	movw	r24, r14
 6e4:	87 70       	andi	r24, 0x07	; 7
 6e6:	99 27       	eor	r25, r25
 6e8:	89 2b       	or	r24, r25
 6ea:	31 f4       	brne	.+12     	; 0x6f8 <draw_sprite+0x13c>
 6ec:	0f 5f       	subi	r16, 0xFF	; 255
 6ee:	1f 4f       	sbci	r17, 0xFF	; 255
 6f0:	90 e8       	ldi	r25, 0x80	; 128
 6f2:	a9 2e       	mov	r10, r25
 6f4:	b1 2c       	mov	r11, r1
 6f6:	02 c0       	rjmp	.+4      	; 0x6fc <draw_sprite+0x140>
 6f8:	b5 94       	asr	r11
 6fa:	a7 94       	ror	r10
 6fc:	ab 81       	ldd	r26, Y+3	; 0x03
 6fe:	bc 81       	ldd	r27, Y+4	; 0x04
 700:	18 96       	adiw	r26, 0x08	; 8
 702:	2c 91       	ld	r18, X
 704:	82 2f       	mov	r24, r18
 706:	90 e0       	ldi	r25, 0x00	; 0
 708:	e8 16       	cp	r14, r24
 70a:	f9 06       	cpc	r15, r25
 70c:	0c f4       	brge	.+2      	; 0x710 <draw_sprite+0x154>
 70e:	a4 cf       	rjmp	.-184    	; 0x658 <draw_sprite+0x9c>
 710:	27 70       	andi	r18, 0x07	; 7
 712:	11 f0       	breq	.+4      	; 0x718 <draw_sprite+0x15c>
 714:	0f 5f       	subi	r16, 0xFF	; 255
 716:	1f 4f       	sbci	r17, 0xFF	; 255
 718:	bf ef       	ldi	r27, 0xFF	; 255
 71a:	cb 1a       	sub	r12, r27
 71c:	db 0a       	sbc	r13, r27
 71e:	04 c0       	rjmp	.+8      	; 0x728 <draw_sprite+0x16c>
 720:	c1 2c       	mov	r12, r1
 722:	d1 2c       	mov	r13, r1
 724:	00 e0       	ldi	r16, 0x00	; 0
 726:	10 e0       	ldi	r17, 0x00	; 0
 728:	eb 81       	ldd	r30, Y+3	; 0x03
 72a:	fc 81       	ldd	r31, Y+4	; 0x04
 72c:	81 85       	ldd	r24, Z+9	; 0x09
 72e:	90 e0       	ldi	r25, 0x00	; 0
 730:	c8 16       	cp	r12, r24
 732:	d9 06       	cpc	r13, r25
 734:	0c f4       	brge	.+2      	; 0x738 <draw_sprite+0x17c>
 736:	60 cf       	rjmp	.-320    	; 0x5f8 <draw_sprite+0x3c>
 738:	0f 90       	pop	r0
 73a:	0f 90       	pop	r0
 73c:	0f 90       	pop	r0
 73e:	0f 90       	pop	r0
 740:	df 91       	pop	r29
 742:	cf 91       	pop	r28
 744:	1f 91       	pop	r17
 746:	0f 91       	pop	r16
 748:	ff 90       	pop	r15
 74a:	ef 90       	pop	r14
 74c:	df 90       	pop	r13
 74e:	cf 90       	pop	r12
 750:	bf 90       	pop	r11
 752:	af 90       	pop	r10
 754:	9f 90       	pop	r9
 756:	8f 90       	pop	r8
 758:	7f 90       	pop	r7
 75a:	6f 90       	pop	r6
 75c:	5f 90       	pop	r5
 75e:	4f 90       	pop	r4
 760:	3f 90       	pop	r3
 762:	2f 90       	pop	r2
 764:	08 95       	ret

00000766 <__divmodhi4>:
 766:	97 fb       	bst	r25, 7
 768:	07 2e       	mov	r0, r23
 76a:	16 f4       	brtc	.+4      	; 0x770 <__divmodhi4+0xa>
 76c:	00 94       	com	r0
 76e:	06 d0       	rcall	.+12     	; 0x77c <__divmodhi4_neg1>
 770:	77 fd       	sbrc	r23, 7
 772:	08 d0       	rcall	.+16     	; 0x784 <__divmodhi4_neg2>
 774:	0b d0       	rcall	.+22     	; 0x78c <__udivmodhi4>
 776:	07 fc       	sbrc	r0, 7
 778:	05 d0       	rcall	.+10     	; 0x784 <__divmodhi4_neg2>
 77a:	3e f4       	brtc	.+14     	; 0x78a <__divmodhi4_exit>

0000077c <__divmodhi4_neg1>:
 77c:	90 95       	com	r25
 77e:	81 95       	neg	r24
 780:	9f 4f       	sbci	r25, 0xFF	; 255
 782:	08 95       	ret

00000784 <__divmodhi4_neg2>:
 784:	70 95       	com	r23
 786:	61 95       	neg	r22
 788:	7f 4f       	sbci	r23, 0xFF	; 255

0000078a <__divmodhi4_exit>:
 78a:	08 95       	ret

0000078c <__udivmodhi4>:
 78c:	aa 1b       	sub	r26, r26
 78e:	bb 1b       	sub	r27, r27
 790:	51 e1       	ldi	r21, 0x11	; 17
 792:	07 c0       	rjmp	.+14     	; 0x7a2 <__udivmodhi4_ep>

00000794 <__udivmodhi4_loop>:
 794:	aa 1f       	adc	r26, r26
 796:	bb 1f       	adc	r27, r27
 798:	a6 17       	cp	r26, r22
 79a:	b7 07       	cpc	r27, r23
 79c:	10 f0       	brcs	.+4      	; 0x7a2 <__udivmodhi4_ep>
 79e:	a6 1b       	sub	r26, r22
 7a0:	b7 0b       	sbc	r27, r23

000007a2 <__udivmodhi4_ep>:
 7a2:	88 1f       	adc	r24, r24
 7a4:	99 1f       	adc	r25, r25
 7a6:	5a 95       	dec	r21
 7a8:	a9 f7       	brne	.-22     	; 0x794 <__udivmodhi4_loop>
 7aa:	80 95       	com	r24
 7ac:	90 95       	com	r25
 7ae:	bc 01       	movw	r22, r24
 7b0:	cd 01       	movw	r24, r26
 7b2:	08 95       	ret

000007b4 <__subsf3>:
 7b4:	50 58       	subi	r21, 0x80	; 128

000007b6 <__addsf3>:
 7b6:	bb 27       	eor	r27, r27
 7b8:	aa 27       	eor	r26, r26
 7ba:	0e d0       	rcall	.+28     	; 0x7d8 <__addsf3x>
 7bc:	a3 c0       	rjmp	.+326    	; 0x904 <__fp_round>
 7be:	94 d0       	rcall	.+296    	; 0x8e8 <__fp_pscA>
 7c0:	30 f0       	brcs	.+12     	; 0x7ce <__addsf3+0x18>
 7c2:	99 d0       	rcall	.+306    	; 0x8f6 <__fp_pscB>
 7c4:	20 f0       	brcs	.+8      	; 0x7ce <__addsf3+0x18>
 7c6:	31 f4       	brne	.+12     	; 0x7d4 <__addsf3+0x1e>
 7c8:	9f 3f       	cpi	r25, 0xFF	; 255
 7ca:	11 f4       	brne	.+4      	; 0x7d0 <__addsf3+0x1a>
 7cc:	1e f4       	brtc	.+6      	; 0x7d4 <__addsf3+0x1e>
 7ce:	89 c0       	rjmp	.+274    	; 0x8e2 <__fp_nan>
 7d0:	0e f4       	brtc	.+2      	; 0x7d4 <__addsf3+0x1e>
 7d2:	e0 95       	com	r30
 7d4:	e7 fb       	bst	r30, 7
 7d6:	7f c0       	rjmp	.+254    	; 0x8d6 <__fp_inf>

000007d8 <__addsf3x>:
 7d8:	e9 2f       	mov	r30, r25
 7da:	a5 d0       	rcall	.+330    	; 0x926 <__fp_split3>
 7dc:	80 f3       	brcs	.-32     	; 0x7be <__addsf3+0x8>
 7de:	ba 17       	cp	r27, r26
 7e0:	62 07       	cpc	r22, r18
 7e2:	73 07       	cpc	r23, r19
 7e4:	84 07       	cpc	r24, r20
 7e6:	95 07       	cpc	r25, r21
 7e8:	18 f0       	brcs	.+6      	; 0x7f0 <__addsf3x+0x18>
 7ea:	71 f4       	brne	.+28     	; 0x808 <__addsf3x+0x30>
 7ec:	9e f5       	brtc	.+102    	; 0x854 <__addsf3x+0x7c>
 7ee:	bd c0       	rjmp	.+378    	; 0x96a <__fp_zero>
 7f0:	0e f4       	brtc	.+2      	; 0x7f4 <__addsf3x+0x1c>
 7f2:	e0 95       	com	r30
 7f4:	0b 2e       	mov	r0, r27
 7f6:	ba 2f       	mov	r27, r26
 7f8:	a0 2d       	mov	r26, r0
 7fa:	0b 01       	movw	r0, r22
 7fc:	b9 01       	movw	r22, r18
 7fe:	90 01       	movw	r18, r0
 800:	0c 01       	movw	r0, r24
 802:	ca 01       	movw	r24, r20
 804:	a0 01       	movw	r20, r0
 806:	11 24       	eor	r1, r1
 808:	ff 27       	eor	r31, r31
 80a:	59 1b       	sub	r21, r25
 80c:	99 f0       	breq	.+38     	; 0x834 <__addsf3x+0x5c>
 80e:	59 3f       	cpi	r21, 0xF9	; 249
 810:	50 f4       	brcc	.+20     	; 0x826 <__addsf3x+0x4e>
 812:	50 3e       	cpi	r21, 0xE0	; 224
 814:	68 f1       	brcs	.+90     	; 0x870 <__addsf3x+0x98>
 816:	1a 16       	cp	r1, r26
 818:	f0 40       	sbci	r31, 0x00	; 0
 81a:	a2 2f       	mov	r26, r18
 81c:	23 2f       	mov	r18, r19
 81e:	34 2f       	mov	r19, r20
 820:	44 27       	eor	r20, r20
 822:	58 5f       	subi	r21, 0xF8	; 248
 824:	f3 cf       	rjmp	.-26     	; 0x80c <__addsf3x+0x34>
 826:	46 95       	lsr	r20
 828:	37 95       	ror	r19
 82a:	27 95       	ror	r18
 82c:	a7 95       	ror	r26
 82e:	f0 40       	sbci	r31, 0x00	; 0
 830:	53 95       	inc	r21
 832:	c9 f7       	brne	.-14     	; 0x826 <__addsf3x+0x4e>
 834:	7e f4       	brtc	.+30     	; 0x854 <__addsf3x+0x7c>
 836:	1f 16       	cp	r1, r31
 838:	ba 0b       	sbc	r27, r26
 83a:	62 0b       	sbc	r22, r18
 83c:	73 0b       	sbc	r23, r19
 83e:	84 0b       	sbc	r24, r20
 840:	ba f0       	brmi	.+46     	; 0x870 <__addsf3x+0x98>
 842:	91 50       	subi	r25, 0x01	; 1
 844:	a1 f0       	breq	.+40     	; 0x86e <__addsf3x+0x96>
 846:	ff 0f       	add	r31, r31
 848:	bb 1f       	adc	r27, r27
 84a:	66 1f       	adc	r22, r22
 84c:	77 1f       	adc	r23, r23
 84e:	88 1f       	adc	r24, r24
 850:	c2 f7       	brpl	.-16     	; 0x842 <__addsf3x+0x6a>
 852:	0e c0       	rjmp	.+28     	; 0x870 <__addsf3x+0x98>
 854:	ba 0f       	add	r27, r26
 856:	62 1f       	adc	r22, r18
 858:	73 1f       	adc	r23, r19
 85a:	84 1f       	adc	r24, r20
 85c:	48 f4       	brcc	.+18     	; 0x870 <__addsf3x+0x98>
 85e:	87 95       	ror	r24
 860:	77 95       	ror	r23
 862:	67 95       	ror	r22
 864:	b7 95       	ror	r27
 866:	f7 95       	ror	r31
 868:	9e 3f       	cpi	r25, 0xFE	; 254
 86a:	08 f0       	brcs	.+2      	; 0x86e <__addsf3x+0x96>
 86c:	b3 cf       	rjmp	.-154    	; 0x7d4 <__addsf3+0x1e>
 86e:	93 95       	inc	r25
 870:	88 0f       	add	r24, r24
 872:	08 f0       	brcs	.+2      	; 0x876 <__addsf3x+0x9e>
 874:	99 27       	eor	r25, r25
 876:	ee 0f       	add	r30, r30
 878:	97 95       	ror	r25
 87a:	87 95       	ror	r24
 87c:	08 95       	ret

0000087e <__fixunssfsi>:
 87e:	5b d0       	rcall	.+182    	; 0x936 <__fp_splitA>
 880:	88 f0       	brcs	.+34     	; 0x8a4 <__fixunssfsi+0x26>
 882:	9f 57       	subi	r25, 0x7F	; 127
 884:	90 f0       	brcs	.+36     	; 0x8aa <__fixunssfsi+0x2c>
 886:	b9 2f       	mov	r27, r25
 888:	99 27       	eor	r25, r25
 88a:	b7 51       	subi	r27, 0x17	; 23
 88c:	a0 f0       	brcs	.+40     	; 0x8b6 <__fixunssfsi+0x38>
 88e:	d1 f0       	breq	.+52     	; 0x8c4 <__fixunssfsi+0x46>
 890:	66 0f       	add	r22, r22
 892:	77 1f       	adc	r23, r23
 894:	88 1f       	adc	r24, r24
 896:	99 1f       	adc	r25, r25
 898:	1a f0       	brmi	.+6      	; 0x8a0 <__fixunssfsi+0x22>
 89a:	ba 95       	dec	r27
 89c:	c9 f7       	brne	.-14     	; 0x890 <__fixunssfsi+0x12>
 89e:	12 c0       	rjmp	.+36     	; 0x8c4 <__fixunssfsi+0x46>
 8a0:	b1 30       	cpi	r27, 0x01	; 1
 8a2:	81 f0       	breq	.+32     	; 0x8c4 <__fixunssfsi+0x46>
 8a4:	62 d0       	rcall	.+196    	; 0x96a <__fp_zero>
 8a6:	b1 e0       	ldi	r27, 0x01	; 1
 8a8:	08 95       	ret
 8aa:	5f c0       	rjmp	.+190    	; 0x96a <__fp_zero>
 8ac:	67 2f       	mov	r22, r23
 8ae:	78 2f       	mov	r23, r24
 8b0:	88 27       	eor	r24, r24
 8b2:	b8 5f       	subi	r27, 0xF8	; 248
 8b4:	39 f0       	breq	.+14     	; 0x8c4 <__fixunssfsi+0x46>
 8b6:	b9 3f       	cpi	r27, 0xF9	; 249
 8b8:	cc f3       	brlt	.-14     	; 0x8ac <__fixunssfsi+0x2e>
 8ba:	86 95       	lsr	r24
 8bc:	77 95       	ror	r23
 8be:	67 95       	ror	r22
 8c0:	b3 95       	inc	r27
 8c2:	d9 f7       	brne	.-10     	; 0x8ba <__fixunssfsi+0x3c>
 8c4:	3e f4       	brtc	.+14     	; 0x8d4 <__fixunssfsi+0x56>
 8c6:	90 95       	com	r25
 8c8:	80 95       	com	r24
 8ca:	70 95       	com	r23
 8cc:	61 95       	neg	r22
 8ce:	7f 4f       	sbci	r23, 0xFF	; 255
 8d0:	8f 4f       	sbci	r24, 0xFF	; 255
 8d2:	9f 4f       	sbci	r25, 0xFF	; 255
 8d4:	08 95       	ret

000008d6 <__fp_inf>:
 8d6:	97 f9       	bld	r25, 7
 8d8:	9f 67       	ori	r25, 0x7F	; 127
 8da:	80 e8       	ldi	r24, 0x80	; 128
 8dc:	70 e0       	ldi	r23, 0x00	; 0
 8de:	60 e0       	ldi	r22, 0x00	; 0
 8e0:	08 95       	ret

000008e2 <__fp_nan>:
 8e2:	9f ef       	ldi	r25, 0xFF	; 255
 8e4:	80 ec       	ldi	r24, 0xC0	; 192
 8e6:	08 95       	ret

000008e8 <__fp_pscA>:
 8e8:	00 24       	eor	r0, r0
 8ea:	0a 94       	dec	r0
 8ec:	16 16       	cp	r1, r22
 8ee:	17 06       	cpc	r1, r23
 8f0:	18 06       	cpc	r1, r24
 8f2:	09 06       	cpc	r0, r25
 8f4:	08 95       	ret

000008f6 <__fp_pscB>:
 8f6:	00 24       	eor	r0, r0
 8f8:	0a 94       	dec	r0
 8fa:	12 16       	cp	r1, r18
 8fc:	13 06       	cpc	r1, r19
 8fe:	14 06       	cpc	r1, r20
 900:	05 06       	cpc	r0, r21
 902:	08 95       	ret

00000904 <__fp_round>:
 904:	09 2e       	mov	r0, r25
 906:	03 94       	inc	r0
 908:	00 0c       	add	r0, r0
 90a:	11 f4       	brne	.+4      	; 0x910 <__fp_round+0xc>
 90c:	88 23       	and	r24, r24
 90e:	52 f0       	brmi	.+20     	; 0x924 <__fp_round+0x20>
 910:	bb 0f       	add	r27, r27
 912:	40 f4       	brcc	.+16     	; 0x924 <__fp_round+0x20>
 914:	bf 2b       	or	r27, r31
 916:	11 f4       	brne	.+4      	; 0x91c <__fp_round+0x18>
 918:	60 ff       	sbrs	r22, 0
 91a:	04 c0       	rjmp	.+8      	; 0x924 <__fp_round+0x20>
 91c:	6f 5f       	subi	r22, 0xFF	; 255
 91e:	7f 4f       	sbci	r23, 0xFF	; 255
 920:	8f 4f       	sbci	r24, 0xFF	; 255
 922:	9f 4f       	sbci	r25, 0xFF	; 255
 924:	08 95       	ret

00000926 <__fp_split3>:
 926:	57 fd       	sbrc	r21, 7
 928:	90 58       	subi	r25, 0x80	; 128
 92a:	44 0f       	add	r20, r20
 92c:	55 1f       	adc	r21, r21
 92e:	59 f0       	breq	.+22     	; 0x946 <__fp_splitA+0x10>
 930:	5f 3f       	cpi	r21, 0xFF	; 255
 932:	71 f0       	breq	.+28     	; 0x950 <__fp_splitA+0x1a>
 934:	47 95       	ror	r20

00000936 <__fp_splitA>:
 936:	88 0f       	add	r24, r24
 938:	97 fb       	bst	r25, 7
 93a:	99 1f       	adc	r25, r25
 93c:	61 f0       	breq	.+24     	; 0x956 <__fp_splitA+0x20>
 93e:	9f 3f       	cpi	r25, 0xFF	; 255
 940:	79 f0       	breq	.+30     	; 0x960 <__fp_splitA+0x2a>
 942:	87 95       	ror	r24
 944:	08 95       	ret
 946:	12 16       	cp	r1, r18
 948:	13 06       	cpc	r1, r19
 94a:	14 06       	cpc	r1, r20
 94c:	55 1f       	adc	r21, r21
 94e:	f2 cf       	rjmp	.-28     	; 0x934 <__fp_split3+0xe>
 950:	46 95       	lsr	r20
 952:	f1 df       	rcall	.-30     	; 0x936 <__fp_splitA>
 954:	08 c0       	rjmp	.+16     	; 0x966 <__fp_splitA+0x30>
 956:	16 16       	cp	r1, r22
 958:	17 06       	cpc	r1, r23
 95a:	18 06       	cpc	r1, r24
 95c:	99 1f       	adc	r25, r25
 95e:	f1 cf       	rjmp	.-30     	; 0x942 <__fp_splitA+0xc>
 960:	86 95       	lsr	r24
 962:	71 05       	cpc	r23, r1
 964:	61 05       	cpc	r22, r1
 966:	08 94       	sec
 968:	08 95       	ret

0000096a <__fp_zero>:
 96a:	e8 94       	clt

0000096c <__fp_szero>:
 96c:	bb 27       	eor	r27, r27
 96e:	66 27       	eor	r22, r22
 970:	77 27       	eor	r23, r23
 972:	cb 01       	movw	r24, r22
 974:	97 f9       	bld	r25, 7
 976:	08 95       	ret

00000978 <do_rand>:
 978:	8f 92       	push	r8
 97a:	9f 92       	push	r9
 97c:	af 92       	push	r10
 97e:	bf 92       	push	r11
 980:	cf 92       	push	r12
 982:	df 92       	push	r13
 984:	ef 92       	push	r14
 986:	ff 92       	push	r15
 988:	cf 93       	push	r28
 98a:	df 93       	push	r29
 98c:	ec 01       	movw	r28, r24
 98e:	68 81       	ld	r22, Y
 990:	79 81       	ldd	r23, Y+1	; 0x01
 992:	8a 81       	ldd	r24, Y+2	; 0x02
 994:	9b 81       	ldd	r25, Y+3	; 0x03
 996:	61 15       	cp	r22, r1
 998:	71 05       	cpc	r23, r1
 99a:	81 05       	cpc	r24, r1
 99c:	91 05       	cpc	r25, r1
 99e:	21 f4       	brne	.+8      	; 0x9a8 <do_rand+0x30>
 9a0:	64 e2       	ldi	r22, 0x24	; 36
 9a2:	79 ed       	ldi	r23, 0xD9	; 217
 9a4:	8b e5       	ldi	r24, 0x5B	; 91
 9a6:	97 e0       	ldi	r25, 0x07	; 7
 9a8:	2d e1       	ldi	r18, 0x1D	; 29
 9aa:	33 ef       	ldi	r19, 0xF3	; 243
 9ac:	41 e0       	ldi	r20, 0x01	; 1
 9ae:	50 e0       	ldi	r21, 0x00	; 0
 9b0:	3d d0       	rcall	.+122    	; 0xa2c <__divmodsi4>
 9b2:	49 01       	movw	r8, r18
 9b4:	5a 01       	movw	r10, r20
 9b6:	9b 01       	movw	r18, r22
 9b8:	ac 01       	movw	r20, r24
 9ba:	a7 ea       	ldi	r26, 0xA7	; 167
 9bc:	b1 e4       	ldi	r27, 0x41	; 65
 9be:	51 d0       	rcall	.+162    	; 0xa62 <__muluhisi3>
 9c0:	6b 01       	movw	r12, r22
 9c2:	7c 01       	movw	r14, r24
 9c4:	ac ee       	ldi	r26, 0xEC	; 236
 9c6:	b4 ef       	ldi	r27, 0xF4	; 244
 9c8:	a5 01       	movw	r20, r10
 9ca:	94 01       	movw	r18, r8
 9cc:	56 d0       	rcall	.+172    	; 0xa7a <__mulohisi3>
 9ce:	c6 0e       	add	r12, r22
 9d0:	d7 1e       	adc	r13, r23
 9d2:	e8 1e       	adc	r14, r24
 9d4:	f9 1e       	adc	r15, r25
 9d6:	f7 fe       	sbrs	r15, 7
 9d8:	06 c0       	rjmp	.+12     	; 0x9e6 <do_rand+0x6e>
 9da:	81 e0       	ldi	r24, 0x01	; 1
 9dc:	c8 1a       	sub	r12, r24
 9de:	d1 08       	sbc	r13, r1
 9e0:	e1 08       	sbc	r14, r1
 9e2:	80 e8       	ldi	r24, 0x80	; 128
 9e4:	f8 0a       	sbc	r15, r24
 9e6:	c8 82       	st	Y, r12
 9e8:	d9 82       	std	Y+1, r13	; 0x01
 9ea:	ea 82       	std	Y+2, r14	; 0x02
 9ec:	fb 82       	std	Y+3, r15	; 0x03
 9ee:	e8 94       	clt
 9f0:	d7 f8       	bld	r13, 7
 9f2:	ee 24       	eor	r14, r14
 9f4:	ff 24       	eor	r15, r15
 9f6:	c6 01       	movw	r24, r12
 9f8:	df 91       	pop	r29
 9fa:	cf 91       	pop	r28
 9fc:	ff 90       	pop	r15
 9fe:	ef 90       	pop	r14
 a00:	df 90       	pop	r13
 a02:	cf 90       	pop	r12
 a04:	bf 90       	pop	r11
 a06:	af 90       	pop	r10
 a08:	9f 90       	pop	r9
 a0a:	8f 90       	pop	r8
 a0c:	08 95       	ret

00000a0e <rand_r>:
 a0e:	b4 cf       	rjmp	.-152    	; 0x978 <do_rand>

00000a10 <rand>:
 a10:	80 e0       	ldi	r24, 0x00	; 0
 a12:	91 e0       	ldi	r25, 0x01	; 1
 a14:	b1 cf       	rjmp	.-158    	; 0x978 <do_rand>

00000a16 <srand>:
 a16:	a0 e0       	ldi	r26, 0x00	; 0
 a18:	b0 e0       	ldi	r27, 0x00	; 0
 a1a:	80 93 00 01 	sts	0x0100, r24
 a1e:	90 93 01 01 	sts	0x0101, r25
 a22:	a0 93 02 01 	sts	0x0102, r26
 a26:	b0 93 03 01 	sts	0x0103, r27
 a2a:	08 95       	ret

00000a2c <__divmodsi4>:
 a2c:	05 2e       	mov	r0, r21
 a2e:	97 fb       	bst	r25, 7
 a30:	16 f4       	brtc	.+4      	; 0xa36 <__divmodsi4+0xa>
 a32:	00 94       	com	r0
 a34:	06 d0       	rcall	.+12     	; 0xa42 <__divmodsi4_neg1>
 a36:	57 fd       	sbrc	r21, 7
 a38:	0c d0       	rcall	.+24     	; 0xa52 <__divmodsi4_neg2>
 a3a:	23 d0       	rcall	.+70     	; 0xa82 <__udivmodsi4>
 a3c:	07 fc       	sbrc	r0, 7
 a3e:	09 d0       	rcall	.+18     	; 0xa52 <__divmodsi4_neg2>
 a40:	7e f4       	brtc	.+30     	; 0xa60 <__divmodsi4_exit>

00000a42 <__divmodsi4_neg1>:
 a42:	90 95       	com	r25
 a44:	80 95       	com	r24
 a46:	70 95       	com	r23
 a48:	61 95       	neg	r22
 a4a:	7f 4f       	sbci	r23, 0xFF	; 255
 a4c:	8f 4f       	sbci	r24, 0xFF	; 255
 a4e:	9f 4f       	sbci	r25, 0xFF	; 255
 a50:	08 95       	ret

00000a52 <__divmodsi4_neg2>:
 a52:	50 95       	com	r21
 a54:	40 95       	com	r20
 a56:	30 95       	com	r19
 a58:	21 95       	neg	r18
 a5a:	3f 4f       	sbci	r19, 0xFF	; 255
 a5c:	4f 4f       	sbci	r20, 0xFF	; 255
 a5e:	5f 4f       	sbci	r21, 0xFF	; 255

00000a60 <__divmodsi4_exit>:
 a60:	08 95       	ret

00000a62 <__muluhisi3>:
 a62:	31 d0       	rcall	.+98     	; 0xac6 <__umulhisi3>
 a64:	a5 9f       	mul	r26, r21
 a66:	90 0d       	add	r25, r0
 a68:	b4 9f       	mul	r27, r20
 a6a:	90 0d       	add	r25, r0
 a6c:	a4 9f       	mul	r26, r20
 a6e:	80 0d       	add	r24, r0
 a70:	91 1d       	adc	r25, r1
 a72:	11 24       	eor	r1, r1
 a74:	08 95       	ret

00000a76 <__mulshisi3>:
 a76:	b7 ff       	sbrs	r27, 7
 a78:	f4 cf       	rjmp	.-24     	; 0xa62 <__muluhisi3>

00000a7a <__mulohisi3>:
 a7a:	f3 df       	rcall	.-26     	; 0xa62 <__muluhisi3>
 a7c:	82 1b       	sub	r24, r18
 a7e:	93 0b       	sbc	r25, r19
 a80:	08 95       	ret

00000a82 <__udivmodsi4>:
 a82:	a1 e2       	ldi	r26, 0x21	; 33
 a84:	1a 2e       	mov	r1, r26
 a86:	aa 1b       	sub	r26, r26
 a88:	bb 1b       	sub	r27, r27
 a8a:	fd 01       	movw	r30, r26
 a8c:	0d c0       	rjmp	.+26     	; 0xaa8 <__udivmodsi4_ep>

00000a8e <__udivmodsi4_loop>:
 a8e:	aa 1f       	adc	r26, r26
 a90:	bb 1f       	adc	r27, r27
 a92:	ee 1f       	adc	r30, r30
 a94:	ff 1f       	adc	r31, r31
 a96:	a2 17       	cp	r26, r18
 a98:	b3 07       	cpc	r27, r19
 a9a:	e4 07       	cpc	r30, r20
 a9c:	f5 07       	cpc	r31, r21
 a9e:	20 f0       	brcs	.+8      	; 0xaa8 <__udivmodsi4_ep>
 aa0:	a2 1b       	sub	r26, r18
 aa2:	b3 0b       	sbc	r27, r19
 aa4:	e4 0b       	sbc	r30, r20
 aa6:	f5 0b       	sbc	r31, r21

00000aa8 <__udivmodsi4_ep>:
 aa8:	66 1f       	adc	r22, r22
 aaa:	77 1f       	adc	r23, r23
 aac:	88 1f       	adc	r24, r24
 aae:	99 1f       	adc	r25, r25
 ab0:	1a 94       	dec	r1
 ab2:	69 f7       	brne	.-38     	; 0xa8e <__udivmodsi4_loop>
 ab4:	60 95       	com	r22
 ab6:	70 95       	com	r23
 ab8:	80 95       	com	r24
 aba:	90 95       	com	r25
 abc:	9b 01       	movw	r18, r22
 abe:	ac 01       	movw	r20, r24
 ac0:	bd 01       	movw	r22, r26
 ac2:	cf 01       	movw	r24, r30
 ac4:	08 95       	ret

00000ac6 <__umulhisi3>:
 ac6:	a2 9f       	mul	r26, r18
 ac8:	b0 01       	movw	r22, r0
 aca:	b3 9f       	mul	r27, r19
 acc:	c0 01       	movw	r24, r0
 ace:	a3 9f       	mul	r26, r19
 ad0:	01 d0       	rcall	.+2      	; 0xad4 <__umulhisi3+0xe>
 ad2:	b2 9f       	mul	r27, r18
 ad4:	70 0d       	add	r23, r0
 ad6:	81 1d       	adc	r24, r1
 ad8:	11 24       	eor	r1, r1
 ada:	91 1d       	adc	r25, r1
 adc:	08 95       	ret

00000ade <_exit>:
 ade:	f8 94       	cli

00000ae0 <__stop_program>:
 ae0:	ff cf       	rjmp	.-2      	; 0xae0 <__stop_program>
